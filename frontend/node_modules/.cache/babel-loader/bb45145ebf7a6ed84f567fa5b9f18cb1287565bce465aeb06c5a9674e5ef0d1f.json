{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\mri-web-app\\\\frontend\\\\src\\\\components\\\\ImageUpload\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { message, Upload, Button, Space, Card, Progress, List, Select, Modal, Form, Input, InputNumber } from 'antd';\nimport { UploadOutlined, PlusOutlined } from '@ant-design/icons';\nimport './ImageUpload.css';\nimport { axiosInstance } from '../../utils/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n\n// 图像压缩函数\nconst compressImage = async file => {\n  return new Promise(resolve => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = event => {\n      const img = new Image();\n      img.src = event.target.result;\n      img.onload = () => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n\n        // 计算新的尺寸\n        let width = img.width;\n        let height = img.height;\n        const maxSize = 1200; // 最大尺寸\n\n        if (width > height && width > maxSize) {\n          height = Math.round(height * maxSize / width);\n          width = maxSize;\n        } else if (height > maxSize) {\n          width = Math.round(width * maxSize / height);\n          height = maxSize;\n        }\n        canvas.width = width;\n        canvas.height = height;\n\n        // 绘制压缩后的图像\n        ctx.drawImage(img, 0, 0, width, height);\n\n        // 转换为Blob\n        canvas.toBlob(blob => {\n          resolve(new File([blob], file.name, {\n            type: 'image/jpeg',\n            lastModified: Date.now()\n          }));\n        }, 'image/jpeg', 0.7); // 0.7是压缩质量\n      };\n    };\n  });\n};\nconst ALLOWED_EXTENSIONS = ['.dcm', '.nii', '.nii.gz'];\nconst MAX_FILE_SIZE = 100 * 1024 * 1024; // 100MB\n\nconst ImageUpload = ({\n  selectedPatient,\n  onUploadSuccess,\n  hidePatientSelect,\n  autoProcess = false\n}) => {\n  _s();\n  const [fileList, setFileList] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [uploadedImageId, setUploadedImageId] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [processingLogs, setProcessingLogs] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [imageLoading, setImageLoading] = useState(false);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [form] = Form.useForm();\n\n  // 获取患者列表\n  useEffect(() => {\n    if (!hidePatientSelect) {\n      fetchPatients();\n    }\n  }, [hidePatientSelect]);\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get(`${API_BASE}/api/patients`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      setPatients(response.data.patients);\n    } catch (error) {\n      message.error('获取患者列表失败');\n      console.error('获取患者列表错误:', error);\n    }\n  };\n  const handleCreatePatient = async values => {\n    try {\n      const response = await axios.post(`${API_BASE}/api/patients`, values, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data.success) {\n        message.success('患者创建成功');\n        setShowPatientModal(false);\n        form.resetFields();\n        fetchPatients();\n        form.setFieldsValue({\n          patient: response.data.patient.id\n        });\n      }\n    } catch (error) {\n      message.error('创建患者失败');\n      console.error('创建患者错误:', error);\n    }\n  };\n  const handleUpload = async () => {\n    const patientId = selectedPatient || form.getFieldValue('patient');\n    if (!patientId) {\n      message.error('请先选择患者');\n      return;\n    }\n    setUploading(true);\n    setProgress(0);\n    setProcessingLogs([]);\n    // 不清除预览图，保留用户上传时的预览\n    // setPreviewImage(null);\n\n    try {\n      const formData = new FormData();\n      formData.append('file', fileList[0]);\n      formData.append('patient_id', patientId);\n      const response = await axiosInstance.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        }\n      });\n      console.log('上传响应:', response.data);\n\n      // 检查响应数据\n      if (!response.data) {\n        throw new Error('服务器没有返回数据');\n      }\n      if (response.data.message === '文件上传成功' && response.data.image) {\n        // 成功处理\n        const imageId = response.data.image.id || response.data.image._id;\n        console.log('设置图像ID:', imageId);\n        setUploadedImageId(imageId);\n        message.success('上传成功');\n        setProcessingLogs(prevLogs => [...prevLogs, `文件上传成功: ${response.data.image.filename || fileList[0].name}`]);\n        if (onUploadSuccess) {\n          onUploadSuccess(response.data.image);\n        }\n\n        // 如果服务器返回了预览图数据，直接使用\n        if (response.data.image.preview) {\n          setPreviewImage(`data:image/png;base64,${response.data.image.preview}`);\n          setProcessingLogs(prevLogs => [...prevLogs, '预览图获取成功']);\n        }\n        // 否则尝试单独获取预览图\n        else if (response.data.image.filename) {\n          try {\n            await fetchPreviewImage(response.data.image.filename);\n          } catch (error) {\n            console.error('获取预览图失败，保留原有预览');\n            // 预览获取失败时保留原有预览，不影响后续处理\n          }\n        }\n        console.log('上传完成，uploadedImageId:', imageId, '处理状态:', processing);\n      } else {\n        throw new Error(response.data.message || '上传失败');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('上传错误:', error);\n      setProcessingLogs(prevLogs => [...prevLogs, `上传失败: ${error.message || '未知错误'}`]);\n      message.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || '上传失败');\n    } finally {\n      setUploading(false);\n      setProgress(0);\n      setFileList([]);\n    }\n  };\n  const fetchPreviewImage = async filename => {\n    if (!filename) {\n      console.error('获取预览图失败: 文件名为空');\n      return;\n    }\n    setImageLoading(true);\n    try {\n      // 使用相对路径，让axiosInstance处理baseURL\n      const response = await axiosInstance.get(`/api/preview/${filename}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        // 添加withCredentials配置\n        withCredentials: true\n      });\n      console.log('预览图响应:', response.data);\n      if (response.data.status === 'success' && response.data.image) {\n        setPreviewImage(`data:image/png;base64,${response.data.image}`);\n        setProcessingLogs(prevLogs => [...prevLogs, '预览图生成成功']);\n      } else {\n        throw new Error(response.data.message || '获取预览图失败：服务器返回的数据格式不正确');\n      }\n    } catch (error) {\n      console.error('获取预览图失败:', error);\n      setProcessingLogs(prevLogs => [...prevLogs, `获取预览图失败: ${error.message || '未知错误'}`]);\n      // 不显示错误消息，因为预览图获取失败不影响主要功能\n      // message.error('获取预览图失败');\n    } finally {\n      setImageLoading(false);\n    }\n  };\n  const handleProcess = async (imageId = null) => {\n    const idToProcess = imageId || uploadedImageId;\n    if (!idToProcess) {\n      message.error('请先上传图像');\n      return;\n    }\n    setProcessing(true);\n    setProcessingLogs(prevLogs => [...prevLogs, '开始处理图像...']);\n    try {\n      const response = await axiosInstance.post(`/api/process/${idToProcess}`);\n      console.log('处理响应:', response.data); // 添加日志\n\n      if (response.data.task_id) {\n        message.success('开始处理图像');\n        setProcessingLogs(prevLogs => [...prevLogs, '图像处理任务已创建']);\n        console.log('开始轮询任务状态, task_id:', response.data.task_id); // 添加日志\n        pollProcessingStatus(response.data.task_id);\n      } else if (response.data.status === 'processing' && response.data.task_id) {\n        // 兼容不同的响应格式\n        message.success('开始处理图像');\n        setProcessingLogs(prevLogs => [...prevLogs, '图像处理任务已创建']);\n        console.log('开始轮询任务状态, task_id:', response.data.task_id); // 添加日志\n        pollProcessingStatus(response.data.task_id);\n      } else {\n        throw new Error(response.data.message || '处理失败：未获取到任务ID');\n      }\n    } catch (error) {\n      console.error('处理错误:', error);\n      message.error('处理失败');\n      setProcessingLogs(prevLogs => [...prevLogs, `处理失败: ${error.message || '未知错误'}`]);\n      setProcessing(false);\n    }\n  };\n  const pollProcessingStatus = async taskId => {\n    if (!taskId) {\n      console.error('轮询错误: 未提供taskId');\n      setProcessing(false);\n      setProcessingLogs(prevLogs => [...prevLogs, '轮询错误: 未提供任务ID']);\n      return;\n    }\n    console.log('开始轮询, taskId:', taskId); // 添加日志\n    setProcessing(true);\n    let pollCount = 0;\n    const maxRetries = 3; // 最大重试次数\n    let retryCount = 0;\n    try {\n      // 立即获取一次状态\n      const initialResponse = await axiosInstance.get(`/api/tasks/${taskId}`);\n      console.log('初始状态响应:', initialResponse.data);\n      if (initialResponse.data.status === 'completed' || initialResponse.data.status === 'success') {\n        setProcessing(false);\n        setProgress(100);\n        message.success('处理完成');\n        await fetchResults(taskId);\n        return;\n      }\n      const interval = setInterval(async () => {\n        try {\n          pollCount++;\n          console.log(`第 ${pollCount} 次轮询, taskId: ${taskId}`); // 添加日志\n\n          const response = await axiosInstance.get(`/api/tasks/${taskId}`);\n          console.log('处理状态响应:', response.data);\n          const {\n            status,\n            progress,\n            logs,\n            error,\n            results\n          } = response.data;\n\n          // 更新进度\n          if (typeof progress === 'number') {\n            setProgress(progress);\n          }\n\n          // 更新日志\n          if (Array.isArray(logs) && logs.length > 0) {\n            setProcessingLogs(prevLogs => {\n              const newLogs = logs.filter(log => !prevLogs.includes(log));\n              return [...prevLogs, ...newLogs];\n            });\n          }\n\n          // 处理不同的状态\n          if (status === 'completed' || status === 'success') {\n            console.log('处理完成, 清除轮询'); // 添加日志\n            clearInterval(interval);\n            setProcessing(false);\n            setProgress(100);\n            message.success('处理完成');\n            if (results) {\n              setProcessingLogs(prevLogs => [...prevLogs, '成功获取处理结果']);\n              // 显示结果\n              if (typeof results === 'object') {\n                setProcessingLogs(prevLogs => [...prevLogs, '处理结果:', ...Object.entries(results).map(([key, value]) => `${key}: ${typeof value === 'number' ? value.toFixed(2) : value}`)]);\n              }\n            } else {\n              await fetchResults(taskId);\n            }\n          } else if (status === 'failed' || status === 'error') {\n            console.log('处理失败, 清除轮询'); // 添加日志\n            clearInterval(interval);\n            setProcessing(false);\n            const errorMessage = error || '处理失败';\n            message.error(errorMessage);\n            setProcessingLogs(prevLogs => [...prevLogs, `处理失败: ${errorMessage}`]);\n          } else if (status === 'processing') {\n            console.log(`处理中..., 进度: ${progress}%, 轮询次数: ${pollCount}`); // 添加日志\n            setProcessingLogs(prevLogs => {\n              const progressLog = `处理进度: ${progress}%`;\n              if (!prevLogs.includes(progressLog)) {\n                return [...prevLogs, progressLog];\n              }\n              return prevLogs;\n            });\n            retryCount = 0; // 重置重试计数\n          } else {\n            console.warn('未知的处理状态:', status);\n            setProcessingLogs(prevLogs => [...prevLogs, `未知的处理状态: ${status}`]);\n          }\n        } catch (error) {\n          console.error('获取处理状态失败:', error);\n          retryCount++;\n          if (retryCount >= maxRetries) {\n            console.log(`达到最大重试次数 ${maxRetries}, 停止轮询`); // 添加日志\n            clearInterval(interval);\n            setProcessing(false);\n            setProcessingLogs(prevLogs => [...prevLogs, `轮询失败: ${error.message || '未知错误'}`]);\n            message.error('获取处理状态失败');\n          } else {\n            setProcessingLogs(prevLogs => [...prevLogs, `获取状态失败 (重试 ${retryCount}/${maxRetries}): ${error.message || '未知错误'}`]);\n          }\n        }\n      }, 2000);\n\n      // 设置最大轮询时间（5分钟）\n      const timeoutId = setTimeout(() => {\n        console.log('轮询超时, 清除轮询'); // 添加日志\n        clearInterval(interval);\n        if (processing) {\n          setProcessing(false);\n          setProcessingLogs(prevLogs => [...prevLogs, '处理超时，请检查服务器状态']);\n          message.error('处理超时，请检查服务器状态');\n        }\n      }, 5 * 60 * 1000);\n      return () => {\n        clearInterval(interval);\n        clearTimeout(timeoutId);\n        console.log('轮询已停止');\n      };\n    } catch (error) {\n      console.error('启动轮询失败:', error);\n      setProcessing(false);\n      setProcessingLogs(prevLogs => [...prevLogs, `启动轮询失败: ${error.message || '未知错误'}`]);\n      message.error('获取处理状态失败');\n    }\n  };\n  const fetchResults = async taskId => {\n    try {\n      const response = await axiosInstance.get(`/api/results/${taskId}`);\n      console.log('处理结果:', response.data);\n      if (response.data.status === 'success') {\n        setProcessingLogs(prevLogs => [...prevLogs, '成功获取处理结果']);\n        // 更新界面显示\n        if (response.data.results) {\n          setProcessingLogs(prevLogs => [...prevLogs, '处理结果:', ...Object.entries(response.data.results).map(([key, value]) => `${key}: ${typeof value === 'number' ? value.toFixed(2) : value}`)]);\n        }\n      } else {\n        throw new Error(response.data.message || '获取结果失败');\n      }\n    } catch (error) {\n      console.error('获取结果失败:', error);\n      setProcessingLogs(prevLogs => [...prevLogs, `获取结果失败: ${error.message || '未知错误'}`]);\n      message.error('获取结果失败');\n    }\n  };\n  const validateFile = file => {\n    const extension = '.' + file.name.split('.').pop().toLowerCase();\n    if (!ALLOWED_EXTENSIONS.includes(extension)) {\n      message.error(`不支持的文件类型。支持的类型：${ALLOWED_EXTENSIONS.join(', ')}`);\n      return false;\n    }\n    if (file.size > MAX_FILE_SIZE) {\n      message.error(`文件大小超过限制。最大支持：${MAX_FILE_SIZE / (1024 * 1024)}MB`);\n      return false;\n    }\n    return true;\n  };\n  const uploadProps = {\n    onRemove: file => {\n      const index = fileList.indexOf(file);\n      const newFileList = fileList.slice();\n      newFileList.splice(index, 1);\n      setFileList(newFileList);\n      setPreviewImage(null);\n    },\n    beforeUpload: async file => {\n      if (!validateFile(file)) {\n        return false;\n      }\n\n      // 如果是图像文件，直接预览\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          setPreviewImage(e.target.result);\n          setImageLoading(false);\n        };\n        reader.readAsDataURL(file);\n      } else {\n        // 对于DICOM或NIfTI文件，发送到服务器生成预览\n        setImageLoading(true);\n        try {\n          const formData = new FormData();\n          formData.append('file', file);\n          const response = await axios.post(`${API_BASE}/api/preview`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          if (response.data.status === 'success') {\n            setPreviewImage(`data:image/png;base64,${response.data.image}`);\n          }\n        } catch (error) {\n          console.error('预览生成失败:', error);\n          message.error('无法生成预览图');\n        } finally {\n          setImageLoading(false);\n        }\n      }\n      setFileList([file]);\n      return false;\n    },\n    fileList,\n    accept: ALLOWED_EXTENSIONS.join(',')\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"\\u56FE\\u50CF\\u4E0A\\u4F20\\u4E0E\\u5904\\u7406\",\n    className: \"image-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      style: {\n        width: '100%'\n      },\n      children: [!hidePatientSelect && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"patient-selector\",\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            width: '100%'\n          },\n          placeholder: \"\\u8BF7\\u9009\\u62E9\\u60A3\\u8005\",\n          onChange: value => form.setFieldsValue({\n            patient: value\n          }),\n          options: patients.map(p => ({\n            label: p.name,\n            value: p.id\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 21\n          }, this),\n          onClick: () => setShowPatientModal(true),\n          children: \"\\u65B0\\u5EFA\\u60A3\\u8005\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(Upload, {\n          ...uploadProps,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 27\n            }, this),\n            children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-tips\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u652F\\u6301\\u7684\\u6587\\u4EF6\\u7C7B\\u578B\\uFF1A\", ALLOWED_EXTENSIONS.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u6700\\u5927\\u6587\\u4EF6\\u5927\\u5C0F\\uFF1A\", MAX_FILE_SIZE / (1024 * 1024), \"MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleUpload,\n        disabled: fileList.length === 0 || !selectedPatient && !form.getFieldValue('patient'),\n        loading: uploading,\n        style: {\n          marginTop: 16\n        },\n        children: uploading ? '上传中' : '开始上传'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), progress > 0 && /*#__PURE__*/_jsxDEV(Progress, {\n        percent: progress,\n        status: progress === 100 ? \"success\" : \"active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 11\n      }, this), previewImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-section\",\n        children: imageLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u52A0\\u8F7D\\u9884\\u89C8\\u56FE...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 15\n        }, this) : previewImage === 'error' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\u9884\\u89C8\\u56FE\\u52A0\\u8F7D\\u5931\\u8D25\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewImage,\n          alt: \"\\u9884\\u89C8\",\n          className: \"preview-image\",\n          loading: \"lazy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 11\n      }, this), uploadedImageId && !processing && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => handleProcess(),\n        style: {\n          marginTop: 16\n        },\n        children: \"\\u5F00\\u59CB\\u5904\\u7406\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 11\n      }, this), processing && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          percent: progress,\n          status: progress === 100 ? \"success\" : \"active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginTop: 8\n          },\n          children: \"\\u6B63\\u5728\\u5904\\u7406\\u56FE\\u50CF...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }, this), processingLogs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing-logs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u5904\\u7406\\u65E5\\u5FD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          size: \"small\",\n          bordered: true,\n          dataSource: processingLogs,\n          renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              style: {\n                margin: 0,\n                whiteSpace: 'pre-wrap',\n                wordBreak: 'break-all'\n              },\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: \"\\u65B0\\u5EFA\\u60A3\\u8005\",\n      open: showPatientModal,\n      onCancel: () => setShowPatientModal(false),\n      footer: null,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        onFinish: handleCreatePatient,\n        layout: \"vertical\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"name\",\n          label: \"\\u59D3\\u540D\",\n          rules: [{\n            required: true,\n            message: '请输入患者姓名'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"patient_id\",\n          label: \"\\u60A3\\u8005ID\",\n          rules: [{\n            required: true,\n            message: '请输入患者ID'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"age\",\n          label: \"\\u5E74\\u9F84\",\n          rules: [{\n            required: true,\n            message: '请输入患者年龄'\n          }],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 0,\n            max: 150,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"gender\",\n          label: \"\\u6027\\u522B\",\n          rules: [{\n            required: true,\n            message: '请选择患者性别'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"M\",\n              children: \"\\u7537\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n              value: \"F\",\n              children: \"\\u5973\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"\\u521B\\u5EFA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setShowPatientModal(false),\n            style: {\n              marginLeft: 8\n            },\n            children: \"\\u53D6\\u6D88\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 487,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"xTIQJ29HQdm3BOfLDvRJhqQzyhU=\", false, function () {\n  return [Form.useForm];\n});\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","message","Upload","Button","Space","Card","Progress","List","Select","Modal","Form","Input","InputNumber","UploadOutlined","PlusOutlined","axiosInstance","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","compressImage","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","event","img","Image","src","target","result","canvas","document","createElement","ctx","getContext","width","height","maxSize","Math","round","drawImage","toBlob","blob","File","name","type","lastModified","Date","now","ALLOWED_EXTENSIONS","MAX_FILE_SIZE","ImageUpload","selectedPatient","onUploadSuccess","hidePatientSelect","autoProcess","_s","fileList","setFileList","uploading","setUploading","processing","setProcessing","previewImage","setPreviewImage","uploadedImageId","setUploadedImageId","progress","setProgress","processingLogs","setProcessingLogs","patients","setPatients","imageLoading","setImageLoading","showPatientModal","setShowPatientModal","form","useForm","fetchPatients","response","get","headers","localStorage","getItem","data","error","console","handleCreatePatient","values","post","success","resetFields","setFieldsValue","patient","id","handleUpload","patientId","getFieldValue","formData","FormData","append","onUploadProgress","progressEvent","percentCompleted","loaded","total","log","Error","image","imageId","_id","prevLogs","filename","preview","fetchPreviewImage","_error$response","_error$response$data","withCredentials","status","handleProcess","idToProcess","task_id","pollProcessingStatus","taskId","pollCount","maxRetries","retryCount","initialResponse","fetchResults","interval","setInterval","logs","results","Array","isArray","length","newLogs","filter","includes","clearInterval","Object","entries","map","key","value","toFixed","errorMessage","progressLog","warn","timeoutId","setTimeout","clearTimeout","validateFile","extension","split","pop","toLowerCase","join","size","uploadProps","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","startsWith","e","accept","title","className","children","direction","style","placeholder","onChange","options","p","label","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","disabled","loading","marginTop","percent","alt","textAlign","bordered","dataSource","renderItem","item","Item","margin","whiteSpace","wordBreak","open","onCancel","footer","onFinish","layout","rules","required","min","max","Option","htmlType","marginLeft","_c","$RefreshReg$"],"sources":["D:/GitHub/mri-web-app/frontend/src/components/ImageUpload/ImageUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { message, Upload, Button, Space, Card, Progress, List, Select, Modal, Form, Input, InputNumber } from 'antd';\r\nimport { UploadOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport './ImageUpload.css';\r\nimport { axiosInstance } from '../../utils/axiosConfig';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\r\n\r\n// 图像压缩函数\r\nconst compressImage = async (file) => {\r\n  return new Promise((resolve) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = (event) => {\r\n      const img = new Image();\r\n      img.src = event.target.result;\r\n      img.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n        \r\n        // 计算新的尺寸\r\n        let width = img.width;\r\n        let height = img.height;\r\n        const maxSize = 1200; // 最大尺寸\r\n        \r\n        if (width > height && width > maxSize) {\r\n          height = Math.round((height * maxSize) / width);\r\n          width = maxSize;\r\n        } else if (height > maxSize) {\r\n          width = Math.round((width * maxSize) / height);\r\n          height = maxSize;\r\n        }\r\n        \r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        \r\n        // 绘制压缩后的图像\r\n        ctx.drawImage(img, 0, 0, width, height);\r\n        \r\n        // 转换为Blob\r\n        canvas.toBlob((blob) => {\r\n          resolve(new File([blob], file.name, {\r\n            type: 'image/jpeg',\r\n            lastModified: Date.now()\r\n          }));\r\n        }, 'image/jpeg', 0.7); // 0.7是压缩质量\r\n      };\r\n    };\r\n  });\r\n};\r\n\r\nconst ALLOWED_EXTENSIONS = ['.dcm', '.nii', '.nii.gz'];\r\nconst MAX_FILE_SIZE = 100 * 1024 * 1024; // 100MB\r\n\r\nconst ImageUpload = ({ selectedPatient, onUploadSuccess, hidePatientSelect, autoProcess = false }) => {\r\n  const [fileList, setFileList] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(null);\r\n  const [uploadedImageId, setUploadedImageId] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [processingLogs, setProcessingLogs] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [imageLoading, setImageLoading] = useState(false);\r\n  const [showPatientModal, setShowPatientModal] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  // 获取患者列表\r\n  useEffect(() => {\r\n    if (!hidePatientSelect) {\r\n      fetchPatients();\r\n    }\r\n  }, [hidePatientSelect]);\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE}/api/patients`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n      setPatients(response.data.patients);\r\n    } catch (error) {\r\n      message.error('获取患者列表失败');\r\n      console.error('获取患者列表错误:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreatePatient = async (values) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE}/api/patients`, values, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n      \r\n      if (response.data.success) {\r\n        message.success('患者创建成功');\r\n        setShowPatientModal(false);\r\n        form.resetFields();\r\n        fetchPatients();\r\n        form.setFieldsValue({ patient: response.data.patient.id });\r\n      }\r\n    } catch (error) {\r\n      message.error('创建患者失败');\r\n      console.error('创建患者错误:', error);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    const patientId = selectedPatient || form.getFieldValue('patient');\r\n    if (!patientId) {\r\n      message.error('请先选择患者');\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n    setProgress(0);\r\n    setProcessingLogs([]);\r\n    // 不清除预览图，保留用户上传时的预览\r\n    // setPreviewImage(null);\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', fileList[0]);\r\n      formData.append('patient_id', patientId);\r\n\r\n      const response = await axiosInstance.post('/api/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setProgress(percentCompleted);\r\n        }\r\n      });\r\n\r\n      console.log('上传响应:', response.data);\r\n\r\n      // 检查响应数据\r\n      if (!response.data) {\r\n        throw new Error('服务器没有返回数据');\r\n      }\r\n\r\n      if (response.data.message === '文件上传成功' && response.data.image) {\r\n        // 成功处理\r\n        const imageId = response.data.image.id || response.data.image._id;\r\n        console.log('设置图像ID:', imageId);\r\n        setUploadedImageId(imageId);\r\n        message.success('上传成功');\r\n        setProcessingLogs(prevLogs => [...prevLogs, `文件上传成功: ${response.data.image.filename || fileList[0].name}`]);\r\n        \r\n        if (onUploadSuccess) {\r\n          onUploadSuccess(response.data.image);\r\n        }\r\n\r\n        // 如果服务器返回了预览图数据，直接使用\r\n        if (response.data.image.preview) {\r\n          setPreviewImage(`data:image/png;base64,${response.data.image.preview}`);\r\n          setProcessingLogs(prevLogs => [...prevLogs, '预览图获取成功']);\r\n        }\r\n        // 否则尝试单独获取预览图\r\n        else if (response.data.image.filename) {\r\n          try {\r\n            await fetchPreviewImage(response.data.image.filename);\r\n          } catch (error) {\r\n            console.error('获取预览图失败，保留原有预览');\r\n            // 预览获取失败时保留原有预览，不影响后续处理\r\n          }\r\n        }\r\n\r\n        console.log('上传完成，uploadedImageId:', imageId, '处理状态:', processing);\r\n      } else {\r\n        throw new Error(response.data.message || '上传失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('上传错误:', error);\r\n      setProcessingLogs(prevLogs => [...prevLogs, `上传失败: ${error.message || '未知错误'}`]);\r\n      message.error(error.response?.data?.message || error.message || '上传失败');\r\n    } finally {\r\n      setUploading(false);\r\n      setProgress(0);\r\n      setFileList([]);\r\n    }\r\n  };\r\n\r\n  const fetchPreviewImage = async (filename) => {\r\n    if (!filename) {\r\n      console.error('获取预览图失败: 文件名为空');\r\n      return;\r\n    }\r\n\r\n    setImageLoading(true);\r\n    try {\r\n      // 使用相对路径，让axiosInstance处理baseURL\r\n      const response = await axiosInstance.get(`/api/preview/${filename}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n        },\r\n        // 添加withCredentials配置\r\n        withCredentials: true\r\n      });\r\n      \r\n      console.log('预览图响应:', response.data);\r\n      \r\n      if (response.data.status === 'success' && response.data.image) {\r\n        setPreviewImage(`data:image/png;base64,${response.data.image}`);\r\n        setProcessingLogs(prevLogs => [...prevLogs, '预览图生成成功']);\r\n      } else {\r\n        throw new Error(response.data.message || '获取预览图失败：服务器返回的数据格式不正确');\r\n      }\r\n    } catch (error) {\r\n      console.error('获取预览图失败:', error);\r\n      setProcessingLogs(prevLogs => [...prevLogs, `获取预览图失败: ${error.message || '未知错误'}`]);\r\n      // 不显示错误消息，因为预览图获取失败不影响主要功能\r\n      // message.error('获取预览图失败');\r\n    } finally {\r\n      setImageLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleProcess = async (imageId = null) => {\r\n    const idToProcess = imageId || uploadedImageId;\r\n    if (!idToProcess) {\r\n      message.error('请先上传图像');\r\n      return;\r\n    }\r\n\r\n    setProcessing(true);\r\n    setProcessingLogs(prevLogs => [...prevLogs, '开始处理图像...']);\r\n\r\n    try {\r\n      const response = await axiosInstance.post(`/api/process/${idToProcess}`);\r\n      console.log('处理响应:', response.data);  // 添加日志\r\n\r\n      if (response.data.task_id) {\r\n        message.success('开始处理图像');\r\n        setProcessingLogs(prevLogs => [...prevLogs, '图像处理任务已创建']);\r\n        console.log('开始轮询任务状态, task_id:', response.data.task_id);  // 添加日志\r\n        pollProcessingStatus(response.data.task_id);\r\n      } else if (response.data.status === 'processing' && response.data.task_id) {\r\n        // 兼容不同的响应格式\r\n        message.success('开始处理图像');\r\n        setProcessingLogs(prevLogs => [...prevLogs, '图像处理任务已创建']);\r\n        console.log('开始轮询任务状态, task_id:', response.data.task_id);  // 添加日志\r\n        pollProcessingStatus(response.data.task_id);\r\n      } else {\r\n        throw new Error(response.data.message || '处理失败：未获取到任务ID');\r\n      }\r\n    } catch (error) {\r\n      console.error('处理错误:', error);\r\n      message.error('处理失败');\r\n      setProcessingLogs(prevLogs => [...prevLogs, `处理失败: ${error.message || '未知错误'}`]);\r\n      setProcessing(false);\r\n    }\r\n  };\r\n\r\n  const pollProcessingStatus = async (taskId) => {\r\n    if (!taskId) {\r\n      console.error('轮询错误: 未提供taskId');\r\n      setProcessing(false);\r\n      setProcessingLogs(prevLogs => [...prevLogs, '轮询错误: 未提供任务ID']);\r\n      return;\r\n    }\r\n\r\n    console.log('开始轮询, taskId:', taskId);  // 添加日志\r\n    setProcessing(true);\r\n    \r\n    let pollCount = 0;\r\n    const maxRetries = 3;  // 最大重试次数\r\n    let retryCount = 0;\r\n    \r\n    try {\r\n      // 立即获取一次状态\r\n      const initialResponse = await axiosInstance.get(`/api/tasks/${taskId}`);\r\n      console.log('初始状态响应:', initialResponse.data);\r\n      \r\n      if (initialResponse.data.status === 'completed' || initialResponse.data.status === 'success') {\r\n        setProcessing(false);\r\n        setProgress(100);\r\n        message.success('处理完成');\r\n        await fetchResults(taskId);\r\n        return;\r\n      }\r\n      \r\n      const interval = setInterval(async () => {\r\n        try {\r\n          pollCount++;\r\n          console.log(`第 ${pollCount} 次轮询, taskId: ${taskId}`);  // 添加日志\r\n          \r\n          const response = await axiosInstance.get(`/api/tasks/${taskId}`);\r\n          console.log('处理状态响应:', response.data);\r\n          \r\n          const { status, progress, logs, error, results } = response.data;\r\n          \r\n          // 更新进度\r\n          if (typeof progress === 'number') {\r\n            setProgress(progress);\r\n          }\r\n\r\n          // 更新日志\r\n          if (Array.isArray(logs) && logs.length > 0) {\r\n            setProcessingLogs(prevLogs => {\r\n              const newLogs = logs.filter(log => !prevLogs.includes(log));\r\n              return [...prevLogs, ...newLogs];\r\n            });\r\n          }\r\n\r\n          // 处理不同的状态\r\n          if (status === 'completed' || status === 'success') {\r\n            console.log('处理完成, 清除轮询');  // 添加日志\r\n            clearInterval(interval);\r\n            setProcessing(false);\r\n            setProgress(100);\r\n            message.success('处理完成');\r\n            \r\n            if (results) {\r\n              setProcessingLogs(prevLogs => [...prevLogs, '成功获取处理结果']);\r\n              // 显示结果\r\n              if (typeof results === 'object') {\r\n                setProcessingLogs(prevLogs => [\r\n                  ...prevLogs,\r\n                  '处理结果:',\r\n                  ...Object.entries(results).map(\r\n                    ([key, value]) => `${key}: ${typeof value === 'number' ? value.toFixed(2) : value}`\r\n                  )\r\n                ]);\r\n              }\r\n            } else {\r\n              await fetchResults(taskId);\r\n            }\r\n          } else if (status === 'failed' || status === 'error') {\r\n            console.log('处理失败, 清除轮询');  // 添加日志\r\n            clearInterval(interval);\r\n            setProcessing(false);\r\n            const errorMessage = error || '处理失败';\r\n            message.error(errorMessage);\r\n            setProcessingLogs(prevLogs => [...prevLogs, `处理失败: ${errorMessage}`]);\r\n          } else if (status === 'processing') {\r\n            console.log(`处理中..., 进度: ${progress}%, 轮询次数: ${pollCount}`);  // 添加日志\r\n            setProcessingLogs(prevLogs => {\r\n              const progressLog = `处理进度: ${progress}%`;\r\n              if (!prevLogs.includes(progressLog)) {\r\n                return [...prevLogs, progressLog];\r\n              }\r\n              return prevLogs;\r\n            });\r\n            retryCount = 0;  // 重置重试计数\r\n          } else {\r\n            console.warn('未知的处理状态:', status);\r\n            setProcessingLogs(prevLogs => [...prevLogs, `未知的处理状态: ${status}`]);\r\n          }\r\n        } catch (error) {\r\n          console.error('获取处理状态失败:', error);\r\n          retryCount++;\r\n          \r\n          if (retryCount >= maxRetries) {\r\n            console.log(`达到最大重试次数 ${maxRetries}, 停止轮询`);  // 添加日志\r\n            clearInterval(interval);\r\n            setProcessing(false);\r\n            setProcessingLogs(prevLogs => [...prevLogs, `轮询失败: ${error.message || '未知错误'}`]);\r\n            message.error('获取处理状态失败');\r\n          } else {\r\n            setProcessingLogs(prevLogs => [...prevLogs, `获取状态失败 (重试 ${retryCount}/${maxRetries}): ${error.message || '未知错误'}`]);\r\n          }\r\n        }\r\n      }, 2000);\r\n\r\n      // 设置最大轮询时间（5分钟）\r\n      const timeoutId = setTimeout(() => {\r\n        console.log('轮询超时, 清除轮询');  // 添加日志\r\n        clearInterval(interval);\r\n        if (processing) {\r\n          setProcessing(false);\r\n          setProcessingLogs(prevLogs => [...prevLogs, '处理超时，请检查服务器状态']);\r\n          message.error('处理超时，请检查服务器状态');\r\n        }\r\n      }, 5 * 60 * 1000);\r\n\r\n      return () => {\r\n        clearInterval(interval);\r\n        clearTimeout(timeoutId);\r\n        console.log('轮询已停止');\r\n      };\r\n    } catch (error) {\r\n      console.error('启动轮询失败:', error);\r\n      setProcessing(false);\r\n      setProcessingLogs(prevLogs => [...prevLogs, `启动轮询失败: ${error.message || '未知错误'}`]);\r\n      message.error('获取处理状态失败');\r\n    }\r\n  };\r\n\r\n  const fetchResults = async (taskId) => {\r\n    try {\r\n      const response = await axiosInstance.get(`/api/results/${taskId}`);\r\n      console.log('处理结果:', response.data);\r\n\r\n      if (response.data.status === 'success') {\r\n        setProcessingLogs(prevLogs => [...prevLogs, '成功获取处理结果']);\r\n        // 更新界面显示\r\n        if (response.data.results) {\r\n          setProcessingLogs(prevLogs => [\r\n            ...prevLogs,\r\n            '处理结果:',\r\n            ...Object.entries(response.data.results).map(\r\n              ([key, value]) => `${key}: ${typeof value === 'number' ? value.toFixed(2) : value}`\r\n            )\r\n          ]);\r\n        }\r\n      } else {\r\n        throw new Error(response.data.message || '获取结果失败');\r\n      }\r\n    } catch (error) {\r\n      console.error('获取结果失败:', error);\r\n      setProcessingLogs(prevLogs => [...prevLogs, `获取结果失败: ${error.message || '未知错误'}`]);\r\n      message.error('获取结果失败');\r\n    }\r\n  };\r\n\r\n  const validateFile = (file) => {\r\n    const extension = '.' + file.name.split('.').pop().toLowerCase();\r\n    if (!ALLOWED_EXTENSIONS.includes(extension)) {\r\n      message.error(`不支持的文件类型。支持的类型：${ALLOWED_EXTENSIONS.join(', ')}`);\r\n      return false;\r\n    }\r\n    if (file.size > MAX_FILE_SIZE) {\r\n      message.error(`文件大小超过限制。最大支持：${MAX_FILE_SIZE / (1024 * 1024)}MB`);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const uploadProps = {\r\n    onRemove: file => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPreviewImage(null);\r\n    },\r\n    beforeUpload: async file => {\r\n      if (!validateFile(file)) {\r\n        return false;\r\n      }\r\n      \r\n      // 如果是图像文件，直接预览\r\n      if (file.type.startsWith('image/')) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          setPreviewImage(e.target.result);\r\n          setImageLoading(false);\r\n        };\r\n        reader.readAsDataURL(file);\r\n      } else {\r\n        // 对于DICOM或NIfTI文件，发送到服务器生成预览\r\n        setImageLoading(true);\r\n        try {\r\n          const formData = new FormData();\r\n          formData.append('file', file);\r\n          const response = await axios.post(`${API_BASE}/api/preview`, formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n          });\r\n\r\n          if (response.data.status === 'success') {\r\n            setPreviewImage(`data:image/png;base64,${response.data.image}`);\r\n          }\r\n        } catch (error) {\r\n          console.error('预览生成失败:', error);\r\n          message.error('无法生成预览图');\r\n        } finally {\r\n          setImageLoading(false);\r\n        }\r\n      }\r\n      \r\n      setFileList([file]);\r\n      return false;\r\n    },\r\n    fileList,\r\n    accept: ALLOWED_EXTENSIONS.join(','),\r\n  };\r\n\r\n  return (\r\n    <Card title=\"图像上传与处理\" className=\"image-upload-container\">\r\n      <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n        {!hidePatientSelect && (\r\n          <div className=\"patient-selector\">\r\n            <Select\r\n              style={{ width: '100%' }}\r\n              placeholder=\"请选择患者\"\r\n              onChange={value => form.setFieldsValue({ patient: value })}\r\n              options={patients.map(p => ({ label: p.name, value: p.id }))}\r\n            />\r\n            <Button \r\n              type=\"primary\" \r\n              icon={<PlusOutlined />}\r\n              onClick={() => setShowPatientModal(true)}\r\n            >\r\n              新建患者\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"upload-section\">\r\n          <Upload {...uploadProps}>\r\n            <Button icon={<UploadOutlined />}>选择文件</Button>\r\n          </Upload>\r\n          <div className=\"upload-tips\">\r\n            <p>支持的文件类型：{ALLOWED_EXTENSIONS.join(', ')}</p>\r\n            <p>最大文件大小：{MAX_FILE_SIZE / (1024 * 1024)}MB</p>\r\n          </div>\r\n        </div>\r\n        \r\n        <Button\r\n          type=\"primary\"\r\n          onClick={handleUpload}\r\n          disabled={fileList.length === 0 || (!selectedPatient && !form.getFieldValue('patient'))}\r\n          loading={uploading}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {uploading ? '上传中' : '开始上传'}\r\n        </Button>\r\n\r\n        {progress > 0 && (\r\n          <Progress percent={progress} status={progress === 100 ? \"success\" : \"active\"} />\r\n        )}\r\n\r\n        {previewImage && (\r\n          <div className=\"preview-section\">\r\n            {imageLoading ? (\r\n              <div className=\"image-loading\">\r\n                <div className=\"spinner\"></div>\r\n                <p>加载预览图...</p>\r\n              </div>\r\n            ) : previewImage === 'error' ? (\r\n              <div className=\"preview-error\">\r\n                <p>预览图加载失败</p>\r\n              </div>\r\n            ) : (\r\n              <img \r\n                src={previewImage} \r\n                alt=\"预览\" \r\n                className=\"preview-image\"\r\n                loading=\"lazy\"\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {uploadedImageId && !processing && (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleProcess()}\r\n            style={{ marginTop: 16 }}\r\n          >\r\n            开始处理\r\n          </Button>\r\n        )}\r\n\r\n        {processing && (\r\n          <div style={{ marginTop: 16 }}>\r\n            <Progress percent={progress} status={progress === 100 ? \"success\" : \"active\"} />\r\n            <div style={{ textAlign: 'center', marginTop: 8 }}>\r\n              正在处理图像...\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {processingLogs.length > 0 && (\r\n          <div className=\"processing-logs\">\r\n            <h3>处理日志</h3>\r\n            <List\r\n              size=\"small\"\r\n              bordered\r\n              dataSource={processingLogs}\r\n              renderItem={item => (\r\n                <List.Item>\r\n                  <pre style={{ margin: 0, whiteSpace: 'pre-wrap', wordBreak: 'break-all' }}>\r\n                    {item}\r\n                  </pre>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </div>\r\n        )}\r\n      </Space>\r\n\r\n      <Modal\r\n        title=\"新建患者\"\r\n        open={showPatientModal}\r\n        onCancel={() => setShowPatientModal(false)}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          form={form}\r\n          onFinish={handleCreatePatient}\r\n          layout=\"vertical\"\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            label=\"姓名\"\r\n            rules={[{ required: true, message: '请输入患者姓名' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          \r\n          <Form.Item\r\n            name=\"patient_id\"\r\n            label=\"患者ID\"\r\n            rules={[{ required: true, message: '请输入患者ID' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          \r\n          <Form.Item\r\n            name=\"age\"\r\n            label=\"年龄\"\r\n            rules={[{ required: true, message: '请输入患者年龄' }]}\r\n          >\r\n            <InputNumber min={0} max={150} style={{ width: '100%' }} />\r\n          </Form.Item>\r\n          \r\n          <Form.Item\r\n            name=\"gender\"\r\n            label=\"性别\"\r\n            rules={[{ required: true, message: '请选择患者性别' }]}\r\n          >\r\n            <Select>\r\n              <Select.Option value=\"M\">男</Select.Option>\r\n              <Select.Option value=\"F\">女</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n          \r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              创建\r\n            </Button>\r\n            <Button onClick={() => setShowPatientModal(false)} style={{ marginLeft: 8 }}>\r\n              取消\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ImageUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}