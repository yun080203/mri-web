{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\mri-web-app\\\\frontend\\\\src\\\\components\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\nfunction ImageUpload({\n  patientId,\n  onUploadSuccess\n}) {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState('idle');\n  const [processingLogs, setProcessingLogs] = useState([]);\n  const [processedData, setProcessedData] = useState(null);\n  const [matlabLog, setMatlabLog] = useState('');\n  const handleFileSelect = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setError('');\n      setUploadedImage(null);\n      setProcessingStatus('idle');\n      setProcessingLogs([]);\n      setProcessedData(null);\n      setMatlabLog('');\n    }\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError('请选择文件');\n      return;\n    }\n    if (!patientId) {\n      setError('请先选择患者');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setProcessingStatus('uploading');\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    formData.append('patient_id', patientId);\n    try {\n      const response = await axios.post(`${API_BASE}/api/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data.image) {\n        setUploadedImage(response.data.image);\n        setProcessingStatus('uploaded');\n        if (onUploadSuccess) {\n          onUploadSuccess(response.data);\n        }\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('上传失败:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || '上传失败，请重试');\n      setProcessingStatus('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleProcess = async imageId => {\n    if (!imageId) {\n      setError('缺少图像ID');\n      setProcessingStatus('error');\n      return;\n    }\n    setProcessingStatus('processing');\n    setProcessingLogs([]);\n    setProcessedData(null);\n    setMatlabLog('');\n    try {\n      const response = await axios.post(`${API_BASE}/api/process/${imageId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data.task_id) {\n        await pollTaskStatus(response.data.task_id);\n      } else {\n        throw new Error('处理响应中缺少任务ID');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('处理失败:', error);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message || '处理失败，请重试');\n      setProcessingStatus('error');\n    }\n  };\n  const pollTaskStatus = async taskId => {\n    try {\n      const response = await axios.get(`${API_BASE}/api/tasks/${taskId}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data.matlab_log) {\n        setMatlabLog(response.data.matlab_log);\n      }\n      if (response.data.status === 'completed') {\n        setProcessingStatus('completed');\n        if (response.data.results) {\n          setProcessedData(response.data.results);\n        }\n      } else if (response.data.status === 'failed') {\n        setProcessingStatus('error');\n        setError('处理失败');\n      } else {\n        // 继续轮询\n        setTimeout(() => pollTaskStatus(taskId), 2000);\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('轮询失败:', error);\n      setProcessingStatus('error');\n      setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message || '轮询失败');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-upload-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileSelect,\n          accept: \".dcm,.nii,.nii.gz\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !selectedFile || loading,\n          className: loading ? 'loading' : '',\n          children: loading ? '上传中...' : '上传'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 27\n      }, this), uploadedImage && processingStatus === 'uploaded' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-success\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u4E0A\\u4F20\\u6210\\u529F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u6587\\u4EF6\\u540D: \", uploadedImage.original_filename]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleProcess(uploadedImage.id),\n          className: \"process-button\",\n          children: \"\\u5F00\\u59CB\\u5904\\u7406\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this), processingStatus === 'processing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u6B63\\u5728\\u5904\\u7406\\u56FE\\u50CF...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this), matlabLog && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"matlab-log\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"CAT12\\u5904\\u7406\\u65E5\\u5FD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"log-content\",\n          children: matlabLog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), processedData && processingStatus === 'completed' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processed-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u5904\\u7406\\u7ED3\\u679C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u7070\\u8D28\\u4F53\\u79EF:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this), \" \", (processedData.gm_volume / 1000).toFixed(2), \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u767D\\u8D28\\u4F53\\u79EF:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this), \" \", (processedData.wm_volume / 1000).toFixed(2), \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u8111\\u810A\\u6DB2\\u4F53\\u79EF:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this), \" \", (processedData.csf_volume / 1000).toFixed(2), \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u9885\\u5185\\u603B\\u4F53\\u79EF:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this), \" \", (processedData.tiv / 1000).toFixed(2), \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageUpload, \"+NhmS+hxSfJA6jHwBisapRIQtOA=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","ImageUpload","patientId","onUploadSuccess","_s","selectedFile","setSelectedFile","loading","setLoading","error","setError","uploadedImage","setUploadedImage","processingStatus","setProcessingStatus","processingLogs","setProcessingLogs","processedData","setProcessedData","matlabLog","setMatlabLog","handleFileSelect","event","file","target","files","handleUpload","e","preventDefault","formData","FormData","append","response","post","headers","localStorage","getItem","data","image","_error$response","_error$response$data","console","message","handleProcess","imageId","task_id","pollTaskStatus","Error","_error$response2","_error$response2$data","taskId","get","matlab_log","status","results","setTimeout","_error$response3","_error$response3$data","className","children","onSubmit","type","onChange","accept","disabled","fileName","_jsxFileName","lineNumber","columnNumber","original_filename","onClick","id","gm_volume","toFixed","wm_volume","csf_volume","tiv","_c","$RefreshReg$"],"sources":["D:/GitHub/mri-web-app/frontend/src/components/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './ImageUpload.css';\n\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n\nfunction ImageUpload({ patientId, onUploadSuccess }) {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    const [uploadedImage, setUploadedImage] = useState(null);\n    const [processingStatus, setProcessingStatus] = useState('idle');\n    const [processingLogs, setProcessingLogs] = useState([]);\n    const [processedData, setProcessedData] = useState(null);\n    const [matlabLog, setMatlabLog] = useState('');\n\n    const handleFileSelect = async (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            setSelectedFile(file);\n            setError('');\n            setUploadedImage(null);\n            setProcessingStatus('idle');\n            setProcessingLogs([]);\n            setProcessedData(null);\n            setMatlabLog('');\n        }\n    };\n\n    const handleUpload = async (e) => {\n        e.preventDefault();\n        if (!selectedFile) {\n            setError('请选择文件');\n            return;\n        }\n\n        if (!patientId) {\n            setError('请先选择患者');\n            return;\n        }\n\n        setLoading(true);\n        setError('');\n        setProcessingStatus('uploading');\n\n        const formData = new FormData();\n        formData.append('file', selectedFile);\n        formData.append('patient_id', patientId);\n\n        try {\n            const response = await axios.post(`${API_BASE}/api/upload`, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            });\n\n            if (response.data.image) {\n                setUploadedImage(response.data.image);\n                setProcessingStatus('uploaded');\n                if (onUploadSuccess) {\n                    onUploadSuccess(response.data);\n                }\n            }\n        } catch (error) {\n            console.error('上传失败:', error);\n            setError(error.response?.data?.error || error.message || '上传失败，请重试');\n            setProcessingStatus('error');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleProcess = async (imageId) => {\n        if (!imageId) {\n            setError('缺少图像ID');\n            setProcessingStatus('error');\n            return;\n        }\n\n        setProcessingStatus('processing');\n        setProcessingLogs([]);\n        setProcessedData(null);\n        setMatlabLog('');\n        \n        try {\n            const response = await axios.post(\n                `${API_BASE}/api/process/${imageId}`,\n                {},\n                {\n                    headers: {\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\n                    }\n                }\n            );\n            \n            if (response.data.task_id) {\n                await pollTaskStatus(response.data.task_id);\n            } else {\n                throw new Error('处理响应中缺少任务ID');\n            }\n        } catch (error) {\n            console.error('处理失败:', error);\n            setError(error.response?.data?.error || error.message || '处理失败，请重试');\n            setProcessingStatus('error');\n        }\n    };\n\n    const pollTaskStatus = async (taskId) => {\n        try {\n            const response = await axios.get(\n                `${API_BASE}/api/tasks/${taskId}`,\n                {\n                    headers: {\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\n                    }\n                }\n            );\n            \n            if (response.data.matlab_log) {\n                setMatlabLog(response.data.matlab_log);\n            }\n            \n            if (response.data.status === 'completed') {\n                setProcessingStatus('completed');\n                if (response.data.results) {\n                    setProcessedData(response.data.results);\n                }\n            } else if (response.data.status === 'failed') {\n                setProcessingStatus('error');\n                setError('处理失败');\n            } else {\n                // 继续轮询\n                setTimeout(() => pollTaskStatus(taskId), 2000);\n            }\n        } catch (error) {\n            console.error('轮询失败:', error);\n            setProcessingStatus('error');\n            setError(error.response?.data?.error || error.message || '轮询失败');\n        }\n    };\n\n    return (\n        <div className=\"image-upload-container\">\n            <form onSubmit={handleUpload}>\n                <div className=\"file-input-group\">\n                    <input\n                        type=\"file\"\n                        onChange={handleFileSelect}\n                        accept=\".dcm,.nii,.nii.gz\"\n                        disabled={loading}\n                    />\n                    <button \n                        type=\"submit\" \n                        disabled={!selectedFile || loading}\n                        className={loading ? 'loading' : ''}\n                    >\n                        {loading ? '上传中...' : '上传'}\n                    </button>\n                </div>\n                \n                {error && <div className=\"error-message\">{error}</div>}\n\n                {uploadedImage && processingStatus === 'uploaded' && (\n                    <div className=\"upload-success\">\n                        <h3>上传成功</h3>\n                        <p>文件名: {uploadedImage.original_filename}</p>\n                        <button \n                            onClick={() => handleProcess(uploadedImage.id)}\n                            className=\"process-button\"\n                        >\n                            开始处理\n                        </button>\n                    </div>\n                )}\n\n                {processingStatus === 'processing' && (\n                    <div className=\"processing-status\">\n                        <div className=\"spinner\"></div>\n                        <p>正在处理图像...</p>\n                    </div>\n                )}\n\n                {matlabLog && (\n                    <div className=\"matlab-log\">\n                        <h3>CAT12处理日志</h3>\n                        <pre className=\"log-content\">\n                            {matlabLog}\n                        </pre>\n                    </div>\n                )}\n\n                {processedData && processingStatus === 'completed' && (\n                    <div className=\"processed-data\">\n                        <h3>处理结果</h3>\n                        <div className=\"data-container\">\n                            <div className=\"data-entry\">\n                                <strong>灰质体积:</strong> {(processedData.gm_volume / 1000).toFixed(2)} ml\n                            </div>\n                            <div className=\"data-entry\">\n                                <strong>白质体积:</strong> {(processedData.wm_volume / 1000).toFixed(2)} ml\n                            </div>\n                            <div className=\"data-entry\">\n                                <strong>脑脊液体积:</strong> {(processedData.csf_volume / 1000).toFixed(2)} ml\n                            </div>\n                            <div className=\"data-entry\">\n                                <strong>颅内总体积:</strong> {(processedData.tiv / 1000).toFixed(2)} ml\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </form>\n        </div>\n    );\n}\n\nexport default ImageUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}