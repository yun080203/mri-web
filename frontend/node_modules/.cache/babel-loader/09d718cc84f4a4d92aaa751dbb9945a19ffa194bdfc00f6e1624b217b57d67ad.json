{"ast":null,"code":"/*! cornerstone-math - 0.1.10 - 2022-06-09 | (c) 2017 Chris Hafey | https://github.com/cornerstonejs/cornerstoneMath */\n!function (t, e) {\n  \"object\" == typeof exports && \"object\" == typeof module ? module.exports = e() : \"function\" == typeof define && define.amd ? define(\"cornerstone-math\", [], e) : \"object\" == typeof exports ? exports[\"cornerstone-math\"] = e() : t.cornerstoneMath = e();\n}(window, function () {\n  return function (t) {\n    var e = {};\n    function n(i) {\n      if (e[i]) return e[i].exports;\n      var r = e[i] = {\n        i: i,\n        l: !1,\n        exports: {}\n      };\n      return t[i].call(r.exports, r, r.exports, n), r.l = !0, r.exports;\n    }\n    return n.m = t, n.c = e, n.d = function (t, e, i) {\n      n.o(t, e) || Object.defineProperty(t, e, {\n        enumerable: !0,\n        get: i\n      });\n    }, n.r = function (t) {\n      \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n        value: \"Module\"\n      }), Object.defineProperty(t, \"__esModule\", {\n        value: !0\n      });\n    }, n.t = function (t, e) {\n      if (1 & e && (t = n(t)), 8 & e) return t;\n      if (4 & e && \"object\" == typeof t && t && t.__esModule) return t;\n      var i = Object.create(null);\n      if (n.r(i), Object.defineProperty(i, \"default\", {\n        enumerable: !0,\n        value: t\n      }), 2 & e && \"string\" != typeof t) for (var r in t) n.d(i, r, function (e) {\n        return t[e];\n      }.bind(null, r));\n      return i;\n    }, n.n = function (t) {\n      var e = t && t.__esModule ? function () {\n        return t.default;\n      } : function () {\n        return t;\n      };\n      return n.d(e, \"a\", e), e;\n    }, n.o = function (t, e) {\n      return Object.prototype.hasOwnProperty.call(t, e);\n    }, n.p = \"\", n(n.s = 4);\n  }([function (t, e, n) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var i = function () {\n        function t(t, e) {\n          for (var n = 0; n < e.length; n++) {\n            var i = e[n];\n            i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);\n          }\n        }\n        return function (e, n, i) {\n          return n && t(e.prototype, n), i && t(e, i), e;\n        };\n      }(),\n      r = function (t) {\n        return t && t.__esModule ? t : {\n          default: t\n        };\n      }(n(2)),\n      o = n(1);\n    var s = function () {\n      function t(e, n, i) {\n        !function (t, e) {\n          if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, t), this.x = e || 0, this.y = n || 0, this.z = i || 0;\n      }\n      return i(t, [{\n        key: \"set\",\n        value: function (t, e, n) {\n          return this.x = t, this.y = e, this.z = n, this;\n        }\n      }, {\n        key: \"setX\",\n        value: function (t) {\n          return this.x = t, this;\n        }\n      }, {\n        key: \"setY\",\n        value: function (t) {\n          return this.y = t, this;\n        }\n      }, {\n        key: \"setZ\",\n        value: function (t) {\n          return this.z = t, this;\n        }\n      }, {\n        key: \"setComponent\",\n        value: function (t, e) {\n          switch (t) {\n            case 0:\n              this.x = e;\n              break;\n            case 1:\n              this.y = e;\n              break;\n            case 2:\n              this.z = e;\n              break;\n            default:\n              throw new Error(\"index is out of range: \" + t);\n          }\n        }\n      }, {\n        key: \"getComponent\",\n        value: function (t) {\n          switch (t) {\n            case 0:\n              return this.x;\n            case 1:\n              return this.y;\n            case 2:\n              return this.z;\n            default:\n              throw new Error(\"index is out of range: \" + t);\n          }\n        }\n      }, {\n        key: \"copy\",\n        value: function (t) {\n          return this.x = t.x, this.y = t.y, this.z = t.z, this;\n        }\n      }, {\n        key: \"add\",\n        value: function (t, e) {\n          return void 0 !== e ? (console.warn(\"DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead.\"), this.addVectors(t, e)) : (this.x += t.x, this.y += t.y, this.z += t.z, this);\n        }\n      }, {\n        key: \"addScalar\",\n        value: function (t) {\n          return this.x += t, this.y += t, this.z += t, this;\n        }\n      }, {\n        key: \"addVectors\",\n        value: function (t, e) {\n          return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this;\n        }\n      }, {\n        key: \"sub\",\n        value: function (t, e) {\n          return void 0 !== e ? (console.warn(\"DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.\"), this.subVectors(t, e)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this);\n        }\n      }, {\n        key: \"subVectors\",\n        value: function (t, e) {\n          return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this;\n        }\n      }, {\n        key: \"multiply\",\n        value: function (t, e) {\n          return void 0 !== e ? (console.warn(\"DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.\"), this.multiplyVectors(t, e)) : (this.x *= t.x, this.y *= t.y, this.z *= t.z, this);\n        }\n      }, {\n        key: \"multiplyScalar\",\n        value: function (t) {\n          return this.x *= t, this.y *= t, this.z *= t, this;\n        }\n      }, {\n        key: \"multiplyVectors\",\n        value: function (t, e) {\n          return this.x = t.x * e.x, this.y = t.y * e.y, this.z = t.z * e.z, this;\n        }\n      }, {\n        key: \"applyMatrix3\",\n        value: function (t) {\n          var e = this.x,\n            n = this.y,\n            i = this.z,\n            r = t.elements;\n          return this.x = r[0] * e + r[3] * n + r[6] * i, this.y = r[1] * e + r[4] * n + r[7] * i, this.z = r[2] * e + r[5] * n + r[8] * i, this;\n        }\n      }, {\n        key: \"applyMatrix4\",\n        value: function (t) {\n          var e = this.x,\n            n = this.y,\n            i = this.z,\n            r = t.elements;\n          return this.x = r[0] * e + r[4] * n + r[8] * i + r[12], this.y = r[1] * e + r[5] * n + r[9] * i + r[13], this.z = r[2] * e + r[6] * n + r[10] * i + r[14], this;\n        }\n      }, {\n        key: \"applyProjection\",\n        value: function (t) {\n          var e = this.x,\n            n = this.y,\n            i = this.z,\n            r = t.elements,\n            o = 1 / (r[3] * e + r[7] * n + r[11] * i + r[15]);\n          return this.x = (r[0] * e + r[4] * n + r[8] * i + r[12]) * o, this.y = (r[1] * e + r[5] * n + r[9] * i + r[13]) * o, this.z = (r[2] * e + r[6] * n + r[10] * i + r[14]) * o, this;\n        }\n      }, {\n        key: \"applyQuaternion\",\n        value: function (t) {\n          var e = this.x,\n            n = this.y,\n            i = this.z,\n            r = t.x,\n            o = t.y,\n            s = t.z,\n            a = t.w,\n            u = a * e + o * i - s * n,\n            h = a * n + s * e - r * i,\n            l = a * i + r * n - o * e,\n            c = -r * e - o * n - s * i;\n          return this.x = u * a + c * -r + h * -s - l * -o, this.y = h * a + c * -o + l * -r - u * -s, this.z = l * a + c * -s + u * -o - h * -r, this;\n        }\n      }, {\n        key: \"transformDirection\",\n        value: function (t) {\n          var e = this.x,\n            n = this.y,\n            i = this.z,\n            r = t.elements;\n          return this.x = r[0] * e + r[4] * n + r[8] * i, this.y = r[1] * e + r[5] * n + r[9] * i, this.z = r[2] * e + r[6] * n + r[10] * i, this.normalize(), this;\n        }\n      }, {\n        key: \"divide\",\n        value: function (t) {\n          return this.x /= t.x, this.y /= t.y, this.z /= t.z, this;\n        }\n      }, {\n        key: \"divideScalar\",\n        value: function (t) {\n          if (0 !== t) {\n            var e = 1 / t;\n            this.x *= e, this.y *= e, this.z *= e;\n          } else this.x = 0, this.y = 0, this.z = 0;\n          return this;\n        }\n      }, {\n        key: \"min\",\n        value: function (t) {\n          return this.x > t.x && (this.x = t.x), this.y > t.y && (this.y = t.y), this.z > t.z && (this.z = t.z), this;\n        }\n      }, {\n        key: \"max\",\n        value: function (t) {\n          return this.x < t.x && (this.x = t.x), this.y < t.y && (this.y = t.y), this.z < t.z && (this.z = t.z), this;\n        }\n      }, {\n        key: \"clamp\",\n        value: function (t, e) {\n          return this.x < t.x ? this.x = t.x : this.x > e.x && (this.x = e.x), this.y < t.y ? this.y = t.y : this.y > e.y && (this.y = e.y), this.z < t.z ? this.z = t.z : this.z > e.z && (this.z = e.z), this;\n        }\n      }, {\n        key: \"floor\",\n        value: function () {\n          return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this;\n        }\n      }, {\n        key: \"ceil\",\n        value: function () {\n          return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this;\n        }\n      }, {\n        key: \"round\",\n        value: function () {\n          return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this;\n        }\n      }, {\n        key: \"roundToZero\",\n        value: function () {\n          return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this;\n        }\n      }, {\n        key: \"negate\",\n        value: function () {\n          return this.multiplyScalar(-1);\n        }\n      }, {\n        key: \"dot\",\n        value: function (t) {\n          return this.x * t.x + this.y * t.y + this.z * t.z;\n        }\n      }, {\n        key: \"lengthSq\",\n        value: function () {\n          return this.x * this.x + this.y * this.y + this.z * this.z;\n        }\n      }, {\n        key: \"length\",\n        value: function () {\n          return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n        }\n      }, {\n        key: \"lengthManhattan\",\n        value: function () {\n          return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n        }\n      }, {\n        key: \"normalize\",\n        value: function () {\n          return this.divideScalar(this.length());\n        }\n      }, {\n        key: \"setLength\",\n        value: function (t) {\n          var e = this.length();\n          return 0 !== e && t !== e && this.multiplyScalar(t / e), this;\n        }\n      }, {\n        key: \"lerp\",\n        value: function (t, e) {\n          return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this;\n        }\n      }, {\n        key: \"cross\",\n        value: function (t, e) {\n          if (void 0 !== e) return console.warn(\"DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.\"), this.crossVectors(t, e);\n          var n = this.x,\n            i = this.y,\n            r = this.z;\n          return this.x = i * t.z - r * t.y, this.y = r * t.x - n * t.z, this.z = n * t.y - i * t.x, this;\n        }\n      }, {\n        key: \"crossVectors\",\n        value: function (t, e) {\n          var n = t.x,\n            i = t.y,\n            r = t.z,\n            o = e.x,\n            s = e.y,\n            a = e.z;\n          return this.x = i * a - r * s, this.y = r * o - n * a, this.z = n * s - i * o, this;\n        }\n      }, {\n        key: \"angleTo\",\n        value: function (t) {\n          var e = this.dot(t) / (this.length() * t.length());\n          return Math.acos((0, o.clamp)(e, -1, 1));\n        }\n      }, {\n        key: \"distanceTo\",\n        value: function (t) {\n          return Math.sqrt(this.distanceToSquared(t));\n        }\n      }, {\n        key: \"distanceToSquared\",\n        value: function (t) {\n          var e = this.x - t.x,\n            n = this.y - t.y,\n            i = this.z - t.z;\n          return e * e + n * n + i * i;\n        }\n      }, {\n        key: \"setFromMatrixPosition\",\n        value: function (t) {\n          return this.x = t.elements[12], this.y = t.elements[13], this.z = t.elements[14], this;\n        }\n      }, {\n        key: \"setFromMatrixScale\",\n        value: function (t) {\n          var e = this.set(t.elements[0], t.elements[1], t.elements[2]).length(),\n            n = this.set(t.elements[4], t.elements[5], t.elements[6]).length(),\n            i = this.set(t.elements[8], t.elements[9], t.elements[10]).length();\n          return this.x = e, this.y = n, this.z = i, this;\n        }\n      }, {\n        key: \"setFromMatrixColumn\",\n        value: function (t, e) {\n          var n = 4 * t,\n            i = e.elements;\n          return this.x = i[n], this.y = i[n + 1], this.z = i[n + 2], this;\n        }\n      }, {\n        key: \"equals\",\n        value: function (t) {\n          return t.x === this.x && t.y === this.y && t.z === this.z;\n        }\n      }, {\n        key: \"fromArray\",\n        value: function (t) {\n          return this.x = t[0], this.y = t[1], this.z = t[2], this;\n        }\n      }, {\n        key: \"toArray\",\n        value: function () {\n          return [this.x, this.y, this.z];\n        }\n      }, {\n        key: \"clone\",\n        value: function () {\n          return new t(this.x, this.y, this.z);\n        }\n      }]), t;\n    }();\n    s.prototype.projectOnVector = function () {\n      var t = void 0,\n        e = void 0;\n      return function (n) {\n        return void 0 === t && (t = new s()), t.copy(n).normalize(), e = this.dot(t), this.copy(t).multiplyScalar(e);\n      };\n    }(), s.prototype.projectOnPlane = function () {\n      var t = void 0;\n      return function (e) {\n        return void 0 === t && (t = new s()), t.copy(this).projectOnVector(e), this.sub(t);\n      };\n    }(), s.prototype.reflect = function () {\n      var t = void 0;\n      return function (e) {\n        return void 0 === t && (t = new s()), this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)));\n      };\n    }(), s.prototype.clampScalar = function () {\n      var t = void 0,\n        e = void 0;\n      return function (n, i) {\n        return void 0 === t && (t = new s(), e = new s()), t.set(n, n, n), e.set(i, i, i), this.clamp(t, e);\n      };\n    }(), s.prototype.applyAxisAngle = function () {\n      var t = void 0;\n      return function (e, n) {\n        return void 0 === t && (t = new r.default()), this.applyQuaternion(t.setFromAxisAngle(e.normalize(), n)), this;\n      };\n    }(), e.default = s;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var i = 1e-4;\n    e.clamp = function (t, e, n) {\n      return t < e ? e : t > n ? n : t;\n    }, e.degToRad = function (t) {\n      return t * (Math.PI / 180);\n    }, e.approximatelyEquals = function (t, e, n) {\n      var r = n || i;\n      return Math.abs(t - e) <= r * Math.max(1, Math.abs(t), Math.abs(e));\n    }, e.radToDeg = function (t) {\n      return t * (180 / Math.PI);\n    }, e.sign = function (t) {\n      return \"number\" == typeof t ? t ? t < 0 ? -1 : 1 : t == t ? 0 : NaN : NaN;\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var i = function () {\n      function t(t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var i = e[n];\n          i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);\n        }\n      }\n      return function (e, n, i) {\n        return n && t(e.prototype, n), i && t(e, i), e;\n      };\n    }();\n    var r = function () {\n      function t(e, n, i, r) {\n        !function (t, e) {\n          if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, t), this.x = e || 0, this.y = n || 0, this.z = i || 0, this.w = void 0 !== r ? r : 1;\n      }\n      return i(t, [{\n        key: \"setFromAxisAngle\",\n        value: function (t, e) {\n          var n = e / 2,\n            i = Math.sin(n);\n          return this.x = t.x * i, this.y = t.y * i, this.z = t.z * i, this.w = Math.cos(n), this;\n        }\n      }, {\n        key: \"multiplyQuaternions\",\n        value: function (t, e) {\n          var n = t.x,\n            i = t.y,\n            r = t.z,\n            o = t.w,\n            s = e.x,\n            a = e.y,\n            u = e.z,\n            h = e.w;\n          return this.x = n * h + o * s + i * u - r * a, this.y = i * h + o * a + r * s - n * u, this.z = r * h + o * u + n * a - i * s, this.w = o * h - n * s - i * a - r * u, this;\n        }\n      }, {\n        key: \"setFromRotationMatrix\",\n        value: function (t) {\n          var e = t.elements,\n            n = e[0],\n            i = e[4],\n            r = e[8],\n            o = e[1],\n            s = e[5],\n            a = e[9],\n            u = e[2],\n            h = e[6],\n            l = e[10],\n            c = n + s + l,\n            y = void 0;\n          return c > 0 ? (y = .5 / Math.sqrt(c + 1), this.w = .25 / y, this.x = (h - a) * y, this.y = (r - u) * y, this.z = (o - i) * y) : n > s && n > l ? (y = 2 * Math.sqrt(1 + n - s - l), this.w = (h - a) / y, this.x = .25 * y, this.y = (i + o) / y, this.z = (r + u) / y) : s > l ? (y = 2 * Math.sqrt(1 + s - n - l), this.w = (r - u) / y, this.x = (i + o) / y, this.y = .25 * y, this.z = (a + h) / y) : (y = 2 * Math.sqrt(1 + l - n - s), this.w = (o - i) / y, this.x = (r + u) / y, this.y = (a + h) / y, this.z = .25 * y), this;\n        }\n      }]), t;\n    }();\n    e.default = r;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var i = n(1);\n    function r(t) {\n      return t * t;\n    }\n    function o(t, e) {\n      return r(t.x - e.x) + r(t.y - e.y);\n    }\n    var s = {\n      distanceToPoint: function (t, e) {\n        return Math.sqrt(function (t, e) {\n          var n = o(t.start, t.end);\n          if (0 === n) return o(e, t.start);\n          var i = ((e.x - t.start.x) * (t.end.x - t.start.x) + (e.y - t.start.y) * (t.end.y - t.start.y)) / n;\n          return o(e, i < 0 ? t.start : i > 1 ? t.end : {\n            x: t.start.x + i * (t.end.x - t.start.x),\n            y: t.start.y + i * (t.end.y - t.start.y)\n          });\n        }(t, e));\n      },\n      intersectLine: function (t, e) {\n        var n,\n          r,\n          o,\n          s,\n          a,\n          u,\n          h,\n          l,\n          c,\n          y,\n          f,\n          d = {},\n          v = t.start.x,\n          p = t.start.y,\n          x = t.end.x,\n          m = t.end.y,\n          g = e.start.x,\n          b = e.start.y,\n          z = e.end.x,\n          k = e.end.y,\n          M = void 0;\n        if (y = (n = m - p) * z + (o = v - x) * k + (a = x * p - v * m), (0 === (c = n * g + o * b + a) || 0 === y || (0, i.sign)(c) !== (0, i.sign)(y)) && (l = (r = k - b) * x + (s = g - z) * m + (u = z * b - g * k), 0 === (h = r * v + s * p + u) || 0 === l || (0, i.sign)(h) !== (0, i.sign)(l))) {\n          f = n * s - r * o, M = o * u - s * a;\n          var w = parseFloat(M / f);\n          M = r * a - n * u;\n          var P = parseFloat(M / f);\n          return d.x = w, d.y = P, d;\n        }\n      }\n    };\n    e.default = s;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.Vector3 = e.rect = e.quaternion = e.point = e.Plane = e.Matrix4 = e.sign = e.radToDeg = e.degToRad = e.clamp = e.lineSegment = e.Line3 = void 0;\n    var i = y(n(5)),\n      r = y(n(3)),\n      o = n(1),\n      s = y(n(6)),\n      a = y(n(7)),\n      u = y(n(8)),\n      h = y(n(2)),\n      l = y(n(9)),\n      c = y(n(0));\n    function y(t) {\n      return t && t.__esModule ? t : {\n        default: t\n      };\n    }\n    var f = {\n      Line3: i.default,\n      lineSegment: r.default,\n      clamp: o.clamp,\n      degToRad: o.degToRad,\n      radToDeg: o.radToDeg,\n      sign: o.sign,\n      Matrix4: s.default,\n      Plane: a.default,\n      point: u.default,\n      quaternion: h.default,\n      rect: l.default,\n      Vector3: c.default\n    };\n    e.Line3 = i.default, e.lineSegment = r.default, e.clamp = o.clamp, e.degToRad = o.degToRad, e.radToDeg = o.radToDeg, e.sign = o.sign, e.Matrix4 = s.default, e.Plane = a.default, e.point = u.default, e.quaternion = h.default, e.rect = l.default, e.Vector3 = c.default, e.default = f;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var i = function () {\n        function t(t, e) {\n          for (var n = 0; n < e.length; n++) {\n            var i = e[n];\n            i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);\n          }\n        }\n        return function (e, n, i) {\n          return n && t(e.prototype, n), i && t(e, i), e;\n        };\n      }(),\n      r = function (t) {\n        return t && t.__esModule ? t : {\n          default: t\n        };\n      }(n(0)),\n      o = n(1);\n    var s = function () {\n      function t(e, n) {\n        !function (t, e) {\n          if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, t), this.start = void 0 !== e ? e : new r.default(), this.end = void 0 !== n ? n : new r.default();\n      }\n      return i(t, [{\n        key: \"set\",\n        value: function (t, e) {\n          return this.start.copy(t), this.end.copy(e), this;\n        }\n      }, {\n        key: \"copy\",\n        value: function (t) {\n          return this.start.copy(t.start), this.end.copy(t.end), this;\n        }\n      }, {\n        key: \"center\",\n        value: function (t) {\n          return (t || new r.default()).addVectors(this.start, this.end).multiplyScalar(.5);\n        }\n      }, {\n        key: \"delta\",\n        value: function (t) {\n          return (t || new r.default()).subVectors(this.end, this.start);\n        }\n      }, {\n        key: \"distanceSq\",\n        value: function () {\n          return this.start.distanceToSquared(this.end);\n        }\n      }, {\n        key: \"distance\",\n        value: function () {\n          return this.start.distanceTo(this.end);\n        }\n      }, {\n        key: \"at\",\n        value: function (t, e) {\n          var n = e || new r.default();\n          return this.delta(n).multiplyScalar(t).add(this.start);\n        }\n      }, {\n        key: \"closestPointToPointParameter\",\n        value: function (t, e) {\n          var n = new r.default(),\n            i = new r.default();\n          n.subVectors(t, this.start), i.subVectors(this.end, this.start);\n          var s = i.dot(i),\n            a = i.dot(n) / s;\n          return e && (a = (0, o.clamp)(a, 0, 1)), a;\n        }\n      }, {\n        key: \"closestPointToPoint\",\n        value: function (t, e, n) {\n          var i = this.closestPointToPointParameter(t, e),\n            o = n || new r.default();\n          return this.delta(o).multiplyScalar(i).add(this.start);\n        }\n      }, {\n        key: \"applyMatrix4\",\n        value: function (t) {\n          return this.start.applyMatrix4(t), this.end.applyMatrix4(t), this;\n        }\n      }, {\n        key: \"equals\",\n        value: function (t) {\n          return t.start.equals(this.start) && t.end.equals(this.end);\n        }\n      }, {\n        key: \"clone\",\n        value: function () {\n          return new t().copy(this);\n        }\n      }, {\n        key: \"intersectLine\",\n        value: function (t) {\n          var e = this.end.clone().sub(this.start),\n            n = t.end.clone().sub(t.start),\n            i = t.start.clone().sub(this.start),\n            r = e.clone().cross(n),\n            s = i.clone().cross(n),\n            a = i.dot(r) / (i.lengthSq() * r.lengthSq());\n          if ((0, o.approximatelyEquals)(a, 0)) {\n            var u = s.dot(r) / r.lengthSq();\n            if (!(u > 1 || isNaN(u))) {\n              var h = this.start.clone().add(e.clone().multiplyScalar(u));\n              return h.clone().sub(t.start).lengthSq() + h.clone().sub(t.end).lengthSq() <= t.distanceSq() ? h : void 0;\n            }\n          }\n        }\n      }]), t;\n    }();\n    e.default = s;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var i = function () {\n        function t(t, e) {\n          for (var n = 0; n < e.length; n++) {\n            var i = e[n];\n            i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);\n          }\n        }\n        return function (e, n, i) {\n          return n && t(e.prototype, n), i && t(e, i), e;\n        };\n      }(),\n      r = function (t) {\n        return t && t.__esModule ? t : {\n          default: t\n        };\n      }(n(0));\n    var o = function () {\n      function t(e, n, i, r, o, s, a, u, h, l, c, y, f, d, v, p) {\n        !function (t, e) {\n          if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, t), this.elements = new Float32Array(16);\n        var x = this.elements;\n        x[0] = void 0 !== e ? e : 1, x[4] = n || 0, x[8] = i || 0, x[12] = r || 0, x[1] = o || 0, x[5] = void 0 !== s ? s : 1, x[9] = a || 0, x[13] = u || 0, x[2] = h || 0, x[6] = l || 0, x[10] = void 0 !== c ? c : 1, x[14] = y || 0, x[3] = f || 0, x[7] = d || 0, x[11] = v || 0, x[15] = void 0 !== p ? p : 1;\n      }\n      return i(t, [{\n        key: \"makeRotationFromQuaternion\",\n        value: function (t) {\n          var e = this.elements,\n            n = t.x,\n            i = t.y,\n            r = t.z,\n            o = t.w,\n            s = n + n,\n            a = i + i,\n            u = r + r,\n            h = n * s,\n            l = n * a,\n            c = n * u,\n            y = i * a,\n            f = i * u,\n            d = r * u,\n            v = o * s,\n            p = o * a,\n            x = o * u;\n          return e[0] = 1 - (y + d), e[4] = l - x, e[8] = c + p, e[1] = l + x, e[5] = 1 - (h + d), e[9] = f - v, e[2] = c - p, e[6] = f + v, e[10] = 1 - (h + y), e[3] = 0, e[7] = 0, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this;\n        }\n      }, {\n        key: \"multiplyMatrices\",\n        value: function (t, e) {\n          var n = t.elements,\n            i = e.elements,\n            r = this.elements,\n            o = n[0],\n            s = n[4],\n            a = n[8],\n            u = n[12],\n            h = n[1],\n            l = n[5],\n            c = n[9],\n            y = n[13],\n            f = n[2],\n            d = n[6],\n            v = n[10],\n            p = n[14],\n            x = n[3],\n            m = n[7],\n            g = n[11],\n            b = n[15],\n            z = i[0],\n            k = i[4],\n            M = i[8],\n            w = i[12],\n            P = i[1],\n            R = i[5],\n            L = i[9],\n            T = i[13],\n            S = i[2],\n            _ = i[6],\n            q = i[10],\n            j = i[14],\n            V = i[3],\n            E = i[7],\n            O = i[11],\n            C = i[15];\n          return r[0] = o * z + s * P + a * S + u * V, r[4] = o * k + s * R + a * _ + u * E, r[8] = o * M + s * L + a * q + u * O, r[12] = o * w + s * T + a * j + u * C, r[1] = h * z + l * P + c * S + y * V, r[5] = h * k + l * R + c * _ + y * E, r[9] = h * M + l * L + c * q + y * O, r[13] = h * w + l * T + c * j + y * C, r[2] = f * z + d * P + v * S + p * V, r[6] = f * k + d * R + v * _ + p * E, r[10] = f * M + d * L + v * q + p * O, r[14] = f * w + d * T + v * j + p * C, r[3] = x * z + m * P + g * S + b * V, r[7] = x * k + m * R + g * _ + b * E, r[11] = x * M + m * L + g * q + b * O, r[15] = x * w + m * T + g * j + b * C, this;\n        }\n      }, {\n        key: \"multiply\",\n        value: function (t, e) {\n          return void 0 !== e ? (console.warn(\"DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.\"), this.multiplyMatrices(t, e)) : this.multiplyMatrices(this, t);\n        }\n      }, {\n        key: \"getInverse\",\n        value: function (t, e) {\n          var n = this.elements,\n            i = t.elements,\n            r = i[0],\n            o = i[4],\n            s = i[8],\n            a = i[12],\n            u = i[1],\n            h = i[5],\n            l = i[9],\n            c = i[13],\n            y = i[2],\n            f = i[6],\n            d = i[10],\n            v = i[14],\n            p = i[3],\n            x = i[7],\n            m = i[11],\n            g = i[15];\n          n[0] = l * v * x - c * d * x + c * f * m - h * v * m - l * f * g + h * d * g, n[4] = a * d * x - s * v * x - a * f * m + o * v * m + s * f * g - o * d * g, n[8] = s * c * x - a * l * x + a * h * m - o * c * m - s * h * g + o * l * g, n[12] = a * l * f - s * c * f - a * h * d + o * c * d + s * h * v - o * l * v, n[1] = c * d * p - l * v * p - c * y * m + u * v * m + l * y * g - u * d * g, n[5] = s * v * p - a * d * p + a * y * m - r * v * m - s * y * g + r * d * g, n[9] = a * l * p - s * c * p - a * u * m + r * c * m + s * u * g - r * l * g, n[13] = s * c * y - a * l * y + a * u * d - r * c * d - s * u * v + r * l * v, n[2] = h * v * p - c * f * p + c * y * x - u * v * x - h * y * g + u * f * g, n[6] = a * f * p - o * v * p - a * y * x + r * v * x + o * y * g - r * f * g, n[10] = o * c * p - a * h * p + a * u * x - r * c * x - o * u * g + r * h * g, n[14] = a * h * y - o * c * y - a * u * f + r * c * f + o * u * v - r * h * v, n[3] = l * f * p - h * d * p - l * y * x + u * d * x + h * y * m - u * f * m, n[7] = o * d * p - s * f * p + s * y * x - r * d * x - o * y * m + r * f * m, n[11] = s * h * p - o * l * p - s * u * x + r * l * x + o * u * m - r * h * m, n[15] = o * l * y - s * h * y + s * u * f - r * l * f - o * u * d + r * h * d;\n          var b = r * n[0] + u * n[4] + y * n[8] + p * n[12];\n          if (0 === b) {\n            var z = \"Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n            if (e) throw new Error(z);\n            return console.warn(z), this.identity(), this;\n          }\n          return this.multiplyScalar(1 / b), this;\n        }\n      }, {\n        key: \"applyToVector3Array\",\n        value: function () {\n          var t = new r.default();\n          return function (e, n, i) {\n            void 0 === n && (n = 0), void 0 === i && (i = e.length);\n            for (var r = 0, o = n; r < i; r += 3, o += 3) t.x = e[o], t.y = e[o + 1], t.z = e[o + 2], t.applyMatrix4(this), e[o] = t.x, e[o + 1] = t.y, e[o + 2] = t.z;\n            return e;\n          };\n        }\n      }, {\n        key: \"makeTranslation\",\n        value: function (t, e, n) {\n          return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, n, 0, 0, 0, 1), this;\n        }\n      }, {\n        key: \"multiplyScalar\",\n        value: function (t) {\n          var e = this.elements;\n          return e[0] *= t, e[4] *= t, e[8] *= t, e[12] *= t, e[1] *= t, e[5] *= t, e[9] *= t, e[13] *= t, e[2] *= t, e[6] *= t, e[10] *= t, e[14] *= t, e[3] *= t, e[7] *= t, e[11] *= t, e[15] *= t, this;\n        }\n      }, {\n        key: \"set\",\n        value: function (t, e, n, i, r, o, s, a, u, h, l, c, y, f, d, v) {\n          var p = this.elements;\n          return p[0] = t, p[4] = e, p[8] = n, p[12] = i, p[1] = r, p[5] = o, p[9] = s, p[13] = a, p[2] = u, p[6] = h, p[10] = l, p[14] = c, p[3] = y, p[7] = f, p[11] = d, p[15] = v, this;\n        }\n      }, {\n        key: \"makeScale\",\n        value: function (t, e, n) {\n          return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;\n        }\n      }]), t;\n    }();\n    e.default = o;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var i = function () {\n        function t(t, e) {\n          for (var n = 0; n < e.length; n++) {\n            var i = e[n];\n            i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(t, i.key, i);\n          }\n        }\n        return function (e, n, i) {\n          return n && t(e.prototype, n), i && t(e, i), e;\n        };\n      }(),\n      r = function (t) {\n        return t && t.__esModule ? t : {\n          default: t\n        };\n      }(n(0));\n    var o = function () {\n      function t(e, n) {\n        !function (t, e) {\n          if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n        }(this, t), this.normal = void 0 !== e ? e : new r.default(1, 0, 0), this.constant = void 0 !== n ? n : 0;\n      }\n      return i(t, [{\n        key: \"set\",\n        value: function (t, e) {\n          return this.normal.copy(t), this.constant = e, this;\n        }\n      }, {\n        key: \"setComponents\",\n        value: function (t, e, n, i) {\n          return this.normal.set(t, e, n), this.constant = i, this;\n        }\n      }, {\n        key: \"setFromNormalAndCoplanarPoint\",\n        value: function (t, e) {\n          return this.normal.copy(t), this.constant = -e.dot(this.normal), this;\n        }\n      }, {\n        key: \"copy\",\n        value: function (t) {\n          return this.normal.copy(t.normal), this.constant = t.constant, this;\n        }\n      }, {\n        key: \"normalize\",\n        value: function () {\n          var t = 1 / this.normal.length();\n          return this.normal.multiplyScalar(t), this.constant *= t, this;\n        }\n      }, {\n        key: \"negate\",\n        value: function () {\n          return this.constant *= -1, this.normal.negate(), this;\n        }\n      }, {\n        key: \"distanceToPoint\",\n        value: function (t) {\n          return this.normal.dot(t) + this.constant;\n        }\n      }, {\n        key: \"distanceToSphere\",\n        value: function (t) {\n          return this.distanceToPoint(t.center) - t.radius;\n        }\n      }, {\n        key: \"projectPoint\",\n        value: function (t, e) {\n          return this.orthoPoint(t, e).sub(t).negate();\n        }\n      }, {\n        key: \"orthoPoint\",\n        value: function (t, e) {\n          var n = this.distanceToPoint(t);\n          return (e || new r.default()).copy(this.normal).multiplyScalar(n);\n        }\n      }, {\n        key: \"isIntersectionLine\",\n        value: function (t) {\n          var e = this.distanceToPoint(t.start),\n            n = this.distanceToPoint(t.end);\n          return e < 0 && n > 0 || n < 0 && e > 0;\n        }\n      }, {\n        key: \"intersectPlane\",\n        value: function (t) {\n          var e = this.normal.clone().cross(t.normal),\n            n = {\n              origin: new r.default(),\n              direction: e\n            };\n          if (this.normal.clone().cross(t.normal).length < 1e-10) return n.direction = new r.default(), n;\n          var i = this.constant,\n            o = t.constant,\n            s = this.normal.clone().dot(t.normal),\n            a = -(i - o * s) / (1 - s * s),\n            u = -(o - i * s) / (1 - s * s);\n          return n.origin = this.normal.clone().multiplyScalar(a).add(t.normal.clone().multiplyScalar(u)), n;\n        }\n      }, {\n        key: \"coplanarPoint\",\n        value: function (t) {\n          return (t || new r.default()).copy(this.normal).multiplyScalar(-this.constant);\n        }\n      }, {\n        key: \"translate\",\n        value: function (t) {\n          return this.constant = this.constant - t.dot(this.normal), this;\n        }\n      }, {\n        key: \"equals\",\n        value: function (t) {\n          return t.normal.equals(this.normal) && t.constant === this.constant;\n        }\n      }, {\n        key: \"clone\",\n        value: function () {\n          return new t().copy(this);\n        }\n      }]), t;\n    }();\n    o.prototype.setFromCoplanarPoints = function () {\n      var t = new r.default(),\n        e = new r.default();\n      return function (n, i, r) {\n        var o = t.subVectors(r, i).cross(e.subVectors(n, i)).normalize();\n        return this.setFromNormalAndCoplanarPoint(o, n), this;\n      };\n    }(), o.prototype.intersectLine = function () {\n      var t = new r.default();\n      return function (e, n) {\n        var i = n || new r.default(),\n          o = e.delta(t),\n          s = this.normal.dot(o);\n        if (0 === s) return 0 === this.distanceToPoint(e.start) ? i.copy(e.start) : void 0;\n        var a = -(e.start.dot(this.normal) + this.constant) / s;\n        return a < 0 || a > 1 ? void 0 : i.copy(o).multiplyScalar(a).add(e.start);\n      };\n    }(), e.default = o;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function i(t, e) {\n      return {\n        x: t.x - e.x,\n        y: t.y - e.y\n      };\n    }\n    function r(t, e) {\n      return Math.sqrt(o(t, e));\n    }\n    function o(t, e) {\n      var n = i(t, e);\n      return n.x * n.x + n.y * n.y;\n    }\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var s = {\n      subtract: i,\n      copy: function (t) {\n        return {\n          x: t.x,\n          y: t.y\n        };\n      },\n      pageToPoint: function (t) {\n        return {\n          x: t.pageX,\n          y: t.pageY\n        };\n      },\n      distance: r,\n      distanceSquared: o,\n      insideRect: function (t, e) {\n        return !(t.x < e.left || t.x > e.left + e.width || t.y < e.top || t.y > e.top + e.height);\n      },\n      findClosestPoint: function (t, e) {\n        var n = [],\n          i = void 0;\n        return t.forEach(function (t, o) {\n          var s = r(t, e);\n          n.push(s), i = 0 === o ? s : Math.min(s, i);\n        }), t[n.indexOf(i)];\n      }\n    };\n    e.default = s;\n  }, function (t, e, n) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var i = function (t) {\n      return t && t.__esModule ? t : {\n        default: t\n      };\n    }(n(3));\n    function r(t) {\n      return {\n        topLeft: {\n          x: t.left,\n          y: t.top\n        },\n        bottomRight: {\n          x: t.left + t.width,\n          y: t.top + t.height\n        }\n      };\n    }\n    var o = {\n      distanceToPoint: function (t, e) {\n        var n = 655535;\n        return function (t) {\n          return [{\n            start: {\n              x: t.left,\n              y: t.top\n            },\n            end: {\n              x: t.left + t.width,\n              y: t.top\n            }\n          }, {\n            start: {\n              x: t.left + t.width,\n              y: t.top\n            },\n            end: {\n              x: t.left + t.width,\n              y: t.top + t.height\n            }\n          }, {\n            start: {\n              x: t.left + t.width,\n              y: t.top + t.height\n            },\n            end: {\n              x: t.left,\n              y: t.top + t.height\n            }\n          }, {\n            start: {\n              x: t.left,\n              y: t.top + t.height\n            },\n            end: {\n              x: t.left,\n              y: t.top\n            }\n          }];\n        }(t).forEach(function (t) {\n          var r = i.default.distanceToPoint(t, e);\n          r < n && (n = r);\n        }), n;\n      },\n      getIntersectionRect: function (t, e) {\n        var n = {\n          topLeft: {},\n          bottomRight: {}\n        };\n        if (function (t, e) {\n          var n = void 0,\n            i = void 0,\n            o = r(t),\n            s = r(e);\n          return n = t.width >= 0 ? e.width >= 0 ? !(o.bottomRight.x <= s.topLeft.x || s.bottomRight.x <= o.topLeft.x) : !(o.bottomRight.x <= s.bottomRight.x || s.topLeft.x <= o.topLeft.x) : e.width >= 0 ? !(o.topLeft.x <= s.topLeft.x || s.bottomRight.x <= o.bottomRight.x) : !(o.topLeft.x <= s.bottomRight.x || s.topLeft.x <= o.bottomRight.x), i = t.height >= 0 ? e.height >= 0 ? !(o.bottomRight.y <= s.topLeft.y || s.bottomRight.y <= o.topLeft.y) : !(o.bottomRight.y <= s.bottomRight.y || s.topLeft.y <= o.topLeft.y) : e.height >= 0 ? !(o.topLeft.y <= s.topLeft.y || s.bottomRight.y <= o.bottomRight.y) : !(o.topLeft.y <= s.bottomRight.y || s.top <= o.bottomRight.y), n && i;\n        }(t, e)) {\n          var i = r(t),\n            o = r(e);\n          return t.width >= 0 ? e.width >= 0 ? (n.topLeft.x = Math.max(i.topLeft.x, o.topLeft.x), n.bottomRight.x = Math.min(i.bottomRight.x, o.bottomRight.x)) : (n.topLeft.x = Math.max(i.topLeft.x, o.bottomRight.x), n.bottomRight.x = Math.min(i.bottomRight.x, o.topLeft.x)) : e.width >= 0 ? (n.topLeft.x = Math.min(i.topLeft.x, o.bottomRight.x), n.bottomRight.x = Math.max(i.bottomRight.x, o.topLeft.x)) : (n.topLeft.x = Math.min(i.topLeft.x, o.topLeft.x), n.bottomRight.x = Math.max(i.bottomRight.x, o.bottomRight.x)), t.height >= 0 ? e.height >= 0 ? (n.topLeft.y = Math.max(i.topLeft.y, o.topLeft.y), n.bottomRight.y = Math.min(i.bottomRight.y, o.bottomRight.y)) : (n.topLeft.y = Math.max(i.topLeft.y, o.bottomRight.y), n.bottomRight.y = Math.min(i.bottomRight.y, o.topLeft.y)) : e.height >= 0 ? (n.topLeft.y = Math.min(i.topLeft.y, o.bottomRight.y), n.bottomRight.y = Math.max(i.bottomRight.y, o.topLeft.y)) : (n.topLeft.y = Math.min(i.topLeft.y, o.topLeft.y), n.bottomRight.y = Math.max(i.bottomRight.y, o.bottomRight.y)), n;\n        }\n      }\n    };\n    e.default = o;\n  }]);\n});","map":{"version":3,"names":["t","e","exports","module","define","amd","cornerstoneMath","window","n","i","r","l","call","m","c","d","o","Object","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","create","bind","default","prototype","hasOwnProperty","p","s","length","configurable","writable","key","TypeError","x","y","z","Error","console","warn","addVectors","subVectors","multiplyVectors","elements","a","w","u","h","normalize","Math","floor","ceil","round","multiplyScalar","sqrt","abs","divideScalar","crossVectors","dot","acos","clamp","distanceToSquared","set","projectOnVector","copy","projectOnPlane","sub","reflect","clampScalar","applyAxisAngle","applyQuaternion","setFromAxisAngle","degToRad","PI","approximatelyEquals","max","radToDeg","sign","NaN","sin","cos","distanceToPoint","start","end","intersectLine","f","v","g","b","k","M","parseFloat","P","Vector3","rect","quaternion","point","Plane","Matrix4","lineSegment","Line3","distanceTo","delta","add","closestPointToPointParameter","applyMatrix4","equals","clone","cross","lengthSq","isNaN","distanceSq","Float32Array","R","L","T","S","_","q","j","V","E","O","C","multiplyMatrices","identity","normal","constant","negate","center","radius","orthoPoint","origin","direction","setFromCoplanarPoints","setFromNormalAndCoplanarPoint","subtract","pageToPoint","pageX","pageY","distance","distanceSquared","insideRect","left","width","top","height","findClosestPoint","forEach","push","min","indexOf","topLeft","bottomRight","getIntersectionRect"],"sources":["webpack://cornerstoneMath/webpack/universalModuleDefinition","webpack://cornerstoneMath/webpack/bootstrap","webpack://cornerstoneMath/vector3.js","webpack://cornerstoneMath/math.js","webpack://cornerstoneMath/quaternion.js","webpack://cornerstoneMath/lineSegment.js","webpack://cornerstoneMath/index.js","webpack://cornerstoneMath/Line3.js","webpack://cornerstoneMath/matrix4.js","webpack://cornerstoneMath/plane.js","webpack://cornerstoneMath/point.js","webpack://cornerstoneMath/rect.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstone-math\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstone-math\"] = factory();\n\telse\n\t\troot[\"cornerstoneMath\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import Quaternion from './quaternion.js';\r\nimport { clamp } from './math.js';\r\n\r\n// Based on THREE.JS\r\nclass Vector3 {\r\n\r\n  constructor (x, y, z) {\r\n    this.x = x || 0;\r\n    this.y = y || 0;\r\n    this.z = z || 0;\r\n  }\r\n\r\n  set (x, y, z) {\r\n\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  setX (x) {\r\n\r\n    this.x = x;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  setY (y) {\r\n\r\n    this.y = y;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  setZ (z) {\r\n\r\n    this.z = z;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  setComponent (index, value) {\r\n\r\n    switch (index) {\r\n\r\n    case 0: this.x = value; break;\r\n    case 1: this.y = value; break;\r\n    case 2: this.z = value; break;\r\n    default: throw new Error(`index is out of range: ${index}`);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  getComponent (index) {\r\n\r\n    switch (index) {\r\n\r\n    case 0: return this.x;\r\n    case 1: return this.y;\r\n    case 2: return this.z;\r\n    default: throw new Error(`index is out of range: ${index}`);\r\n\r\n    }\r\n\r\n  }\r\n\r\n  copy (v) {\r\n\r\n    this.x = v.x;\r\n    this.y = v.y;\r\n    this.z = v.z;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  add (v, w) {\r\n\r\n    if (w !== undefined) {\r\n\r\n      console.warn('DEPRECATED: Vector3\\'s .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\r\n\r\n      return this.addVectors(v, w);\r\n\r\n    }\r\n\r\n    this.x += v.x;\r\n    this.y += v.y;\r\n    this.z += v.z;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  addScalar (s) {\r\n\r\n    this.x += s;\r\n    this.y += s;\r\n    this.z += s;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  addVectors (a, b) {\r\n\r\n    this.x = a.x + b.x;\r\n    this.y = a.y + b.y;\r\n    this.z = a.z + b.z;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  sub (v, w) {\r\n\r\n    if (w !== undefined) {\r\n\r\n      console.warn('DEPRECATED: Vector3\\'s .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\r\n\r\n      return this.subVectors(v, w);\r\n\r\n    }\r\n\r\n    this.x -= v.x;\r\n    this.y -= v.y;\r\n    this.z -= v.z;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  subVectors (a, b) {\r\n\r\n    this.x = a.x - b.x;\r\n    this.y = a.y - b.y;\r\n    this.z = a.z - b.z;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  multiply (v, w) {\r\n\r\n    if (w !== undefined) {\r\n\r\n      console.warn('DEPRECATED: Vector3\\'s .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\r\n\r\n      return this.multiplyVectors(v, w);\r\n\r\n    }\r\n\r\n    this.x *= v.x;\r\n    this.y *= v.y;\r\n    this.z *= v.z;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  multiplyScalar (scalar) {\r\n\r\n    this.x *= scalar;\r\n    this.y *= scalar;\r\n    this.z *= scalar;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  multiplyVectors (a, b) {\r\n\r\n    this.x = a.x * b.x;\r\n    this.y = a.y * b.y;\r\n    this.z = a.z * b.z;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  applyMatrix3 (m) {\r\n\r\n    const x = this.x;\r\n    const y = this.y;\r\n    const z = this.z;\r\n\r\n    const e = m.elements;\r\n\r\n    this.x = e[0] * x + e[3] * y + e[6] * z;\r\n    this.y = e[1] * x + e[4] * y + e[7] * z;\r\n    this.z = e[2] * x + e[5] * y + e[8] * z;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  applyMatrix4 (m) {\r\n\r\n    // Input: THREE.Matrix4 affine matrix\r\n\r\n    let x = this.x,\r\n      y = this.y,\r\n      z = this.z;\r\n\r\n    const e = m.elements;\r\n\r\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\r\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\r\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  applyProjection (m) {\r\n\r\n    // Input: THREE.Matrix4 projection matrix\r\n\r\n    let x = this.x,\r\n      y = this.y,\r\n      z = this.z;\r\n\r\n    const e = m.elements;\r\n    const d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]); // Perspective divide\r\n\r\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;\r\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;\r\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  applyQuaternion (q) {\r\n\r\n    const x = this.x;\r\n    const y = this.y;\r\n    const z = this.z;\r\n\r\n    const qx = q.x;\r\n    const qy = q.y;\r\n    const qz = q.z;\r\n    const qw = q.w;\r\n\r\n    // Calculate quat * vector\r\n\r\n    const ix = qw * x + qy * z - qz * y;\r\n    const iy = qw * y + qz * x - qx * z;\r\n    const iz = qw * z + qx * y - qy * x;\r\n    const iw = -qx * x - qy * y - qz * z;\r\n\r\n    // Calculate result * inverse quat\r\n\r\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  transformDirection (m) {\r\n\r\n    // Input: THREE.Matrix4 affine matrix\r\n    // Vector interpreted as a direction\r\n\r\n    let x = this.x,\r\n      y = this.y,\r\n      z = this.z;\r\n\r\n    const e = m.elements;\r\n\r\n    this.x = e[0] * x + e[4] * y + e[8] * z;\r\n    this.y = e[1] * x + e[5] * y + e[9] * z;\r\n    this.z = e[2] * x + e[6] * y + e[10] * z;\r\n\r\n    this.normalize();\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  divide (v) {\r\n\r\n    this.x /= v.x;\r\n    this.y /= v.y;\r\n    this.z /= v.z;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  divideScalar (scalar) {\r\n\r\n    if (scalar !== 0) {\r\n\r\n      const invScalar = 1 / scalar;\r\n\r\n      this.x *= invScalar;\r\n      this.y *= invScalar;\r\n      this.z *= invScalar;\r\n\r\n    } else {\r\n\r\n      this.x = 0;\r\n      this.y = 0;\r\n      this.z = 0;\r\n\r\n    }\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  min (v) {\r\n\r\n    if (this.x > v.x) {\r\n\r\n      this.x = v.x;\r\n\r\n    }\r\n\r\n    if (this.y > v.y) {\r\n\r\n      this.y = v.y;\r\n\r\n    }\r\n\r\n    if (this.z > v.z) {\r\n\r\n      this.z = v.z;\r\n\r\n    }\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  max (v) {\r\n\r\n    if (this.x < v.x) {\r\n\r\n      this.x = v.x;\r\n\r\n    }\r\n\r\n    if (this.y < v.y) {\r\n\r\n      this.y = v.y;\r\n\r\n    }\r\n\r\n    if (this.z < v.z) {\r\n\r\n      this.z = v.z;\r\n\r\n    }\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  clamp (min, max) {\r\n\r\n    // This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n    if (this.x < min.x) {\r\n\r\n      this.x = min.x;\r\n\r\n    } else if (this.x > max.x) {\r\n\r\n      this.x = max.x;\r\n\r\n    }\r\n\r\n    if (this.y < min.y) {\r\n\r\n      this.y = min.y;\r\n\r\n    } else if (this.y > max.y) {\r\n\r\n      this.y = max.y;\r\n\r\n    }\r\n\r\n    if (this.z < min.z) {\r\n\r\n      this.z = min.z;\r\n\r\n    } else if (this.z > max.z) {\r\n\r\n      this.z = max.z;\r\n\r\n    }\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n\r\n  floor () {\r\n\r\n    this.x = Math.floor(this.x);\r\n    this.y = Math.floor(this.y);\r\n    this.z = Math.floor(this.z);\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  ceil () {\r\n\r\n    this.x = Math.ceil(this.x);\r\n    this.y = Math.ceil(this.y);\r\n    this.z = Math.ceil(this.z);\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  round () {\r\n\r\n    this.x = Math.round(this.x);\r\n    this.y = Math.round(this.y);\r\n    this.z = Math.round(this.z);\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  roundToZero () {\r\n\r\n    this.x = (this.x < 0) ? Math.ceil(this.x) : Math.floor(this.x);\r\n    this.y = (this.y < 0) ? Math.ceil(this.y) : Math.floor(this.y);\r\n    this.z = (this.z < 0) ? Math.ceil(this.z) : Math.floor(this.z);\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  negate () {\r\n\r\n    return this.multiplyScalar(-1);\r\n\r\n  }\r\n\r\n  dot (v) {\r\n\r\n    return this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n  }\r\n\r\n  lengthSq () {\r\n\r\n    return this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n  }\r\n\r\n  length () {\r\n\r\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n\r\n  }\r\n\r\n  lengthManhattan () {\r\n\r\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\r\n\r\n  }\r\n\r\n  normalize () {\r\n\r\n    return this.divideScalar(this.length());\r\n\r\n  }\r\n\r\n  setLength (l) {\r\n\r\n    const oldLength = this.length();\r\n\r\n    if (oldLength !== 0 && l !== oldLength) {\r\n\r\n      this.multiplyScalar(l / oldLength);\r\n    }\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  lerp (v, alpha) {\r\n\r\n    this.x += (v.x - this.x) * alpha;\r\n    this.y += (v.y - this.y) * alpha;\r\n    this.z += (v.z - this.z) * alpha;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  cross (v, w) {\r\n\r\n    if (w !== undefined) {\r\n\r\n      console.warn('DEPRECATED: Vector3\\'s .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\r\n\r\n      return this.crossVectors(v, w);\r\n\r\n    }\r\n\r\n    let x = this.x,\r\n      y = this.y,\r\n      z = this.z;\r\n\r\n    this.x = y * v.z - z * v.y;\r\n    this.y = z * v.x - x * v.z;\r\n    this.z = x * v.y - y * v.x;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  crossVectors (a, b) {\r\n\r\n    let ax = a.x,\r\n      ay = a.y,\r\n      az = a.z;\r\n    let bx = b.x,\r\n      by = b.y,\r\n      bz = b.z;\r\n\r\n    this.x = ay * bz - az * by;\r\n    this.y = az * bx - ax * bz;\r\n    this.z = ax * by - ay * bx;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  angleTo (v) {\r\n\r\n    const theta = this.dot(v) / (this.length() * v.length());\r\n\r\n    // Clamp, to handle numerical problems\r\n\r\n    return Math.acos(clamp(theta, -1, 1));\r\n\r\n  }\r\n\r\n  distanceTo (v) {\r\n\r\n    return Math.sqrt(this.distanceToSquared(v));\r\n\r\n  }\r\n\r\n  distanceToSquared (v) {\r\n\r\n    const dx = this.x - v.x;\r\n    const dy = this.y - v.y;\r\n    const dz = this.z - v.z;\r\n\r\n    return dx * dx + dy * dy + dz * dz;\r\n\r\n  }\r\n\r\n  setFromMatrixPosition (m) {\r\n\r\n    this.x = m.elements[12];\r\n    this.y = m.elements[13];\r\n    this.z = m.elements[14];\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  setFromMatrixScale (m) {\r\n\r\n    const sx = this.set(m.elements[0], m.elements[1], m.elements[2]).length();\r\n    const sy = this.set(m.elements[4], m.elements[5], m.elements[6]).length();\r\n    const sz = this.set(m.elements[8], m.elements[9], m.elements[10]).length();\r\n\r\n    this.x = sx;\r\n    this.y = sy;\r\n    this.z = sz;\r\n\r\n    return this;\r\n  }\r\n\r\n  setFromMatrixColumn (index, matrix) {\r\n\r\n    const offset = index * 4;\r\n\r\n    const me = matrix.elements;\r\n\r\n    this.x = me[offset];\r\n    this.y = me[offset + 1];\r\n    this.z = me[offset + 2];\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  equals (v) {\r\n\r\n    return ((v.x === this.x) && (v.y === this.y) && (v.z === this.z));\r\n\r\n  }\r\n\r\n  fromArray (array) {\r\n\r\n    this.x = array[0];\r\n    this.y = array[1];\r\n    this.z = array[2];\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  toArray () {\r\n\r\n    return [this.x, this.y, this.z];\r\n\r\n  }\r\n\r\n  clone () {\r\n\r\n    return new Vector3(this.x, this.y, this.z);\r\n\r\n  }\r\n}\r\n\r\nVector3.prototype.projectOnVector = (function () {\r\n\r\n  let v1, dot;\r\n\r\n  return function (vector) {\r\n\r\n    if (v1 === undefined) {\r\n      v1 = new Vector3();\r\n    }\r\n\r\n    v1.copy(vector).normalize();\r\n\r\n    dot = this.dot(v1);\r\n\r\n    return this.copy(v1).multiplyScalar(dot);\r\n\r\n  };\r\n\r\n})();\r\n\r\nVector3.prototype.projectOnPlane = (function () {\r\n\r\n  let v1;\r\n\r\n  return function (planeNormal) {\r\n\r\n    if (v1 === undefined) {\r\n      v1 = new Vector3();\r\n    }\r\n\r\n    v1.copy(this).projectOnVector(planeNormal);\r\n\r\n    return this.sub(v1);\r\n\r\n  };\r\n\r\n})();\r\n\r\nVector3.prototype.reflect = (function () {\r\n\r\n  // Reflect incident vector off plane orthogonal to normal\r\n  // Normal is assumed to have unit length\r\n\r\n  let v1;\r\n\r\n  return function (normal) {\r\n\r\n    if (v1 === undefined) {\r\n      v1 = new Vector3();\r\n    }\r\n\r\n    return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\r\n\r\n  };\r\n\r\n})();\r\n\r\n\r\nVector3.prototype.clampScalar = (function () {\r\n\r\n  let min, max;\r\n\r\n  return function (minVal, maxVal) {\r\n\r\n    if (min === undefined) {\r\n\r\n      min = new Vector3();\r\n      max = new Vector3();\r\n\r\n    }\r\n\r\n    min.set(minVal, minVal, minVal);\r\n    max.set(maxVal, maxVal, maxVal);\r\n\r\n    return this.clamp(min, max);\r\n\r\n  };\r\n\r\n})();\r\n\r\nVector3.prototype.applyAxisAngle = (function () {\r\n\r\n  let quaternion;\r\n\r\n  return function (axis, angle) {\r\n\r\n    if (quaternion === undefined) {\r\n      quaternion = new Quaternion();\r\n    }\r\n\r\n    this.applyQuaternion(quaternion.setFromAxisAngle(axis.normalize(), angle));\r\n\r\n    return this;\r\n\r\n  };\r\n\r\n})();\r\n\r\nexport default Vector3;\r\n","const EPSILON = 0.0001;\r\n// Based on THREE.JS\r\nfunction clamp (x, a, b) {\r\n  return (x < a) ? a : ((x > b) ? b : x);\r\n}\r\n\r\nfunction degToRad (degrees) {\r\n  const degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\r\n  return degrees * degreeToRadiansFactor;\r\n}\r\n\r\nfunction radToDeg (radians) {\r\n  const radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\r\n  return radians * radianToDegreesFactor;\r\n}\r\n\r\n// Returns sign of number\r\nfunction sign (x) {\r\n  return typeof x === 'number' ? x ? x < 0 ? -1 : 1 : x === x ? 0 : NaN : NaN;\r\n}\r\n\r\n\r\n/**\r\n * \r\n * Compare if two numbers are equal(if they have approximately the same value). to prevent js float precision issue\r\n * Adapted from glmatrix\r\n * @param {number} a\r\n * @param {number} b\r\n * @param {number} epsilon Precision to define proximity\r\n * @return {boolean} check whether or not the arguments have approximately the same value\r\n * \r\n */\r\nfunction approximatelyEquals (a, b, epsilon) {\r\n  const _epsilon = epsilon || EPSILON;\r\n  return Math.abs(a - b) <= _epsilon*Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}\r\n\r\nexport {\r\n  clamp,\r\n  degToRad,\r\n  approximatelyEquals,\r\n  radToDeg,\r\n  sign\r\n};\r\n","class Quaternion {\r\n  constructor (x, y, z, w) {\r\n    this.x = x || 0;\r\n    this.y = y || 0;\r\n    this.z = z || 0;\r\n    this.w = (w !== undefined) ? w : 1;\r\n  }\r\n\r\n  setFromAxisAngle (axis, angle) {\r\n    let halfAngle = angle / 2,\r\n      s = Math.sin(halfAngle);\r\n\r\n    this.x = axis.x * s;\r\n    this.y = axis.y * s;\r\n    this.z = axis.z * s;\r\n    this.w = Math.cos(halfAngle);\r\n\r\n    return this;\r\n  }\r\n\r\n  multiplyQuaternions (a, b) {\r\n    let qax = a.x,\r\n      qay = a.y,\r\n      qaz = a.z,\r\n      qaw = a.w;\r\n    let qbx = b.x,\r\n      qby = b.y,\r\n      qbz = b.z,\r\n      qbw = b.w;\r\n\r\n    this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n    this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n    this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n    this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n    return this;\r\n  }\r\n\r\n  setFromRotationMatrix (m) {\r\n    let te = m.elements,\r\n\r\n      m11 = te[0],\r\n      m12 = te[4],\r\n      m13 = te[8],\r\n      m21 = te[1],\r\n      m22 = te[5],\r\n      m23 = te[9],\r\n      m31 = te[2],\r\n      m32 = te[6],\r\n      m33 = te[10],\r\n\r\n      trace = m11 + m22 + m33,\r\n      s;\r\n\r\n    if (trace > 0) {\r\n\r\n      s = 0.5 / Math.sqrt(trace + 1.0);\r\n\r\n      this.w = 0.25 / s;\r\n      this.x = (m32 - m23) * s;\r\n      this.y = (m13 - m31) * s;\r\n      this.z = (m21 - m12) * s;\r\n\r\n    } else if (m11 > m22 && m11 > m33) {\r\n\r\n      s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n\r\n      this.w = (m32 - m23) / s;\r\n      this.x = 0.25 * s;\r\n      this.y = (m12 + m21) / s;\r\n      this.z = (m13 + m31) / s;\r\n\r\n    } else if (m22 > m33) {\r\n\r\n      s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n\r\n      this.w = (m13 - m31) / s;\r\n      this.x = (m12 + m21) / s;\r\n      this.y = 0.25 * s;\r\n      this.z = (m23 + m32) / s;\r\n\r\n    } else {\r\n\r\n      s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n\r\n      this.w = (m21 - m12) / s;\r\n      this.x = (m13 + m31) / s;\r\n      this.y = (m23 + m32) / s;\r\n      this.z = 0.25 * s;\r\n\r\n    }\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nexport default Quaternion;\r\n","import { sign } from './math.js';\r\n\r\n// Based on  http://stackoverflow.com/questions/849211/shortest-distance-between-a-point-and-a-line-segment\r\nfunction sqr (x) {\r\n  return x * x;\r\n}\r\n\r\nfunction dist2 (v, w) {\r\n  return sqr(v.x - w.x) + sqr(v.y - w.y);\r\n}\r\n\r\nfunction distanceToPointSquared (lineSegment, point) {\r\n  const l2 = dist2(lineSegment.start, lineSegment.end);\r\n\r\n  if(l2 === 0) {\r\n    return dist2(point, lineSegment.start);\r\n  }\r\n  const t = ((point.x - lineSegment.start.x) * (lineSegment.end.x - lineSegment.start.x) +\r\n        (point.y - lineSegment.start.y) * (lineSegment.end.y - lineSegment.start.y)) / l2;\r\n\r\n  if(t < 0) {\r\n    return dist2(point, lineSegment.start);\r\n  }\r\n  if(t > 1) {\r\n    return dist2(point, lineSegment.end);\r\n  }\r\n\r\n  const pt = {\r\n    x: lineSegment.start.x + t * (lineSegment.end.x - lineSegment.start.x),\r\n    y: lineSegment.start.y + t * (lineSegment.end.y - lineSegment.start.y)\r\n  };\r\n\r\n\r\n  return dist2(point, pt);\r\n}\r\n\r\nfunction distanceToPoint (lineSegment, point) {\r\n  return Math.sqrt(distanceToPointSquared(lineSegment, point));\r\n}\r\n\r\n// Returns intersection points of two lines\r\nfunction intersectLine (lineSegment1, lineSegment2) {\r\n  const intersectionPoint = {};\r\n\r\n  let x1 = lineSegment1.start.x,\r\n    y1 = lineSegment1.start.y,\r\n    x2 = lineSegment1.end.x,\r\n    y2 = lineSegment1.end.y,\r\n    x3 = lineSegment2.start.x,\r\n    y3 = lineSegment2.start.y,\r\n    x4 = lineSegment2.end.x,\r\n    y4 = lineSegment2.end.y;\r\n\r\n  // Coefficients of line equations\r\n  let a1, a2, b1, b2, c1, c2;\r\n  // Sign values\r\n  let r1, r2, r3, r4;\r\n\r\n  // Intermediate values\r\n  let denom, num;\r\n\r\n  // Compute a1, b1, c1, where line joining points 1 and 2 is \"a1 x  +  b1 y  +  c1  =  0\"\r\n  a1 = y2 - y1;\r\n  b1 = x1 - x2;\r\n  c1 = x2 * y1 - x1 * y2;\r\n\r\n  // Compute r3 and r4\r\n  r3 = a1 * x3 + b1 * y3 + c1;\r\n  r4 = a1 * x4 + b1 * y4 + c1;\r\n\r\n  /* Check signs of r3 and r4.  If both point 3 and point 4 lie on\r\n    * same side of line 1, the line segments do not intersect.\r\n    */\r\n\r\n  if (r3 !== 0 &&\r\n        r4 !== 0 &&\r\n        sign(r3) === sign(r4)) {\r\n    return;\r\n  }\r\n\r\n  // Compute a2, b2, c2\r\n  a2 = y4 - y3;\r\n  b2 = x3 - x4;\r\n  c2 = x4 * y3 - x3 * y4;\r\n\r\n  // Compute r1 and r2\r\n  r1 = a2 * x1 + b2 * y1 + c2;\r\n  r2 = a2 * x2 + b2 * y2 + c2;\r\n\r\n  /* Check signs of r1 and r2.  If both point 1 and point 2 lie\r\n    * on same side of second line segment, the line segments do\r\n    * not intersect.\r\n    */\r\n\r\n  if (r1 !== 0 &&\r\n        r2 !== 0 &&\r\n        sign(r1) === sign(r2)) {\r\n    return;\r\n  }\r\n\r\n  /* Line segments intersect: compute intersection point.\r\n    */\r\n\r\n  denom = (a1 * b2) - (a2 * b1);\r\n\r\n  /* The denom/2 is to get rounding instead of truncating.  It\r\n    * is added or subtracted to the numerator, depending upon the\r\n    * sign of the numerator.\r\n    */\r\n\r\n  num = (b1 * c2) - (b2 * c1);\r\n  const x = parseFloat(num / denom);\r\n\r\n  num = (a2 * c1) - (a1 * c2);\r\n  const y = parseFloat(num / denom);\r\n\r\n  intersectionPoint.x = x;\r\n  intersectionPoint.y = y;\r\n\r\n  return intersectionPoint;\r\n}\r\n\r\n// Module exports\r\nconst lineSegment = {\r\n  distanceToPoint,\r\n  intersectLine\r\n};\r\n\r\nexport default lineSegment;\r\n","import { default as Line3 } from './Line3.js';\r\nimport { default as lineSegment } from './lineSegment.js';\r\nimport { clamp,\r\n  degToRad,\r\n  radToDeg,\r\n  sign } from './math.js';\r\n\r\nimport { default as Matrix4 } from './matrix4.js';\r\nimport { default as Plane } from './plane.js';\r\nimport { default as point } from './point.js';\r\nimport { default as quaternion } from './quaternion.js';\r\nimport { default as rect } from './rect.js';\r\nimport { default as Vector3 } from './vector3.js';\r\n\r\nconst cornerstoneMath = {\r\n  Line3,\r\n  lineSegment,\r\n  clamp,\r\n  degToRad,\r\n  radToDeg,\r\n  sign,\r\n  Matrix4,\r\n  Plane,\r\n  point,\r\n  quaternion,\r\n  rect,\r\n  Vector3\r\n};\r\n\r\nexport {\r\n  Line3,\r\n  lineSegment,\r\n  clamp,\r\n  degToRad,\r\n  radToDeg,\r\n  sign,\r\n  Matrix4,\r\n  Plane,\r\n  point,\r\n  quaternion,\r\n  rect,\r\n  Vector3\r\n};\r\n\r\nexport default cornerstoneMath;\r\n","import Vector3 from './vector3.js';\r\nimport { clamp, approximatelyEquals } from './math.js';\r\n\r\n// Copied from THREE.JS\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n\r\nclass Line3 {\r\n  constructor (start, end) {\r\n\r\n    this.start = (start !== undefined) ? start : new Vector3();\r\n    this.end = (end !== undefined) ? end : new Vector3();\r\n\r\n  }\r\n\r\n  set (start, end) {\r\n\r\n    this.start.copy(start);\r\n    this.end.copy(end);\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  copy (line) {\r\n\r\n    this.start.copy(line.start);\r\n    this.end.copy(line.end);\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  center (optionalTarget) {\r\n\r\n    const result = optionalTarget || new Vector3();\r\n\r\n\r\n    return result.addVectors(this.start, this.end).multiplyScalar(0.5);\r\n\r\n  }\r\n\r\n  delta (optionalTarget) {\r\n\r\n    const result = optionalTarget || new Vector3();\r\n\r\n\r\n    return result.subVectors(this.end, this.start);\r\n\r\n  }\r\n\r\n  distanceSq () {\r\n\r\n    return this.start.distanceToSquared(this.end);\r\n\r\n  }\r\n\r\n  distance () {\r\n\r\n    return this.start.distanceTo(this.end);\r\n\r\n  }\r\n\r\n  at (t, optionalTarget) {\r\n\r\n    const result = optionalTarget || new Vector3();\r\n\r\n    return this.delta(result).multiplyScalar(t).add(this.start);\r\n\r\n  }\r\n\r\n  closestPointToPointParameter (point, clampToLine) {\r\n\r\n    const startP = new Vector3();\r\n    const startEnd = new Vector3();\r\n\r\n    startP.subVectors(point, this.start);\r\n    startEnd.subVectors(this.end, this.start);\r\n\r\n    const startEnd2 = startEnd.dot(startEnd);\r\n    const startEnd_startP = startEnd.dot(startP);\r\n\r\n    let t = startEnd_startP / startEnd2;\r\n\r\n    if (clampToLine) {\r\n      t = clamp(t, 0, 1);\r\n    }\r\n\r\n    return t;\r\n\r\n  }\r\n\r\n  closestPointToPoint (point, clampToLine, optionalTarget) {\r\n\r\n    const t = this.closestPointToPointParameter(point, clampToLine);\r\n\r\n    const result = optionalTarget || new Vector3();\r\n\r\n    return this.delta(result).multiplyScalar(t).add(this.start);\r\n\r\n  }\r\n\r\n  applyMatrix4 (matrix) {\r\n\r\n    this.start.applyMatrix4(matrix);\r\n    this.end.applyMatrix4(matrix);\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  equals (line) {\r\n\r\n    return line.start.equals(this.start) && line.end.equals(this.end);\r\n\r\n  }\r\n\r\n  clone () {\r\n\r\n    return new Line3().copy(this);\r\n\r\n  }\r\n\r\n  intersectLine (line) {\r\n    // http://stackoverflow.com/questions/2316490/the-algorithm-to-find-the-point-of-intersection-of-two-3d-line-segment/10288710#10288710\r\n    // Consider two lines r1 and r2, represented by the following parametric equations:A + vt and B + us, respectively.\r\n    // Where A is a point of r1 and v a vector parallel to line.\r\n    // And B is a point of r2 and u a vector parallel to line.\r\n    // 'this' represents r2 and 'line' represents r1\r\n    const da = this.end.clone().sub(this.start); //u\r\n    const db = line.end.clone().sub(line.start); //v\r\n    const dc = line.start.clone().sub(this.start); // AB\r\n\r\n    const daCrossDb = da.clone().cross(db);\r\n    const dcCrossDb = dc.clone().cross(db);\r\n\r\n    // Lines are not coplanar, stop here\r\n    // Coplanar only if the vectors AB, u, v are linearly dependent, i.e AB . (u × v) = 0\r\n    const coplanarResult = dc.dot(daCrossDb);\r\n    const normalizedCoplanarResult =\r\n      coplanarResult / (dc.lengthSq() * daCrossDb.lengthSq());\r\n    if (!approximatelyEquals(normalizedCoplanarResult, 0)) {\r\n      return;\r\n    }\r\n\r\n    const s = dcCrossDb.dot(daCrossDb) / daCrossDb.lengthSq();\r\n\r\n    // Make sure we have an intersection\r\n    if (s > 1.0 || isNaN(s)) {\r\n      return;\r\n    }\r\n\r\n    const intersection = this.start.clone().add(da.clone().multiplyScalar(s));\r\n    const distanceTest = intersection.clone().sub(line.start).lengthSq() + intersection.clone().sub(line.end).lengthSq();\r\n\r\n    if (distanceTest <= line.distanceSq()) {\r\n      return intersection;\r\n    }\r\n\r\n    return;\r\n  }\r\n}\r\n\r\nexport default Line3;\r\n","import Vector3 from './vector3.js';\r\n\r\n// Based on THREE.JS\r\nclass Matrix4 {\r\n\r\n  constructor (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\r\n    this.elements = new Float32Array(16);\r\n\r\n    // TODO: if n11 is undefined, then just set to identity, otherwise copy all other values into matrix\r\n    // We should not support semi specification of Matrix4, it is just weird.\r\n\r\n    const te = this.elements;\r\n\r\n    te[0] = (n11 !== undefined) ? n11 : 1; te[4] = n12 || 0; te[8] = n13 || 0; te[12] = n14 || 0;\r\n    te[1] = n21 || 0; te[5] = (n22 !== undefined) ? n22 : 1; te[9] = n23 || 0; te[13] = n24 || 0;\r\n    te[2] = n31 || 0; te[6] = n32 || 0; te[10] = (n33 !== undefined) ? n33 : 1; te[14] = n34 || 0;\r\n    te[3] = n41 || 0; te[7] = n42 || 0; te[11] = n43 || 0; te[15] = (n44 !== undefined) ? n44 : 1;\r\n\r\n  }\r\n\r\n  makeRotationFromQuaternion (q) {\r\n    const te = this.elements;\r\n\r\n    let x = q.x,\r\n      y = q.y,\r\n      z = q.z,\r\n      w = q.w;\r\n    let x2 = x + x,\r\n      y2 = y + y,\r\n      z2 = z + z;\r\n    let xx = x * x2,\r\n      xy = x * y2,\r\n      xz = x * z2;\r\n    let yy = y * y2,\r\n      yz = y * z2,\r\n      zz = z * z2;\r\n    let wx = w * x2,\r\n      wy = w * y2,\r\n      wz = w * z2;\r\n\r\n    te[0] = 1 - (yy + zz);\r\n    te[4] = xy - wz;\r\n    te[8] = xz + wy;\r\n\r\n    te[1] = xy + wz;\r\n    te[5] = 1 - (xx + zz);\r\n    te[9] = yz - wx;\r\n\r\n    te[2] = xz - wy;\r\n    te[6] = yz + wx;\r\n    te[10] = 1 - (xx + yy);\r\n\r\n    // Last column\r\n    te[3] = 0;\r\n    te[7] = 0;\r\n    te[11] = 0;\r\n\r\n    // Bottom row\r\n    te[12] = 0;\r\n    te[13] = 0;\r\n    te[14] = 0;\r\n    te[15] = 1;\r\n\r\n    return this;\r\n  }\r\n\r\n  multiplyMatrices (a, b) {\r\n    const ae = a.elements;\r\n    const be = b.elements;\r\n    const te = this.elements;\r\n\r\n    let a11 = ae[0],\r\n      a12 = ae[4],\r\n      a13 = ae[8],\r\n      a14 = ae[12];\r\n    let a21 = ae[1],\r\n      a22 = ae[5],\r\n      a23 = ae[9],\r\n      a24 = ae[13];\r\n    let a31 = ae[2],\r\n      a32 = ae[6],\r\n      a33 = ae[10],\r\n      a34 = ae[14];\r\n    let a41 = ae[3],\r\n      a42 = ae[7],\r\n      a43 = ae[11],\r\n      a44 = ae[15];\r\n\r\n    let b11 = be[0],\r\n      b12 = be[4],\r\n      b13 = be[8],\r\n      b14 = be[12];\r\n    let b21 = be[1],\r\n      b22 = be[5],\r\n      b23 = be[9],\r\n      b24 = be[13];\r\n    let b31 = be[2],\r\n      b32 = be[6],\r\n      b33 = be[10],\r\n      b34 = be[14];\r\n    let b41 = be[3],\r\n      b42 = be[7],\r\n      b43 = be[11],\r\n      b44 = be[15];\r\n\r\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n    return this;\r\n  }\r\n\r\n  multiply (m, n) {\r\n\r\n    if (n !== undefined) {\r\n\r\n      console.warn('DEPRECATED: Matrix4\\'s .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\r\n\r\n      return this.multiplyMatrices(m, n);\r\n    }\r\n\r\n    return this.multiplyMatrices(this, m);\r\n  }\r\n\r\n  getInverse (m, throwOnInvertible) {\r\n\r\n    // Based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n    const te = this.elements;\r\n    const me = m.elements;\r\n\r\n    let n11 = me[0],\r\n      n12 = me[4],\r\n      n13 = me[8],\r\n      n14 = me[12];\r\n    let n21 = me[1],\r\n      n22 = me[5],\r\n      n23 = me[9],\r\n      n24 = me[13];\r\n    let n31 = me[2],\r\n      n32 = me[6],\r\n      n33 = me[10],\r\n      n34 = me[14];\r\n    let n41 = me[3],\r\n      n42 = me[7],\r\n      n43 = me[11],\r\n      n44 = me[15];\r\n\r\n    te[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n    te[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n    te[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n    te[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n    te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n    te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n    te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n    te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n    te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n    te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n    te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n    te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n    te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n    te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n    te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n    te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n    const det = n11 * te[0] + n21 * te[4] + n31 * te[8] + n41 * te[12];\r\n\r\n    if (det === 0) {\r\n\r\n      const msg = 'Matrix4.getInverse(): can\\'t invert matrix, determinant is 0';\r\n\r\n      if (throwOnInvertible || false) {\r\n\r\n        throw new Error(msg);\r\n\r\n      } else {\r\n\r\n        console.warn(msg);\r\n\r\n      }\r\n\r\n      this.identity();\r\n\r\n      return this;\r\n    }\r\n\r\n    this.multiplyScalar(1 / det);\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  applyToVector3Array () {\r\n\r\n    const v1 = new Vector3();\r\n\r\n    return function (array, offset, length) {\r\n\r\n      if (offset === undefined) {\r\n        offset = 0;\r\n      }\r\n      if (length === undefined) {\r\n        length = array.length;\r\n      }\r\n\r\n      for (var i = 0, j = offset; i < length; i += 3, j += 3) {\r\n\r\n        v1.x = array[j];\r\n        v1.y = array[j + 1];\r\n        v1.z = array[j + 2];\r\n\r\n        v1.applyMatrix4(this);\r\n\r\n        array[j] = v1.x;\r\n        array[j + 1] = v1.y;\r\n        array[j + 2] = v1.z;\r\n\r\n      }\r\n\r\n      return array;\r\n\r\n    };\r\n\r\n  }\r\n\r\n  makeTranslation (x, y, z) {\r\n\r\n    this.set(\r\n      1, 0, 0, x,\r\n      0, 1, 0, y,\r\n      0, 0, 1, z,\r\n      0, 0, 0, 1\r\n    );\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  multiplyScalar (s) {\r\n\r\n    const te = this.elements;\r\n\r\n    te[0] *= s; te[4] *= s; te[8] *= s; te[12] *= s;\r\n    te[1] *= s; te[5] *= s; te[9] *= s; te[13] *= s;\r\n    te[2] *= s; te[6] *= s; te[10] *= s; te[14] *= s;\r\n    te[3] *= s; te[7] *= s; te[11] *= s; te[15] *= s;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  set (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\r\n\r\n    const te = this.elements;\r\n\r\n    te[0] = n11; te[4] = n12; te[8] = n13; te[12] = n14;\r\n    te[1] = n21; te[5] = n22; te[9] = n23; te[13] = n24;\r\n    te[2] = n31; te[6] = n32; te[10] = n33; te[14] = n34;\r\n    te[3] = n41; te[7] = n42; te[11] = n43; te[15] = n44;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  makeScale (x, y, z) {\r\n\r\n    this.set(\r\n      x, 0, 0, 0,\r\n      0, y, 0, 0,\r\n      0, 0, z, 0,\r\n      0, 0, 0, 1\r\n    );\r\n\r\n    return this;\r\n\r\n  }\r\n}\r\n\r\nexport default Matrix4;\r\n","import Vector3 from './vector3.js';\r\n\r\n// Copied from Three.JS\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nclass Plane {\r\n  constructor (normal, constant) {\r\n\r\n    this.normal = (normal !== undefined) ? normal : new Vector3(1, 0, 0);\r\n    this.constant = (constant !== undefined) ? constant : 0;\r\n\r\n  }\r\n\r\n  set (normal, constant) {\r\n\r\n    this.normal.copy(normal);\r\n    this.constant = constant;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  setComponents (x, y, z, w) {\r\n\r\n    this.normal.set(x, y, z);\r\n    this.constant = w;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  setFromNormalAndCoplanarPoint (normal, point) {\r\n\r\n    this.normal.copy(normal);\r\n    // Must be this.normal, not normal, as this.normal is normalized\r\n    this.constant = -point.dot(this.normal);\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  copy (plane) {\r\n\r\n    this.normal.copy(plane.normal);\r\n    this.constant = plane.constant;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  normalize () {\r\n\r\n    // Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n    const inverseNormalLength = 1.0 / this.normal.length();\r\n\r\n    this.normal.multiplyScalar(inverseNormalLength);\r\n    this.constant *= inverseNormalLength;\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  negate () {\r\n\r\n    this.constant *= -1;\r\n    this.normal.negate();\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  distanceToPoint (point) {\r\n\r\n    return this.normal.dot(point) + this.constant;\r\n\r\n  }\r\n\r\n  distanceToSphere (sphere) {\r\n\r\n    return this.distanceToPoint(sphere.center) - sphere.radius;\r\n\r\n  }\r\n\r\n  projectPoint (point, optionalTarget) {\r\n\r\n    return this.orthoPoint(point, optionalTarget).sub(point).negate();\r\n\r\n  }\r\n\r\n  orthoPoint (point, optionalTarget) {\r\n\r\n    const perpendicularMagnitude = this.distanceToPoint(point);\r\n\r\n    const result = optionalTarget || new Vector3();\r\n\r\n\r\n    return result.copy(this.normal).multiplyScalar(perpendicularMagnitude);\r\n\r\n  }\r\n\r\n  isIntersectionLine (line) {\r\n\r\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n    const startSign = this.distanceToPoint(line.start);\r\n    const endSign = this.distanceToPoint(line.end);\r\n\r\n    return (startSign < 0 && endSign > 0) || (endSign < 0 && startSign > 0);\r\n\r\n  }\r\n\r\n  intersectPlane (targetPlane) {\r\n    // Returns the intersection line between two planes\r\n    const direction = this.normal.clone().cross(targetPlane.normal);\r\n    const origin = new Vector3();\r\n    const intersectionData = {\r\n      origin,\r\n      direction\r\n    };\r\n\r\n    // If the planes are parallel, return an empty vector for the intersection line\r\n    if (this.normal.clone().cross(targetPlane.normal).length < 1e-10) {\r\n      intersectionData.direction = new Vector3();\r\n\r\n      return intersectionData;\r\n    }\r\n\r\n    const h1 = this.constant;\r\n    const h2 = targetPlane.constant;\r\n    const n1dotn2 = this.normal.clone().dot(targetPlane.normal);\r\n\r\n    const c1 = -(h1 - h2 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\r\n    const c2 = -(h2 - h1 * n1dotn2) / (1 - n1dotn2 * n1dotn2);\r\n\r\n    intersectionData.origin = this.normal.clone().multiplyScalar(c1).add(targetPlane.normal.clone().multiplyScalar(c2));\r\n\r\n    return intersectionData;\r\n  }\r\n\r\n  coplanarPoint (optionalTarget) {\r\n\r\n    const result = optionalTarget || new Vector3();\r\n\r\n\r\n    return result.copy(this.normal).multiplyScalar(-this.constant);\r\n\r\n  }\r\n\r\n  translate (offset) {\r\n\r\n    this.constant = this.constant - offset.dot(this.normal);\r\n\r\n    return this;\r\n\r\n  }\r\n\r\n  equals (plane) {\r\n\r\n    return plane.normal.equals(this.normal) && (plane.constant === this.constant);\r\n\r\n  }\r\n\r\n  clone () {\r\n\r\n    return new Plane().copy(this);\r\n\r\n  }\r\n}\r\n\r\nPlane.prototype.setFromCoplanarPoints = (function () {\r\n\r\n  const v1 = new Vector3();\r\n  const v2 = new Vector3();\r\n\r\n  return function (a, b, c) {\r\n\r\n    const normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize();\r\n\r\n    // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n    this.setFromNormalAndCoplanarPoint(normal, a);\r\n\r\n    return this;\r\n\r\n  };\r\n\r\n})();\r\n\r\nPlane.prototype.intersectLine = (function () {\r\n\r\n  const v1 = new Vector3();\r\n\r\n  return function (line, optionalTarget) {\r\n\r\n    const result = optionalTarget || new Vector3();\r\n\r\n    const direction = line.delta(v1);\r\n\r\n    const denominator = this.normal.dot(direction);\r\n\r\n    if (denominator === 0) {\r\n\r\n      // Line is coplanar, return origin\r\n      if (this.distanceToPoint(line.start) === 0) {\r\n\r\n        return result.copy(line.start);\r\n\r\n      }\r\n\r\n      // Unsure if this is the correct method to handle this case.\r\n      return undefined;\r\n\r\n    }\r\n\r\n    const t = -(line.start.dot(this.normal) + this.constant) / denominator;\r\n\r\n    if (t < 0 || t > 1) {\r\n\r\n      return undefined;\r\n\r\n    }\r\n\r\n    return result.copy(direction).multiplyScalar(t).add(line.start);\r\n\r\n  };\r\n\r\n})();\r\n\r\nexport default Plane;\r\n","function pageToPoint (e) {\r\n  return {\r\n    x: e.pageX,\r\n    y: e.pageY\r\n  };\r\n}\r\n\r\nfunction subtract (lhs, rhs) {\r\n  return {\r\n    x: lhs.x - rhs.x,\r\n    y: lhs.y - rhs.y\r\n  };\r\n}\r\n\r\nfunction copy (point) {\r\n  return {\r\n    x: point.x,\r\n    y: point.y\r\n  };\r\n}\r\n\r\nfunction distance (from, to) {\r\n  return Math.sqrt(distanceSquared(from, to));\r\n}\r\n\r\nfunction distanceSquared (from, to) {\r\n  const delta = subtract(from, to);\r\n\r\n\r\n  return delta.x * delta.x + delta.y * delta.y;\r\n}\r\n\r\nfunction insideRect (point, rect) {\r\n  if(point.x < rect.left ||\r\n        point.x > rect.left + rect.width ||\r\n        point.y < rect.top ||\r\n        point.y > rect.top + rect.height) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Returns the closest source point to a target point\r\n * given an array of source points.\r\n *\r\n * @param sources An Array of source Points\r\n * @param target The target Point\r\n * @returns Point The closest point from the points array\r\n */\r\nfunction findClosestPoint (sources, target) {\r\n  const distances = [];\r\n  let minDistance;\r\n\r\n  sources.forEach(function (source, index) {\r\n    const d = distance(source, target);\r\n\r\n    distances.push(d);\r\n\r\n    if (index === 0) {\r\n      minDistance = d;\r\n    } else {\r\n      minDistance = Math.min(d, minDistance);\r\n    }\r\n  });\r\n\r\n  const index = distances.indexOf(minDistance);\r\n\r\n\r\n  return sources[index];\r\n}\r\n\r\nconst point = {\r\n  subtract,\r\n  copy,\r\n  pageToPoint,\r\n  distance,\r\n  distanceSquared,\r\n  insideRect,\r\n  findClosestPoint\r\n};\r\n\r\nexport default point;\r\n","import lineSegment from './lineSegment.js';\r\n\r\nfunction rectToLineSegments (rect) {\r\n  const top = {\r\n    start: {\r\n      x: rect.left,\r\n      y: rect.top\r\n    },\r\n    end: {\r\n      x: rect.left + rect.width,\r\n      y: rect.top\r\n\r\n    }\r\n  };\r\n  const right = {\r\n    start: {\r\n      x: rect.left + rect.width,\r\n      y: rect.top\r\n    },\r\n    end: {\r\n      x: rect.left + rect.width,\r\n      y: rect.top + rect.height\r\n\r\n    }\r\n  };\r\n  const bottom = {\r\n    start: {\r\n      x: rect.left + rect.width,\r\n      y: rect.top + rect.height\r\n    },\r\n    end: {\r\n      x: rect.left,\r\n      y: rect.top + rect.height\r\n\r\n    }\r\n  };\r\n  const left = {\r\n    start: {\r\n      x: rect.left,\r\n      y: rect.top + rect.height\r\n    },\r\n    end: {\r\n      x: rect.left,\r\n      y: rect.top\r\n\r\n    }\r\n  };\r\n  const lineSegments = [top, right, bottom, left];\r\n\r\n\r\n  return lineSegments;\r\n}\r\n\r\nfunction distanceToPoint (rect, point) {\r\n  let minDistance = 655535;\r\n  const lineSegments = rectToLineSegments(rect);\r\n\r\n  lineSegments.forEach(function (segment) {\r\n    const distance = lineSegment.distanceToPoint(segment, point);\r\n\r\n    if(distance < minDistance) {\r\n      minDistance = distance;\r\n    }\r\n  });\r\n\r\n  return minDistance;\r\n}\r\n\r\n// Returns top-left and bottom-right points of the rectangle\r\nfunction rectToPoints (rect) {\r\n  const rectPoints = {\r\n    topLeft: {\r\n      x: rect.left,\r\n      y: rect.top\r\n    },\r\n    bottomRight: {\r\n      x: rect.left + rect.width,\r\n      y: rect.top + rect.height\r\n    }\r\n  };\r\n\r\n  return rectPoints;\r\n}\r\n\r\n// Returns whether two non-rotated rectangles are intersected\r\nfunction doesIntersect (rect1, rect2) {\r\n  let intersectLeftRight;\r\n  let intersectTopBottom;\r\n\r\n  const rect1Points = rectToPoints(rect1);\r\n  const rect2Points = rectToPoints(rect2);\r\n\r\n  if (rect1.width >= 0) {\r\n    if (rect2.width >= 0) {\r\n      intersectLeftRight = !((rect1Points.bottomRight.x <= rect2Points.topLeft.x) || (rect2Points.bottomRight.x <= rect1Points.topLeft.x));\r\n    } else {\r\n      intersectLeftRight = !((rect1Points.bottomRight.x <= rect2Points.bottomRight.x) || (rect2Points.topLeft.x <= rect1Points.topLeft.x));\r\n    }\r\n  } else if (rect2.width >= 0) {\r\n    intersectLeftRight = !((rect1Points.topLeft.x <= rect2Points.topLeft.x) || (rect2Points.bottomRight.x <= rect1Points.bottomRight.x));\r\n  } else {\r\n    intersectLeftRight = !((rect1Points.topLeft.x <= rect2Points.bottomRight.x) || (rect2Points.topLeft.x <= rect1Points.bottomRight.x));\r\n  }\r\n\r\n  if (rect1.height >= 0) {\r\n    if (rect2.height >= 0) {\r\n      intersectTopBottom = !((rect1Points.bottomRight.y <= rect2Points.topLeft.y) || (rect2Points.bottomRight.y <= rect1Points.topLeft.y));\r\n    } else {\r\n      intersectTopBottom = !((rect1Points.bottomRight.y <= rect2Points.bottomRight.y) || (rect2Points.topLeft.y <= rect1Points.topLeft.y));\r\n    }\r\n  } else if (rect2.height >= 0) {\r\n    intersectTopBottom = !((rect1Points.topLeft.y <= rect2Points.topLeft.y) || (rect2Points.bottomRight.y <= rect1Points.bottomRight.y));\r\n  } else {\r\n    intersectTopBottom = !((rect1Points.topLeft.y <= rect2Points.bottomRight.y) || (rect2Points.top <= rect1Points.bottomRight.y));\r\n  }\r\n\r\n  return intersectLeftRight && intersectTopBottom;\r\n}\r\n\r\n// Returns intersection points of two non-rotated rectangles\r\nfunction getIntersectionRect (rect1, rect2) {\r\n  const intersectRect = {\r\n    topLeft: {},\r\n    bottomRight: {}\r\n  };\r\n\r\n  if (!doesIntersect(rect1, rect2)) {\r\n    return;\r\n  }\r\n\r\n  const rect1Points = rectToPoints(rect1);\r\n  const rect2Points = rectToPoints(rect2);\r\n\r\n  if (rect1.width >= 0) {\r\n    if (rect2.width >= 0) {\r\n      intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.topLeft.x);\r\n      intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\r\n    } else {\r\n      intersectRect.topLeft.x = Math.max(rect1Points.topLeft.x, rect2Points.bottomRight.x);\r\n      intersectRect.bottomRight.x = Math.min(rect1Points.bottomRight.x, rect2Points.topLeft.x);\r\n    }\r\n  } else if (rect2.width >= 0) {\r\n    intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.bottomRight.x);\r\n    intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.topLeft.x);\r\n  } else {\r\n    intersectRect.topLeft.x = Math.min(rect1Points.topLeft.x, rect2Points.topLeft.x);\r\n    intersectRect.bottomRight.x = Math.max(rect1Points.bottomRight.x, rect2Points.bottomRight.x);\r\n  }\r\n\r\n  if (rect1.height >= 0) {\r\n    if (rect2.height >= 0) {\r\n      intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.topLeft.y);\r\n      intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\r\n    } else {\r\n      intersectRect.topLeft.y = Math.max(rect1Points.topLeft.y, rect2Points.bottomRight.y);\r\n      intersectRect.bottomRight.y = Math.min(rect1Points.bottomRight.y, rect2Points.topLeft.y);\r\n    }\r\n  } else if (rect2.height >= 0) {\r\n    intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.bottomRight.y);\r\n    intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.topLeft.y);\r\n  } else {\r\n    intersectRect.topLeft.y = Math.min(rect1Points.topLeft.y, rect2Points.topLeft.y);\r\n    intersectRect.bottomRight.y = Math.max(rect1Points.bottomRight.y, rect2Points.bottomRight.y);\r\n  }\r\n\r\n  // Returns top-left and bottom-right points of intersected rectangle\r\n  return intersectRect;\r\n\r\n}\r\n\r\nconst rect = {\r\n  distanceToPoint,\r\n  getIntersectionRect\r\n};\r\n\r\nexport default rect;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}