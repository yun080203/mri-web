{"ast":null,"code":"import axios from 'axios';\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\nexport const axiosInstance = axios.create({\n  baseURL: API_BASE,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json, multipart/form-data',\n    'Access-Control-Allow-Origin': window.location.origin,\n    'Access-Control-Allow-Credentials': 'true'\n  },\n  withCredentials: true,\n  validateStatus: function (status) {\n    return status >= 200 && status < 500;\n  }\n});\n\n// 添加请求拦截器\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  // 如果是文件上传请求，修改 Content-Type\n  if (config.data instanceof FormData) {\n    config.headers['Content-Type'] = 'multipart/form-data';\n  }\n\n  // 添加CORS相关头部\n  config.headers['Origin'] = window.location.origin;\n  console.log('发送请求:', {\n    url: config.url,\n    method: config.method,\n    headers: config.headers,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\naxiosInstance.interceptors.response.use(response => {\n  console.log('收到响应:', {\n    url: response.config.url,\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$response3;\n  // 处理CORS错误\n  if (error.code === 'ERR_NETWORK' || error.message === 'Network Error') {\n    var _error$config, _error$config2;\n    console.error('CORS或网络错误:', {\n      message: error.message,\n      origin: window.location.origin,\n      url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n      headers: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.headers\n    });\n    message.error('网络请求失败，可能是CORS配置问题');\n  } else {\n    var _error$response, _error$response2, _error$config3, _error$config4, _error$config5;\n    console.error('响应错误:', {\n      message: error.message,\n      status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n      data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n      config: {\n        url: (_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : _error$config3.url,\n        method: (_error$config4 = error.config) === null || _error$config4 === void 0 ? void 0 : _error$config4.method,\n        headers: (_error$config5 = error.config) === null || _error$config5 === void 0 ? void 0 : _error$config5.headers\n      }\n    });\n  }\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    console.error('认证错误:', error.response.data);\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","API_BASE","process","env","REACT_APP_API_BASE","axiosInstance","create","baseURL","timeout","headers","window","location","origin","withCredentials","validateStatus","status","interceptors","request","use","config","token","localStorage","getItem","data","FormData","console","log","url","method","error","Promise","reject","response","_error$response3","code","message","_error$config","_error$config2","_error$response","_error$response2","_error$config3","_error$config4","_error$config5","removeItem","href"],"sources":["D:/GitHub/mri-web-app/frontend/src/utils/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: API_BASE,\r\n    timeout: 30000,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json, multipart/form-data',\r\n        'Access-Control-Allow-Origin': window.location.origin,\r\n        'Access-Control-Allow-Credentials': 'true'\r\n    },\r\n    withCredentials: true,\r\n    validateStatus: function (status) {\r\n        return status >= 200 && status < 500;\r\n    }\r\n});\r\n\r\n// 添加请求拦截器\r\naxiosInstance.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        \r\n        // 如果是文件上传请求，修改 Content-Type\r\n        if (config.data instanceof FormData) {\r\n            config.headers['Content-Type'] = 'multipart/form-data';\r\n        }\r\n        \r\n        // 添加CORS相关头部\r\n        config.headers['Origin'] = window.location.origin;\r\n        \r\n        console.log('发送请求:', {\r\n            url: config.url,\r\n            method: config.method,\r\n            headers: config.headers,\r\n            data: config.data\r\n        });\r\n        return config;\r\n    },\r\n    (error) => {\r\n        console.error('请求错误:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// 添加响应拦截器\r\naxiosInstance.interceptors.response.use(\r\n    (response) => {\r\n        console.log('收到响应:', {\r\n            url: response.config.url,\r\n            status: response.status,\r\n            data: response.data\r\n        });\r\n        return response;\r\n    },\r\n    (error) => {\r\n        // 处理CORS错误\r\n        if (error.code === 'ERR_NETWORK' || error.message === 'Network Error') {\r\n            console.error('CORS或网络错误:', {\r\n                message: error.message,\r\n                origin: window.location.origin,\r\n                url: error.config?.url,\r\n                headers: error.config?.headers\r\n            });\r\n            message.error('网络请求失败，可能是CORS配置问题');\r\n        } else {\r\n            console.error('响应错误:', {\r\n                message: error.message,\r\n                status: error.response?.status,\r\n                data: error.response?.data,\r\n                config: {\r\n                    url: error.config?.url,\r\n                    method: error.config?.method,\r\n                    headers: error.config?.headers\r\n                }\r\n            });\r\n        }\r\n\r\n        if (error.response?.status === 401) {\r\n            console.error('认证错误:', error.response.data);\r\n            localStorage.removeItem('token');\r\n            window.location.href = '/login';\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    }\r\n); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}