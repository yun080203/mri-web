{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n// Seems this is used for iconFont\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useComposeRef } from \"@rc-component/util/es/ref\";\nimport Context from \"./Context\";\nimport { svgBaseProps, warning, useInsertStyles } from \"../utils\";\nconst Icon = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // affect outter <i>...</i>\n    className,\n    // affect inner <svg>...</svg>\n    component: Component,\n    viewBox,\n    spin,\n    rotate,\n    tabIndex,\n    onClick,\n    // children\n    children,\n    ...restProps\n  } = props;\n  const iconRef = React.useRef();\n  const mergedRef = useComposeRef(iconRef, ref);\n  warning(Boolean(Component || children), 'Should have `component` prop or `children`.');\n  useInsertStyles(iconRef);\n  const {\n    prefixCls = 'anticon',\n    rootClassName\n  } = React.useContext(Context);\n  const classString = classNames(rootClassName, prefixCls, {\n    [`${prefixCls}-spin`]: !!spin && !!Component\n  }, className);\n  const svgClassString = classNames({\n    [`${prefixCls}-spin`]: !!spin\n  });\n  const svgStyle = rotate ? {\n    msTransform: `rotate(${rotate}deg)`,\n    transform: `rotate(${rotate}deg)`\n  } : undefined;\n  const innerSvgProps = {\n    ...svgBaseProps,\n    className: svgClassString,\n    style: svgStyle,\n    viewBox\n  };\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  }\n\n  // component > children\n  const renderInnerNode = () => {\n    if (Component) {\n      return /*#__PURE__*/React.createElement(Component, innerSvgProps, children);\n    }\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && /*#__PURE__*/React.isValidElement(children) && React.Children.only(children).type === 'use', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return /*#__PURE__*/React.createElement(\"svg\", _extends({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n    return null;\n  };\n  let iconTabIndex = tabIndex;\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    role: \"img\"\n  }, restProps, {\n    ref: mergedRef,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), renderInnerNode());\n});\nIcon.displayName = 'AntdIcon';\nexport default Icon;","map":{"version":3,"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","classNames","useComposeRef","Context","svgBaseProps","warning","useInsertStyles","Icon","forwardRef","props","ref","className","component","Component","viewBox","spin","rotate","tabIndex","onClick","children","restProps","iconRef","useRef","mergedRef","Boolean","prefixCls","rootClassName","useContext","classString","svgClassString","svgStyle","msTransform","transform","undefined","innerSvgProps","style","renderInnerNode","createElement","Children","count","isValidElement","only","type","iconTabIndex","role","displayName"],"sources":["D:/GitHub/mri-web-app/frontend/node_modules/@ant-design/icons/es/components/Icon.js"],"sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n// Seems this is used for iconFont\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useComposeRef } from \"@rc-component/util/es/ref\";\nimport Context from \"./Context\";\nimport { svgBaseProps, warning, useInsertStyles } from \"../utils\";\nconst Icon = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // affect outter <i>...</i>\n    className,\n    // affect inner <svg>...</svg>\n    component: Component,\n    viewBox,\n    spin,\n    rotate,\n    tabIndex,\n    onClick,\n    // children\n    children,\n    ...restProps\n  } = props;\n  const iconRef = React.useRef();\n  const mergedRef = useComposeRef(iconRef, ref);\n  warning(Boolean(Component || children), 'Should have `component` prop or `children`.');\n  useInsertStyles(iconRef);\n  const {\n    prefixCls = 'anticon',\n    rootClassName\n  } = React.useContext(Context);\n  const classString = classNames(rootClassName, prefixCls, {\n    [`${prefixCls}-spin`]: !!spin && !!Component\n  }, className);\n  const svgClassString = classNames({\n    [`${prefixCls}-spin`]: !!spin\n  });\n  const svgStyle = rotate ? {\n    msTransform: `rotate(${rotate}deg)`,\n    transform: `rotate(${rotate}deg)`\n  } : undefined;\n  const innerSvgProps = {\n    ...svgBaseProps,\n    className: svgClassString,\n    style: svgStyle,\n    viewBox\n  };\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  }\n\n  // component > children\n  const renderInnerNode = () => {\n    if (Component) {\n      return /*#__PURE__*/React.createElement(Component, innerSvgProps, children);\n    }\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && /*#__PURE__*/React.isValidElement(children) && React.Children.only(children).type === 'use', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return /*#__PURE__*/React.createElement(\"svg\", _extends({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n    return null;\n  };\n  let iconTabIndex = tabIndex;\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    role: \"img\"\n  }, restProps, {\n    ref: mergedRef,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), renderInnerNode());\n});\nIcon.displayName = 'AntdIcon';\nexport default Icon;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}