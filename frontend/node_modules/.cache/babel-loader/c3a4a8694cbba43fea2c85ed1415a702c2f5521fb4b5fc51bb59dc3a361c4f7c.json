{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\mri-web-app\\\\frontend\\\\src\\\\components\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\nfunction ImageUpload({\n  patientId,\n  onUploadSuccess\n}) {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [preview, setPreview] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState('idle');\n  const [processingLogs, setProcessingLogs] = useState([]);\n  const [processedData, setProcessedData] = useState(null);\n  const handleFileSelect = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      setError('');\n      setUploadedImage(null);\n      setProcessingStatus('idle');\n      setProcessingLogs([]);\n      setProcessedData(null);\n\n      // 使用后端的预览生成功能\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        const response = await axios.post(`${API_BASE}/api/preview`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (response.data.status === 'success' && response.data.image) {\n          setPreview(`data:image/png;base64,${response.data.image}`);\n        }\n      } catch (error) {\n        console.error('预览生成失败:', error);\n        setError('无法生成预览图');\n      }\n    }\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      setError('请选择文件');\n      return;\n    }\n    if (!patientId) {\n      setError('请先选择患者');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setProcessingStatus('uploading');\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    formData.append('patient_id', patientId);\n    try {\n      const response = await axios.post(`${API_BASE}/api/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data.image) {\n        setUploadedImage(response.data.image);\n        setProcessingStatus('uploaded');\n        if (onUploadSuccess) {\n          onUploadSuccess(response.data);\n        }\n\n        // 自动开始处理\n        await handleProcess(response.data.image.id);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('上传失败:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || error.message || '上传失败，请重试');\n      setProcessingStatus('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleProcess = async imageId => {\n    if (!imageId) {\n      setError('缺少图像ID');\n      setProcessingStatus('error');\n      return;\n    }\n    setProcessingStatus('processing');\n    setProcessingLogs([]);\n    setProcessedData(null);\n    try {\n      const response = await axios.post(`${API_BASE}/api/process/${imageId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data.task_id) {\n        await pollTaskStatus(response.data.task_id);\n      } else {\n        throw new Error('处理响应中缺少任务ID');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('处理失败:', error);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message || '处理失败，请重试');\n      setProcessingStatus('error');\n    }\n  };\n  const pollTaskStatus = async taskId => {\n    try {\n      const response = await axios.get(`${API_BASE}/api/tasks/${taskId}`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data.status === 'completed') {\n        setProcessingStatus('completed');\n        if (response.data.results) {\n          setProcessedData(response.data.results);\n        }\n        if (response.data.matlab_log) {\n          setProcessingLogs(prev => [...prev, response.data.matlab_log]);\n        }\n      } else if (response.data.status === 'failed') {\n        setProcessingStatus('error');\n        setError('处理失败');\n      } else {\n        // 继续轮询\n        if (response.data.matlab_log) {\n          setProcessingLogs(prev => [...prev, response.data.matlab_log]);\n        }\n        setTimeout(() => pollTaskStatus(taskId), 2000);\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('轮询失败:', error);\n      setProcessingStatus('error');\n      setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || error.message || '轮询失败');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-upload-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleFileSelect,\n          accept: \".dcm,.nii,.nii.gz\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !selectedFile || loading,\n          className: loading ? 'loading' : '',\n          children: loading ? '上传中...' : '上传'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 27\n      }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u56FE\\u50CF\\u9884\\u89C8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: preview,\n          alt: \"\\u9884\\u89C8\",\n          className: \"image-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this), processingStatus === 'processing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u6B63\\u5728\\u5904\\u7406\\u56FE\\u50CF...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), processingLogs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing-logs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u5904\\u7406\\u65E5\\u5FD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logs-container\",\n          children: processingLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"log-entry\",\n            children: log\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this), processedData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processed-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\u5904\\u7406\\u7ED3\\u679C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u7070\\u8D28\\u4F53\\u79EF:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this), \" \", (processedData.gm_volume / 1000).toFixed(2), \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u767D\\u8D28\\u4F53\\u79EF:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 33\n            }, this), \" \", (processedData.wm_volume / 1000).toFixed(2), \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u8111\\u810A\\u6DB2\\u4F53\\u79EF:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this), \" \", (processedData.csf_volume / 1000).toFixed(2), \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-entry\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u9885\\u5185\\u603B\\u4F53\\u79EF:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 33\n            }, this), \" \", (processedData.tiv / 1000).toFixed(2), \" ml\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageUpload, \"LkEfLUGrP1Tz6fIoGoJO6ewgYJw=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","ImageUpload","patientId","onUploadSuccess","_s","selectedFile","setSelectedFile","preview","setPreview","loading","setLoading","error","setError","uploadedImage","setUploadedImage","processingStatus","setProcessingStatus","processingLogs","setProcessingLogs","processedData","setProcessedData","handleFileSelect","event","file","target","files","formData","FormData","append","response","post","headers","localStorage","getItem","data","status","image","console","handleUpload","e","preventDefault","handleProcess","id","_error$response","_error$response$data","message","imageId","task_id","pollTaskStatus","Error","_error$response2","_error$response2$data","taskId","get","results","matlab_log","prev","setTimeout","_error$response3","_error$response3$data","className","children","onSubmit","type","onChange","accept","disabled","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","length","map","log","index","gm_volume","toFixed","wm_volume","csf_volume","tiv","_c","$RefreshReg$"],"sources":["D:/GitHub/mri-web-app/frontend/src/components/ImageUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ImageUpload.css';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\r\n\r\nfunction ImageUpload({ patientId, onUploadSuccess }) {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [preview, setPreview] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [uploadedImage, setUploadedImage] = useState(null);\r\n    const [processingStatus, setProcessingStatus] = useState('idle');\r\n    const [processingLogs, setProcessingLogs] = useState([]);\r\n    const [processedData, setProcessedData] = useState(null);\r\n\r\n    const handleFileSelect = async (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            setSelectedFile(file);\r\n            setError('');\r\n            setUploadedImage(null);\r\n            setProcessingStatus('idle');\r\n            setProcessingLogs([]);\r\n            setProcessedData(null);\r\n\r\n            // 使用后端的预览生成功能\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            try {\r\n                const response = await axios.post(`${API_BASE}/api/preview`, formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                });\r\n                if (response.data.status === 'success' && response.data.image) {\r\n                    setPreview(`data:image/png;base64,${response.data.image}`);\r\n                }\r\n            } catch (error) {\r\n                console.error('预览生成失败:', error);\r\n                setError('无法生成预览图');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleUpload = async (e) => {\r\n        e.preventDefault();\r\n        if (!selectedFile) {\r\n            setError('请选择文件');\r\n            return;\r\n        }\r\n\r\n        if (!patientId) {\r\n            setError('请先选择患者');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError('');\r\n        setProcessingStatus('uploading');\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', selectedFile);\r\n        formData.append('patient_id', patientId);\r\n\r\n        try {\r\n            const response = await axios.post(`${API_BASE}/api/upload`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n\r\n            if (response.data.image) {\r\n                setUploadedImage(response.data.image);\r\n                setProcessingStatus('uploaded');\r\n                \r\n                if (onUploadSuccess) {\r\n                    onUploadSuccess(response.data);\r\n                }\r\n                \r\n                // 自动开始处理\r\n                await handleProcess(response.data.image.id);\r\n            }\r\n        } catch (error) {\r\n            console.error('上传失败:', error);\r\n            setError(error.response?.data?.error || error.message || '上传失败，请重试');\r\n            setProcessingStatus('error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleProcess = async (imageId) => {\r\n        if (!imageId) {\r\n            setError('缺少图像ID');\r\n            setProcessingStatus('error');\r\n            return;\r\n        }\r\n\r\n        setProcessingStatus('processing');\r\n        setProcessingLogs([]);\r\n        setProcessedData(null);\r\n        \r\n        try {\r\n            const response = await axios.post(\r\n                `${API_BASE}/api/process/${imageId}`,\r\n                {},\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                }\r\n            );\r\n            \r\n            if (response.data.task_id) {\r\n                await pollTaskStatus(response.data.task_id);\r\n            } else {\r\n                throw new Error('处理响应中缺少任务ID');\r\n            }\r\n        } catch (error) {\r\n            console.error('处理失败:', error);\r\n            setError(error.response?.data?.error || error.message || '处理失败，请重试');\r\n            setProcessingStatus('error');\r\n        }\r\n    };\r\n\r\n    const pollTaskStatus = async (taskId) => {\r\n        try {\r\n            const response = await axios.get(\r\n                `${API_BASE}/api/tasks/${taskId}`,\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                }\r\n            );\r\n            \r\n            if (response.data.status === 'completed') {\r\n                setProcessingStatus('completed');\r\n                if (response.data.results) {\r\n                    setProcessedData(response.data.results);\r\n                }\r\n                if (response.data.matlab_log) {\r\n                    setProcessingLogs(prev => [...prev, response.data.matlab_log]);\r\n                }\r\n            } else if (response.data.status === 'failed') {\r\n                setProcessingStatus('error');\r\n                setError('处理失败');\r\n            } else {\r\n                // 继续轮询\r\n                if (response.data.matlab_log) {\r\n                    setProcessingLogs(prev => [...prev, response.data.matlab_log]);\r\n                }\r\n                setTimeout(() => pollTaskStatus(taskId), 2000);\r\n            }\r\n        } catch (error) {\r\n            console.error('轮询失败:', error);\r\n            setProcessingStatus('error');\r\n            setError(error.response?.data?.error || error.message || '轮询失败');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"image-upload-container\">\r\n            <form onSubmit={handleUpload}>\r\n                <div className=\"file-input-group\">\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={handleFileSelect}\r\n                        accept=\".dcm,.nii,.nii.gz\"\r\n                        disabled={loading}\r\n                    />\r\n                    <button \r\n                        type=\"submit\" \r\n                        disabled={!selectedFile || loading}\r\n                        className={loading ? 'loading' : ''}\r\n                    >\r\n                        {loading ? '上传中...' : '上传'}\r\n                    </button>\r\n                </div>\r\n                \r\n                {error && <div className=\"error-message\">{error}</div>}\r\n                \r\n                {preview && (\r\n                    <div className=\"preview-container\">\r\n                        <h3>图像预览</h3>\r\n                        <img src={preview} alt=\"预览\" className=\"image-preview\" />\r\n                    </div>\r\n                )}\r\n\r\n                {processingStatus === 'processing' && (\r\n                    <div className=\"processing-status\">\r\n                        <div className=\"spinner\"></div>\r\n                        <p>正在处理图像...</p>\r\n                    </div>\r\n                )}\r\n\r\n                {processingLogs.length > 0 && (\r\n                    <div className=\"processing-logs\">\r\n                        <h3>处理日志</h3>\r\n                        <div className=\"logs-container\">\r\n                            {processingLogs.map((log, index) => (\r\n                                <div key={index} className=\"log-entry\">{log}</div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {processedData && (\r\n                    <div className=\"processed-data\">\r\n                        <h3>处理结果</h3>\r\n                        <div className=\"data-container\">\r\n                            <div className=\"data-entry\">\r\n                                <strong>灰质体积:</strong> {(processedData.gm_volume / 1000).toFixed(2)} ml\r\n                            </div>\r\n                            <div className=\"data-entry\">\r\n                                <strong>白质体积:</strong> {(processedData.wm_volume / 1000).toFixed(2)} ml\r\n                            </div>\r\n                            <div className=\"data-entry\">\r\n                                <strong>脑脊液体积:</strong> {(processedData.csf_volume / 1000).toFixed(2)} ml\r\n                            </div>\r\n                            <div className=\"data-entry\">\r\n                                <strong>颅内总体积:</strong> {(processedData.tiv / 1000).toFixed(2)} ml\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}