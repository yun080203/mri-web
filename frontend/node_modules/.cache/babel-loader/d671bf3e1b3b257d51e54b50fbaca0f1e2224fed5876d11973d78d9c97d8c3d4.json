{"ast":null,"code":"import { ACCEPTED_FILE_TYPES, ERROR_MESSAGES } from './constants';\n\n// 验证文件类型\nexport const validateFileType = file => {\n  const fileName = file.name.toLowerCase();\n  return fileName.endsWith(ACCEPTED_FILE_TYPES.DICOM) || fileName.endsWith('.nii') || fileName.endsWith('.nii.gz');\n};\n\n// 格式化错误消息\nexport const formatError = error => {\n  if (!error) return '';\n  if (error.response) {\n    const {\n      status,\n      data\n    } = error.response;\n    switch (status) {\n      case 400:\n        return data.message || ERROR_MESSAGES.SERVER_ERROR;\n      case 401:\n        return ERROR_MESSAGES.AUTH_ERROR;\n      case 404:\n        return '请求的资源不存在';\n      case 500:\n        return ERROR_MESSAGES.SERVER_ERROR;\n      default:\n        return data.message || ERROR_MESSAGES.SERVER_ERROR;\n    }\n  }\n  if (error.request) {\n    return ERROR_MESSAGES.NETWORK_ERROR;\n  }\n  return error.message || ERROR_MESSAGES.SERVER_ERROR;\n};\n\n// 格式化体积数据（转换为ml）\nexport const formatVolume = volumeInMm3 => {\n  if (!volumeInMm3 && volumeInMm3 !== 0) return 'N/A';\n  return `${(volumeInMm3 / 1000).toFixed(2)} ml`;\n};\n\n// 格式化处理状态\nexport const formatProcessingStatus = status => {\n  switch (status) {\n    case 'uploading':\n      return '正在上传';\n    case 'uploaded':\n      return '上传完成';\n    case 'processing':\n      return '正在处理';\n    case 'completed':\n      return '处理完成';\n    case 'failed':\n      return '处理失败';\n    case 'error':\n      return '发生错误';\n    default:\n      return '准备就绪';\n  }\n};\n\n// 防抖函数\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// 节流函数\nexport const throttle = (func, limit) => {\n  let inThrottle;\n  return function executedFunction(...args) {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n\n// 格式化日期\nexport const formatDate = date => {\n  if (!date) return '';\n  const d = new Date(date);\n  return d.toLocaleDateString('zh-CN', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\n// 生成唯一ID\nexport const generateId = () => {\n  return Math.random().toString(36).substr(2, 9);\n};\n\n// 格式化文件大小\nexport const formatFileSize = bytes => {\n  if (!bytes) return '0 B';\n  const k = 1024;\n  const sizes = ['B', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n};\n\n// 验证患者数据\nexport const validatePatientData = data => {\n  const errors = {};\n  if (!data.name) {\n    errors.name = '请输入姓名';\n  }\n  if (!data.patient_id) {\n    errors.patient_id = '请输入患者ID';\n  }\n  if (!data.age) {\n    errors.age = '请输入年龄';\n  } else if (isNaN(data.age) || data.age <= 0) {\n    errors.age = '请输入有效的年龄';\n  }\n  if (!data.gender) {\n    errors.gender = '请选择性别';\n  }\n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors\n  };\n};","map":{"version":3,"names":["ACCEPTED_FILE_TYPES","ERROR_MESSAGES","validateFileType","file","fileName","name","toLowerCase","endsWith","DICOM","formatError","error","response","status","data","message","SERVER_ERROR","AUTH_ERROR","request","NETWORK_ERROR","formatVolume","volumeInMm3","toFixed","formatProcessingStatus","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","throttle","limit","inThrottle","formatDate","date","d","Date","toLocaleDateString","year","month","day","hour","minute","generateId","Math","random","toString","substr","formatFileSize","bytes","k","sizes","i","floor","log","parseFloat","pow","validatePatientData","errors","patient_id","age","isNaN","gender","isValid","Object","keys","length"],"sources":["D:/GitHub/mri-web-app/frontend/src/utils/helpers.js"],"sourcesContent":["import { ACCEPTED_FILE_TYPES, ERROR_MESSAGES } from './constants';\r\n\r\n// 验证文件类型\r\nexport const validateFileType = (file) => {\r\n    const fileName = file.name.toLowerCase();\r\n    return fileName.endsWith(ACCEPTED_FILE_TYPES.DICOM) ||\r\n           fileName.endsWith('.nii') ||\r\n           fileName.endsWith('.nii.gz');\r\n};\r\n\r\n// 格式化错误消息\r\nexport const formatError = (error) => {\r\n    if (!error) return '';\r\n    \r\n    if (error.response) {\r\n        const { status, data } = error.response;\r\n        \r\n        switch (status) {\r\n            case 400:\r\n                return data.message || ERROR_MESSAGES.SERVER_ERROR;\r\n            case 401:\r\n                return ERROR_MESSAGES.AUTH_ERROR;\r\n            case 404:\r\n                return '请求的资源不存在';\r\n            case 500:\r\n                return ERROR_MESSAGES.SERVER_ERROR;\r\n            default:\r\n                return data.message || ERROR_MESSAGES.SERVER_ERROR;\r\n        }\r\n    }\r\n    \r\n    if (error.request) {\r\n        return ERROR_MESSAGES.NETWORK_ERROR;\r\n    }\r\n    \r\n    return error.message || ERROR_MESSAGES.SERVER_ERROR;\r\n};\r\n\r\n// 格式化体积数据（转换为ml）\r\nexport const formatVolume = (volumeInMm3) => {\r\n    if (!volumeInMm3 && volumeInMm3 !== 0) return 'N/A';\r\n    return `${(volumeInMm3 / 1000).toFixed(2)} ml`;\r\n};\r\n\r\n// 格式化处理状态\r\nexport const formatProcessingStatus = (status) => {\r\n    switch (status) {\r\n        case 'uploading':\r\n            return '正在上传';\r\n        case 'uploaded':\r\n            return '上传完成';\r\n        case 'processing':\r\n            return '正在处理';\r\n        case 'completed':\r\n            return '处理完成';\r\n        case 'failed':\r\n            return '处理失败';\r\n        case 'error':\r\n            return '发生错误';\r\n        default:\r\n            return '准备就绪';\r\n    }\r\n};\r\n\r\n// 防抖函数\r\nexport const debounce = (func, wait) => {\r\n    let timeout;\r\n    return function executedFunction(...args) {\r\n        const later = () => {\r\n            clearTimeout(timeout);\r\n            func(...args);\r\n        };\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n    };\r\n};\r\n\r\n// 节流函数\r\nexport const throttle = (func, limit) => {\r\n    let inThrottle;\r\n    return function executedFunction(...args) {\r\n        if (!inThrottle) {\r\n            func(...args);\r\n            inThrottle = true;\r\n            setTimeout(() => inThrottle = false, limit);\r\n        }\r\n    };\r\n};\r\n\r\n// 格式化日期\r\nexport const formatDate = (date) => {\r\n    if (!date) return '';\r\n    const d = new Date(date);\r\n    return d.toLocaleDateString('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n    });\r\n};\r\n\r\n// 生成唯一ID\r\nexport const generateId = () => {\r\n    return Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\n// 格式化文件大小\r\nexport const formatFileSize = (bytes) => {\r\n    if (!bytes) return '0 B';\r\n    const k = 1024;\r\n    const sizes = ['B', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\r\n};\r\n\r\n// 验证患者数据\r\nexport const validatePatientData = (data) => {\r\n    const errors = {};\r\n    \r\n    if (!data.name) {\r\n        errors.name = '请输入姓名';\r\n    }\r\n    \r\n    if (!data.patient_id) {\r\n        errors.patient_id = '请输入患者ID';\r\n    }\r\n    \r\n    if (!data.age) {\r\n        errors.age = '请输入年龄';\r\n    } else if (isNaN(data.age) || data.age <= 0) {\r\n        errors.age = '请输入有效的年龄';\r\n    }\r\n    \r\n    if (!data.gender) {\r\n        errors.gender = '请选择性别';\r\n    }\r\n    \r\n    return {\r\n        isValid: Object.keys(errors).length === 0,\r\n        errors\r\n    };\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}