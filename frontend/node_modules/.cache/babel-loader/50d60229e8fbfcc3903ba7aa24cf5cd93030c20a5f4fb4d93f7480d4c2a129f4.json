{"ast":null,"code":"import * as React from 'react';\nimport { generate, getSecondaryColor, isIconDefinition, warning, useInsertStyles } from \"../utils\";\nconst twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6',\n  calculated: false\n};\nfunction setTwoToneColors({\n  primaryColor,\n  secondaryColor\n}) {\n  twoToneColorPalette.primaryColor = primaryColor;\n  twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  twoToneColorPalette.calculated = !!secondaryColor;\n}\nfunction getTwoToneColors() {\n  return {\n    ...twoToneColorPalette\n  };\n}\nconst IconBase = props => {\n  const {\n    icon,\n    className,\n    onClick,\n    style,\n    primaryColor,\n    secondaryColor,\n    ...restProps\n  } = props;\n  const svgRef = React.useRef();\n  let colors = twoToneColorPalette;\n  if (primaryColor) {\n    colors = {\n      primaryColor,\n      secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n    };\n  }\n  useInsertStyles(svgRef);\n  warning(isIconDefinition(icon), `icon should be icon definiton, but got ${icon}`);\n  if (!isIconDefinition(icon)) {\n    return null;\n  }\n  let target = icon;\n  if (target && typeof target.icon === 'function') {\n    target = {\n      ...target,\n      icon: target.icon(colors.primaryColor, colors.secondaryColor)\n    };\n  }\n  return generate(target.icon, `svg-${target.name}`, {\n    className,\n    onClick,\n    style,\n    'data-icon': target.name,\n    width: '1em',\n    height: '1em',\n    fill: 'currentColor',\n    'aria-hidden': 'true',\n    ...restProps,\n    ref: svgRef\n  });\n};\nIconBase.displayName = 'IconReact';\nIconBase.getTwoToneColors = getTwoToneColors;\nIconBase.setTwoToneColors = setTwoToneColors;\nexport default IconBase;","map":{"version":3,"names":["React","generate","getSecondaryColor","isIconDefinition","warning","useInsertStyles","twoToneColorPalette","primaryColor","secondaryColor","calculated","setTwoToneColors","getTwoToneColors","IconBase","props","icon","className","onClick","style","restProps","svgRef","useRef","colors","target","name","width","height","fill","ref","displayName"],"sources":["D:/GitHub/mri-web-app/frontend/node_modules/@ant-design/icons/es/components/IconBase.js"],"sourcesContent":["import * as React from 'react';\nimport { generate, getSecondaryColor, isIconDefinition, warning, useInsertStyles } from \"../utils\";\nconst twoToneColorPalette = {\n  primaryColor: '#333',\n  secondaryColor: '#E6E6E6',\n  calculated: false\n};\nfunction setTwoToneColors({\n  primaryColor,\n  secondaryColor\n}) {\n  twoToneColorPalette.primaryColor = primaryColor;\n  twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  twoToneColorPalette.calculated = !!secondaryColor;\n}\nfunction getTwoToneColors() {\n  return {\n    ...twoToneColorPalette\n  };\n}\nconst IconBase = props => {\n  const {\n    icon,\n    className,\n    onClick,\n    style,\n    primaryColor,\n    secondaryColor,\n    ...restProps\n  } = props;\n  const svgRef = React.useRef();\n  let colors = twoToneColorPalette;\n  if (primaryColor) {\n    colors = {\n      primaryColor,\n      secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n    };\n  }\n  useInsertStyles(svgRef);\n  warning(isIconDefinition(icon), `icon should be icon definiton, but got ${icon}`);\n  if (!isIconDefinition(icon)) {\n    return null;\n  }\n  let target = icon;\n  if (target && typeof target.icon === 'function') {\n    target = {\n      ...target,\n      icon: target.icon(colors.primaryColor, colors.secondaryColor)\n    };\n  }\n  return generate(target.icon, `svg-${target.name}`, {\n    className,\n    onClick,\n    style,\n    'data-icon': target.name,\n    width: '1em',\n    height: '1em',\n    fill: 'currentColor',\n    'aria-hidden': 'true',\n    ...restProps,\n    ref: svgRef\n  });\n};\nIconBase.displayName = 'IconReact';\nIconBase.getTwoToneColors = getTwoToneColors;\nIconBase.setTwoToneColors = setTwoToneColors;\nexport default IconBase;"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,iBAAiB,EAAEC,gBAAgB,EAAEC,OAAO,EAAEC,eAAe,QAAQ,UAAU;AAClG,MAAMC,mBAAmB,GAAG;EAC1BC,YAAY,EAAE,MAAM;EACpBC,cAAc,EAAE,SAAS;EACzBC,UAAU,EAAE;AACd,CAAC;AACD,SAASC,gBAAgBA,CAAC;EACxBH,YAAY;EACZC;AACF,CAAC,EAAE;EACDF,mBAAmB,CAACC,YAAY,GAAGA,YAAY;EAC/CD,mBAAmB,CAACE,cAAc,GAAGA,cAAc,IAAIN,iBAAiB,CAACK,YAAY,CAAC;EACtFD,mBAAmB,CAACG,UAAU,GAAG,CAAC,CAACD,cAAc;AACnD;AACA,SAASG,gBAAgBA,CAAA,EAAG;EAC1B,OAAO;IACL,GAAGL;EACL,CAAC;AACH;AACA,MAAMM,QAAQ,GAAGC,KAAK,IAAI;EACxB,MAAM;IACJC,IAAI;IACJC,SAAS;IACTC,OAAO;IACPC,KAAK;IACLV,YAAY;IACZC,cAAc;IACd,GAAGU;EACL,CAAC,GAAGL,KAAK;EACT,MAAMM,MAAM,GAAGnB,KAAK,CAACoB,MAAM,CAAC,CAAC;EAC7B,IAAIC,MAAM,GAAGf,mBAAmB;EAChC,IAAIC,YAAY,EAAE;IAChBc,MAAM,GAAG;MACPd,YAAY;MACZC,cAAc,EAAEA,cAAc,IAAIN,iBAAiB,CAACK,YAAY;IAClE,CAAC;EACH;EACAF,eAAe,CAACc,MAAM,CAAC;EACvBf,OAAO,CAACD,gBAAgB,CAACW,IAAI,CAAC,EAAE,0CAA0CA,IAAI,EAAE,CAAC;EACjF,IAAI,CAACX,gBAAgB,CAACW,IAAI,CAAC,EAAE;IAC3B,OAAO,IAAI;EACb;EACA,IAAIQ,MAAM,GAAGR,IAAI;EACjB,IAAIQ,MAAM,IAAI,OAAOA,MAAM,CAACR,IAAI,KAAK,UAAU,EAAE;IAC/CQ,MAAM,GAAG;MACP,GAAGA,MAAM;MACTR,IAAI,EAAEQ,MAAM,CAACR,IAAI,CAACO,MAAM,CAACd,YAAY,EAAEc,MAAM,CAACb,cAAc;IAC9D,CAAC;EACH;EACA,OAAOP,QAAQ,CAACqB,MAAM,CAACR,IAAI,EAAE,OAAOQ,MAAM,CAACC,IAAI,EAAE,EAAE;IACjDR,SAAS;IACTC,OAAO;IACPC,KAAK;IACL,WAAW,EAAEK,MAAM,CAACC,IAAI;IACxBC,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,cAAc;IACpB,aAAa,EAAE,MAAM;IACrB,GAAGR,SAAS;IACZS,GAAG,EAAER;EACP,CAAC,CAAC;AACJ,CAAC;AACDP,QAAQ,CAACgB,WAAW,GAAG,WAAW;AAClChB,QAAQ,CAACD,gBAAgB,GAAGA,gBAAgB;AAC5CC,QAAQ,CAACF,gBAAgB,GAAGA,gBAAgB;AAC5C,eAAeE,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}