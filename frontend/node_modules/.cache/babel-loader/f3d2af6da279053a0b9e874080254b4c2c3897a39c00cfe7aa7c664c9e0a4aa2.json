{"ast":null,"code":"import { isValidElement, version } from 'react';\nimport { ForwardRef, isMemo } from 'react-is';\nimport useMemo from \"./hooks/useMemo\";\nimport isFragment from \"./React/isFragment\";\nconst ReactMajorVersion = Number(version.split('.')[0]);\nexport const fillRef = (ref, node) => {\n  if (typeof ref === 'function') {\n    ref(node);\n  } else if (typeof ref === 'object' && ref && 'current' in ref) {\n    ref.current = node;\n  }\n};\n\n/**\n * Merge refs into one ref function to support ref passing.\n */\nexport const composeRef = (...refs) => {\n  const refList = refs.filter(Boolean);\n  if (refList.length <= 1) {\n    return refList[0];\n  }\n  return node => {\n    refs.forEach(ref => {\n      fillRef(ref, node);\n    });\n  };\n};\nexport const useComposeRef = (...refs) => {\n  return useMemo(() => composeRef(...refs),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  refs, (prev, next) => prev.length !== next.length || prev.every((ref, i) => ref !== next[i]));\n};\nexport const supportRef = nodeOrComponent => {\n  if (!nodeOrComponent) {\n    return false;\n  }\n\n  // React 19 no need `forwardRef` anymore. So just pass if is a React element.\n  if (isReactElement(nodeOrComponent) && ReactMajorVersion >= 19) {\n    return true;\n  }\n  const type = isMemo(nodeOrComponent) ? nodeOrComponent.type.type : nodeOrComponent.type;\n\n  // Function component node\n  if (typeof type === 'function' && !type.prototype?.render && type.$$typeof !== ForwardRef) {\n    return false;\n  }\n\n  // Class component\n  if (typeof nodeOrComponent === 'function' && !nodeOrComponent.prototype?.render && nodeOrComponent.$$typeof !== ForwardRef) {\n    return false;\n  }\n  return true;\n};\nfunction isReactElement(node) {\n  return /*#__PURE__*/isValidElement(node) && !isFragment(node);\n}\nexport const supportNodeRef = node => {\n  return isReactElement(node) && supportRef(node);\n};\n\n/**\n * In React 19. `ref` is not a property from node.\n * But a property from `props.ref`.\n * To check if `props.ref` exist or fallback to `ref`.\n */\nexport const getNodeRef = node => {\n  if (node && isReactElement(node)) {\n    const ele = node;\n\n    // Source from:\n    // https://github.com/mui/material-ui/blob/master/packages/mui-utils/src/getReactNodeRef/getReactNodeRef.ts\n    return ele.props.propertyIsEnumerable('ref') ? ele.props.ref : ele.ref;\n  }\n  return null;\n};","map":{"version":3,"names":["isValidElement","version","ForwardRef","isMemo","useMemo","isFragment","ReactMajorVersion","Number","split","fillRef","ref","node","current","composeRef","refs","refList","filter","Boolean","length","forEach","useComposeRef","prev","next","every","i","supportRef","nodeOrComponent","isReactElement","type","prototype","render","$$typeof","supportNodeRef","getNodeRef","ele","props","propertyIsEnumerable"],"sources":["D:/GitHub/mri-web-app/frontend/node_modules/@rc-component/util/es/ref.js"],"sourcesContent":["import { isValidElement, version } from 'react';\nimport { ForwardRef, isMemo } from 'react-is';\nimport useMemo from \"./hooks/useMemo\";\nimport isFragment from \"./React/isFragment\";\nconst ReactMajorVersion = Number(version.split('.')[0]);\nexport const fillRef = (ref, node) => {\n  if (typeof ref === 'function') {\n    ref(node);\n  } else if (typeof ref === 'object' && ref && 'current' in ref) {\n    ref.current = node;\n  }\n};\n\n/**\n * Merge refs into one ref function to support ref passing.\n */\nexport const composeRef = (...refs) => {\n  const refList = refs.filter(Boolean);\n  if (refList.length <= 1) {\n    return refList[0];\n  }\n  return node => {\n    refs.forEach(ref => {\n      fillRef(ref, node);\n    });\n  };\n};\nexport const useComposeRef = (...refs) => {\n  return useMemo(() => composeRef(...refs),\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  refs, (prev, next) => prev.length !== next.length || prev.every((ref, i) => ref !== next[i]));\n};\nexport const supportRef = nodeOrComponent => {\n  if (!nodeOrComponent) {\n    return false;\n  }\n\n  // React 19 no need `forwardRef` anymore. So just pass if is a React element.\n  if (isReactElement(nodeOrComponent) && ReactMajorVersion >= 19) {\n    return true;\n  }\n  const type = isMemo(nodeOrComponent) ? nodeOrComponent.type.type : nodeOrComponent.type;\n\n  // Function component node\n  if (typeof type === 'function' && !type.prototype?.render && type.$$typeof !== ForwardRef) {\n    return false;\n  }\n\n  // Class component\n  if (typeof nodeOrComponent === 'function' && !nodeOrComponent.prototype?.render && nodeOrComponent.$$typeof !== ForwardRef) {\n    return false;\n  }\n  return true;\n};\nfunction isReactElement(node) {\n  return /*#__PURE__*/isValidElement(node) && !isFragment(node);\n}\nexport const supportNodeRef = node => {\n  return isReactElement(node) && supportRef(node);\n};\n\n/**\n * In React 19. `ref` is not a property from node.\n * But a property from `props.ref`.\n * To check if `props.ref` exist or fallback to `ref`.\n */\nexport const getNodeRef = node => {\n  if (node && isReactElement(node)) {\n    const ele = node;\n\n    // Source from:\n    // https://github.com/mui/material-ui/blob/master/packages/mui-utils/src/getReactNodeRef/getReactNodeRef.ts\n    return ele.props.propertyIsEnumerable('ref') ? ele.props.ref : ele.ref;\n  }\n  return null;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}