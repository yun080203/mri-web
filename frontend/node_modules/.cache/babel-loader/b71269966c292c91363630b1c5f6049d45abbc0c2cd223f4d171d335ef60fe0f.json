{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\mri-web-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// 导入 React 库中的 useState 和 useReducer 钩子，用于在函数组件中添加状态管理\nimport React, { useState, useReducer, useRef, useEffect, Suspense, lazy } from 'react';\n// 导入 axios 库，用于发送 HTTP 请求\nimport axios from 'axios';\n// 导入 react-router-dom 中的 BrowserRouter 重命名为 Router，Routes 和 Route 组件\nimport { BrowserRouter as Router, Routes, Route, Link, Navigate, useNavigate } from 'react-router-dom';\nimport './styles/dicom.css';\nimport './styles/App.css';\n\n// 懒加载组件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DICOMViewer = /*#__PURE__*/lazy(_c = () => import('./components/Viewer/DICOMViewer'));\n_c2 = DICOMViewer;\nconst ImageViewer = /*#__PURE__*/lazy(_c3 = () => import('./components/Viewer/ImageViewer'));\n_c4 = ImageViewer;\nconst ComparisonView = /*#__PURE__*/lazy(_c5 = () => import('./components/Viewer/ComparisonView'));\n_c6 = ComparisonView;\nconst DataManager = /*#__PURE__*/lazy(_c7 = () => import('./components/DataManagement/DataManager'));\n_c8 = DataManager;\nconst Login = /*#__PURE__*/lazy(_c9 = () => import('./components/Auth/Login'));\n_c10 = Login;\nconst Register = /*#__PURE__*/lazy(_c11 = () => import('./components/Auth/Register'));\n_c12 = Register;\nconst PatientList = /*#__PURE__*/lazy(_c13 = () => import('./components/Patient/PatientList'));\n_c14 = PatientList;\nconst PatientDetail = /*#__PURE__*/lazy(_c15 = () => import('./components/Patient/PatientDetail'));\n_c16 = PatientDetail;\nconst ImageUpload = /*#__PURE__*/lazy(_c17 = () => import('./components/ImageUpload/ImageUpload'));\n\n// 新增环境变量配置\n_c18 = ImageUpload;\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n\n// 创建axios实例\nconst axiosInstance = axios.create({\n  baseURL: API_BASE,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// 添加请求拦截器\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  console.log('发送请求:', {\n    url: config.url,\n    method: config.method,\n    headers: config.headers,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\naxiosInstance.interceptors.response.use(response => {\n  console.log('收到响应:', response);\n  return response;\n}, error => {\n  var _error$response;\n  console.error('响应错误:', error);\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// 配置全局axios默认值\naxios.defaults.baseURL = API_BASE;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.headers.common['Accept'] = 'application/json';\n\n// 认证状态管理\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: null\n      };\n    default:\n      return state;\n  }\n};\n\n// 使用useReducer整合状态\nconst initialState = {\n  taskId: null,\n  status: 'idle',\n  // 'idle' | 'uploading' | 'processing' | 'completed' | 'failed'\n  progress: 0,\n  result: null,\n  error: null\n};\nfunction uploadReducer(state, action) {\n  switch (action.type) {\n    case 'START_UPLOAD':\n      return {\n        ...state,\n        status: 'uploading',\n        progress: 0\n      };\n    case 'UPDATE_PROGRESS':\n      return {\n        ...state,\n        progress: action.payload\n      };\n    case 'PROCESS_START':\n      return {\n        ...state,\n        status: 'processing',\n        taskId: action.payload\n      };\n    case 'SUCCESS':\n      return {\n        ...state,\n        status: 'completed',\n        result: action.payload\n      };\n    case 'ERROR':\n      return {\n        ...state,\n        status: 'failed',\n        error: action.payload\n      };\n    case 'RESET':\n      return initialState;\n    default:\n      return state;\n  }\n}\nconst MainApp = () => {\n  _s();\n  const [authState, authDispatch] = useReducer(authReducer, {\n    isAuthenticated: !!localStorage.getItem('token'),\n    user: null\n  });\n  const [state, dispatch] = useReducer(uploadReducer, initialState);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadedImage, setUploadedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [processingStatus, setProcessingStatus] = useState(null);\n  const [processedImages, setProcessedImages] = useState({});\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [patients, setPatients] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [showPatientModal, setShowPatientModal] = useState(false);\n  const [newPatient, setNewPatient] = useState({\n    name: '',\n    patient_id: '',\n    age: '',\n    gender: 'M'\n  });\n  const cancelTokenSource = useRef(null);\n  const navigate = useNavigate();\n  const pollInterval = useRef(null);\n  const [previewImage, setPreviewImage] = useState(null);\n\n  // 获取患者列表\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const response = await axiosInstance.get('/api/patients');\n        console.log('获取到的患者列表:', response.data);\n        if (response.data && Array.isArray(response.data.patients)) {\n          setPatients(response.data.patients);\n        }\n      } catch (error) {\n        var _error$response2;\n        console.error('获取患者列表失败:', error);\n        if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n          navigate('/login');\n        }\n      }\n    };\n    if (authState.isAuthenticated) {\n      fetchPatients();\n    }\n  }, [authState.isAuthenticated, navigate]);\n\n  // 配置axios默认值\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // 配置axios默认值\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      axios.defaults.headers.common['Content-Type'] = 'application/json';\n      axios.defaults.headers.common['Accept'] = 'application/json';\n      axios.defaults.withCredentials = true; // 允许跨域请求携带凭证\n    }\n  }, []);\n\n  // 创建新患者\n  const handleCreatePatient = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('未找到token');\n        alert('请先登录');\n        navigate('/login');\n        return;\n      }\n\n      // 验证输入\n      if (!newPatient.name || !newPatient.patient_id || !newPatient.age || !newPatient.gender) {\n        alert('请填写所有必填字段');\n        return;\n      }\n      const age = parseInt(newPatient.age, 10);\n      if (isNaN(age) || age <= 0) {\n        alert('请输入有效的年龄');\n        return;\n      }\n      const patientData = {\n        ...newPatient,\n        age: age\n      };\n      console.log('正在发送创建患者请求:', patientData);\n      const response = await axiosInstance.post('/api/patients', patientData);\n      console.log('服务器响应:', response);\n      if (response.data && response.data.patient) {\n        alert('患者创建成功');\n        setShowPatientModal(false);\n        setNewPatient({\n          name: '',\n          patient_id: '',\n          age: '',\n          gender: 'M'\n        });\n\n        // 将新创建的患者添加到列表中\n        setPatients(prevPatients => [...prevPatients, response.data.patient]);\n      } else {\n        throw new Error('服务器响应格式不正确');\n      }\n    } catch (error) {\n      console.error('创建患者失败:', error);\n      console.error('错误详情:', {\n        message: error.message,\n        response: error.response,\n        request: error.request\n      });\n      let errorMessage = '创建患者失败，请重试';\n      if (error.response) {\n        var _error$response$data, _error$response$data2;\n        errorMessage = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || errorMessage;\n      } else if (error.request) {\n        errorMessage = '无法连接到服务器，请检查网络连接';\n      }\n      alert(errorMessage);\n    }\n  };\n\n  // 清理函数\n  const cleanup = () => {\n    if (pollInterval.current) {\n      clearTimeout(pollInterval.current);\n    }\n    if (cancelTokenSource.current) {\n      cancelTokenSource.current.cancel('操作已取消');\n    }\n  };\n\n  // 组件卸载时清理\n  useEffect(() => {\n    return cleanup;\n  }, []);\n\n  // 定义一个处理文件选择事件的函数\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setSelectedFile(file);\n      // 清除之前的状态\n      setUploadedImage(null);\n      setProcessingStatus(null);\n      setProcessedImages({});\n      setAnalysisResults(null);\n      setPreviewImage(null);\n      dispatch({\n        type: 'RESET'\n      });\n    }\n  };\n\n  // 处理图像上传\n  const handleImageUpload = async (file, patientId) => {\n    try {\n      setLoading(true);\n      setProcessingStatus('uploading');\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('patient_id', patientId);\n      const response = await axios.post(`${API_BASE}/api/upload`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data.status === 'success') {\n        setProcessingStatus('uploaded');\n        await startProcessing(response.data.file_info.id);\n      }\n    } catch (error) {\n      console.error('上传失败:', error);\n      setProcessingStatus('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 开始处理图像\n  const startProcessing = async imageId => {\n    try {\n      setProcessingStatus('processing');\n      const response = await axios.post(`${API_BASE}/api/process/${imageId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.data.task_id) {\n        await pollTaskStatus(response.data.task_id);\n      }\n    } catch (error) {\n      console.error('处理失败:', error);\n      setProcessingStatus('error');\n    }\n  };\n\n  // 轮询任务状态\n  const pollTaskStatus = async taskId => {\n    try {\n      const interval = setInterval(async () => {\n        const response = await axios.get(`${API_BASE}/api/tasks/${taskId}`);\n        const {\n          status,\n          progress,\n          results,\n          matlab_log\n        } = response.data;\n        if (status === 'completed') {\n          clearInterval(interval);\n          setProcessingStatus('completed');\n          setAnalysisResults(results);\n          await loadProcessedImages(taskId);\n        } else if (status === 'failed') {\n          clearInterval(interval);\n          setProcessingStatus('failed');\n        }\n      }, 2000);\n    } catch (error) {\n      console.error('获取任务状态失败:', error);\n      setProcessingStatus('error');\n    }\n  };\n\n  // 加载处理后的图像\n  const loadProcessedImages = async taskId => {\n    try {\n      const images = ['p1input.nii', 'p2input.nii', 'p3input.nii'];\n      const loadedImages = {};\n      for (const img of images) {\n        const response = await axios.get(`${API_BASE}/api/processed/${taskId}/${img}`);\n        if (response.data.status === 'success') {\n          loadedImages[img] = response.data.image;\n        }\n      }\n      setProcessedImages(loadedImages);\n    } catch (error) {\n      console.error('加载处理后的图像失败:', error);\n    }\n  };\n\n  // 渲染处理按钮\n  const renderProcessButton = () => {\n    if (!uploadedImage) return null;\n    switch (processingStatus) {\n      case 'processing':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: true,\n          children: \"\\u6B63\\u5728\\u5904\\u7406...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this);\n      case 'completed':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: true,\n          children: \"\\u5904\\u7406\\u5B8C\\u6210\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this);\n      case 'failed':\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"error-button\",\n          onClick: () => startProcessing(uploadedImage.id),\n          children: \"\\u91CD\\u8BD5\\u5904\\u7406\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => startProcessing(uploadedImage.id),\n          children: \"\\u5F00\\u59CB\\u5904\\u7406\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 21\n        }, this);\n    }\n  };\n\n  // 渲染分析结果\n  const renderAnalysisResults = () => {\n    if (!analysisResults) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u5206\\u6790\\u7ED3\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        dataSource: [{\n          key: 'gm',\n          name: '灰质体积',\n          value: `${(analysisResults.gm_volume / 1000).toFixed(2)} ml`\n        }, {\n          key: 'wm',\n          name: '白质体积',\n          value: `${(analysisResults.wm_volume / 1000).toFixed(2)} ml`\n        }, {\n          key: 'csf',\n          name: '脑脊液体积',\n          value: `${(analysisResults.csf_volume / 1000).toFixed(2)} ml`\n        }, {\n          key: 'tiv',\n          name: '颅内总体积',\n          value: `${(analysisResults.tiv / 1000).toFixed(2)} ml`\n        }],\n        columns: [{\n          title: '指标',\n          dataIndex: 'name',\n          key: 'name'\n        }, {\n          title: '数值',\n          dataIndex: 'value',\n          key: 'value'\n        }],\n        pagination: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 13\n    }, this);\n  };\n\n  // 受保护的路由组件\n  const ProtectedRoute = ({\n    children\n  }) => {\n    if (!authState.isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 20\n      }, this);\n    }\n    return children;\n  };\n\n  // 返回 JSX 元素，用于渲染组件的 UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"main-nav\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"\\u9996\\u9875\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/patients\",\n        children: \"\\u60A3\\u8005\\u7BA1\\u7406\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/upload\",\n        children: \"\\u56FE\\u50CF\\u4E0A\\u4F20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/data\",\n        children: \"\\u6570\\u636E\\u5206\\u6790\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        onClick: () => {\n          localStorage.removeItem('token');\n          authDispatch({\n            type: 'LOGOUT'\n          });\n          navigate('/login');\n        },\n        children: \"\\u9000\\u51FA\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MRI\\u56FE\\u50CF\\u5904\\u7406\\u7CFB\\u7EDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feature-grid\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/patients\",\n            className: \"feature-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u60A3\\u8005\\u7BA1\\u7406\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u7BA1\\u7406\\u60A3\\u8005\\u4FE1\\u606F\\uFF0C\\u67E5\\u770B\\u60A3\\u8005\\u5386\\u53F2\\u8BB0\\u5F55\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/upload\",\n            className: \"feature-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u56FE\\u50CF\\u4E0A\\u4F20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u4E0A\\u4F20MRI\\u56FE\\u50CF\\uFF0C\\u8FDB\\u884C\\u9884\\u5904\\u7406\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/data\",\n            className: \"feature-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\u6570\\u636E\\u5206\\u6790\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u67E5\\u770B\\u5206\\u6790\\u7ED3\\u679C\\uFF0C\\u5BF9\\u6BD4\\u5904\\u7406\\u524D\\u540E\\u7684\\u56FE\\u50CF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 436,\n    columnNumber: 9\n  }, this);\n};\n\n// 添加加载中组件\n_s(MainApp, \"4/FDbpl5ofDe+Mmwz8Q/2tQ1+Fk=\", false, function () {\n  return [useNavigate];\n});\n_c19 = MainApp;\nconst LoadingSpinner = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"loading-spinner\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spinner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 474,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u52A0\\u8F7D\\u4E2D...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 475,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 473,\n  columnNumber: 3\n}, this);\n\n// 新的 App 组件，包装 Router\n_c20 = LoadingSpinner;\nfunction App() {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsAuthenticated(!!token);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 33\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Login, {\n            onLoginSuccess: () => setIsAuthenticated(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: !isAuthenticated ? /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(MainApp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/patients\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(PatientList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/patients/:id\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(PatientDetail, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/upload\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(ImageUpload, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/data\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(DataManager, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/viewer/:imageId\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(ImageViewer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/compare/:imageId\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            children: /*#__PURE__*/_jsxDEV(ComparisonView, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 489,\n    columnNumber: 9\n  }, this);\n}\n\n// 导出 App 组件\n_s2(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c21 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21;\n$RefreshReg$(_c, \"DICOMViewer$lazy\");\n$RefreshReg$(_c2, \"DICOMViewer\");\n$RefreshReg$(_c3, \"ImageViewer$lazy\");\n$RefreshReg$(_c4, \"ImageViewer\");\n$RefreshReg$(_c5, \"ComparisonView$lazy\");\n$RefreshReg$(_c6, \"ComparisonView\");\n$RefreshReg$(_c7, \"DataManager$lazy\");\n$RefreshReg$(_c8, \"DataManager\");\n$RefreshReg$(_c9, \"Login$lazy\");\n$RefreshReg$(_c10, \"Login\");\n$RefreshReg$(_c11, \"Register$lazy\");\n$RefreshReg$(_c12, \"Register\");\n$RefreshReg$(_c13, \"PatientList$lazy\");\n$RefreshReg$(_c14, \"PatientList\");\n$RefreshReg$(_c15, \"PatientDetail$lazy\");\n$RefreshReg$(_c16, \"PatientDetail\");\n$RefreshReg$(_c17, \"ImageUpload$lazy\");\n$RefreshReg$(_c18, \"ImageUpload\");\n$RefreshReg$(_c19, \"MainApp\");\n$RefreshReg$(_c20, \"LoadingSpinner\");\n$RefreshReg$(_c21, \"App\");","map":{"version":3,"names":["React","useState","useReducer","useRef","useEffect","Suspense","lazy","axios","BrowserRouter","Router","Routes","Route","Link","Navigate","useNavigate","jsxDEV","_jsxDEV","DICOMViewer","_c","_c2","ImageViewer","_c3","_c4","ComparisonView","_c5","_c6","DataManager","_c7","_c8","Login","_c9","_c10","Register","_c11","_c12","PatientList","_c13","_c14","PatientDetail","_c15","_c16","ImageUpload","_c17","_c18","API_BASE","process","env","REACT_APP_API_BASE","axiosInstance","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","console","log","url","method","data","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","defaults","common","authReducer","state","action","type","isAuthenticated","user","payload","initialState","taskId","progress","result","uploadReducer","MainApp","_s","authState","authDispatch","dispatch","selectedFile","setSelectedFile","uploadedImage","setUploadedImage","loading","setLoading","processingStatus","setProcessingStatus","processedImages","setProcessedImages","analysisResults","setAnalysisResults","patients","setPatients","selectedPatient","setSelectedPatient","showPatientModal","setShowPatientModal","newPatient","setNewPatient","name","patient_id","age","gender","cancelTokenSource","navigate","pollInterval","previewImage","setPreviewImage","fetchPatients","get","Array","isArray","_error$response2","withCredentials","handleCreatePatient","alert","parseInt","isNaN","patientData","post","patient","prevPatients","Error","message","errorMessage","_error$response$data","_error$response$data2","cleanup","current","clearTimeout","cancel","handleFileChange","e","file","target","files","handleImageUpload","patientId","formData","FormData","append","startProcessing","file_info","id","imageId","task_id","pollTaskStatus","interval","setInterval","results","matlab_log","clearInterval","loadProcessedImages","images","loadedImages","img","image","renderProcessButton","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","renderAnalysisResults","style","marginTop","Table","dataSource","key","value","gm_volume","toFixed","wm_volume","csf_volume","tiv","columns","title","dataIndex","pagination","ProtectedRoute","to","_c19","LoadingSpinner","_c20","App","_s2","setIsAuthenticated","fallback","path","element","onLoginSuccess","replace","_c21","$RefreshReg$"],"sources":["D:/GitHub/mri-web-app/frontend/src/App.js"],"sourcesContent":["// 导入 React 库中的 useState 和 useReducer 钩子，用于在函数组件中添加状态管理\r\nimport React, { useState, useReducer, useRef, useEffect, Suspense, lazy } from 'react';\r\n// 导入 axios 库，用于发送 HTTP 请求\r\nimport axios from 'axios';\r\n// 导入 react-router-dom 中的 BrowserRouter 重命名为 Router，Routes 和 Route 组件\r\nimport { BrowserRouter as Router, Routes, Route, Link, Navigate, useNavigate } from 'react-router-dom';\r\nimport './styles/dicom.css';\r\nimport './styles/App.css';\r\n\r\n// 懒加载组件\r\nconst DICOMViewer = lazy(() => import('./components/Viewer/DICOMViewer'));\r\nconst ImageViewer = lazy(() => import('./components/Viewer/ImageViewer'));\r\nconst ComparisonView = lazy(() => import('./components/Viewer/ComparisonView'));\r\nconst DataManager = lazy(() => import('./components/DataManagement/DataManager'));\r\nconst Login = lazy(() => import('./components/Auth/Login'));\r\nconst Register = lazy(() => import('./components/Auth/Register'));\r\nconst PatientList = lazy(() => import('./components/Patient/PatientList'));\r\nconst PatientDetail = lazy(() => import('./components/Patient/PatientDetail'));\r\nconst ImageUpload = lazy(() => import('./components/ImageUpload/ImageUpload'));\r\n\r\n// 新增环境变量配置\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\r\n\r\n// 创建axios实例\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_BASE,\r\n    timeout: 10000,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n    }\r\n});\r\n\r\n// 添加请求拦截器\r\naxiosInstance.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        console.log('发送请求:', {\r\n            url: config.url,\r\n            method: config.method,\r\n            headers: config.headers,\r\n            data: config.data\r\n        });\r\n        return config;\r\n    },\r\n    (error) => {\r\n        console.error('请求错误:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// 添加响应拦截器\r\naxiosInstance.interceptors.response.use(\r\n    (response) => {\r\n        console.log('收到响应:', response);\r\n        return response;\r\n    },\r\n    (error) => {\r\n        console.error('响应错误:', error);\r\n        if (error.response?.status === 401) {\r\n            localStorage.removeItem('token');\r\n            window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// 配置全局axios默认值\r\naxios.defaults.baseURL = API_BASE;\r\naxios.defaults.headers.common['Content-Type'] = 'application/json';\r\naxios.defaults.headers.common['Accept'] = 'application/json';\r\n\r\n// 认证状态管理\r\nconst authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return { ...state, isAuthenticated: true, user: action.payload };\r\n        case 'LOGOUT':\r\n            return { ...state, isAuthenticated: false, user: null };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// 使用useReducer整合状态\r\nconst initialState = {\r\n    taskId: null,\r\n    status: 'idle', // 'idle' | 'uploading' | 'processing' | 'completed' | 'failed'\r\n    progress: 0,\r\n    result: null,\r\n    error: null\r\n};\r\n\r\nfunction uploadReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'START_UPLOAD':\r\n            return { ...state, status: 'uploading', progress: 0 };\r\n        case 'UPDATE_PROGRESS':\r\n            return { ...state, progress: action.payload };\r\n        case 'PROCESS_START':\r\n            return { ...state, status: 'processing', taskId: action.payload };\r\n        case 'SUCCESS':\r\n            return { ...state, status: 'completed', result: action.payload };\r\n        case 'ERROR':\r\n            return { ...state, status: 'failed', error: action.payload };\r\n        case 'RESET':\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst MainApp = () => {\r\n    const [authState, authDispatch] = useReducer(authReducer, {\r\n        isAuthenticated: !!localStorage.getItem('token'),\r\n        user: null\r\n    });\r\n    const [state, dispatch] = useReducer(uploadReducer, initialState);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [uploadedImage, setUploadedImage] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [processingStatus, setProcessingStatus] = useState(null);\r\n    const [processedImages, setProcessedImages] = useState({});\r\n    const [analysisResults, setAnalysisResults] = useState(null);\r\n    const [patients, setPatients] = useState([]);\r\n    const [selectedPatient, setSelectedPatient] = useState(null);\r\n    const [showPatientModal, setShowPatientModal] = useState(false);\r\n    const [newPatient, setNewPatient] = useState({\r\n        name: '',\r\n        patient_id: '',\r\n        age: '',\r\n        gender: 'M'\r\n    });\r\n    const cancelTokenSource = useRef(null);\r\n    const navigate = useNavigate();\r\n    const pollInterval = useRef(null);\r\n    const [previewImage, setPreviewImage] = useState(null);\r\n\r\n    // 获取患者列表\r\n    useEffect(() => {\r\n        const fetchPatients = async () => {\r\n            try {\r\n                const response = await axiosInstance.get('/api/patients');\r\n                console.log('获取到的患者列表:', response.data);\r\n                if (response.data && Array.isArray(response.data.patients)) {\r\n                    setPatients(response.data.patients);\r\n                }\r\n            } catch (error) {\r\n                console.error('获取患者列表失败:', error);\r\n                if (error.response?.status === 401) {\r\n                    navigate('/login');\r\n                }\r\n            }\r\n        };\r\n\r\n        if (authState.isAuthenticated) {\r\n            fetchPatients();\r\n        }\r\n    }, [authState.isAuthenticated, navigate]);\r\n\r\n    // 配置axios默认值\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            // 配置axios默认值\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n            axios.defaults.headers.common['Content-Type'] = 'application/json';\r\n            axios.defaults.headers.common['Accept'] = 'application/json';\r\n            axios.defaults.withCredentials = true;  // 允许跨域请求携带凭证\r\n        }\r\n    }, []);\r\n\r\n    // 创建新患者\r\n    const handleCreatePatient = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            if (!token) {\r\n                console.error('未找到token');\r\n                alert('请先登录');\r\n                navigate('/login');\r\n                return;\r\n            }\r\n\r\n            // 验证输入\r\n            if (!newPatient.name || !newPatient.patient_id || !newPatient.age || !newPatient.gender) {\r\n                alert('请填写所有必填字段');\r\n                return;\r\n            }\r\n\r\n            const age = parseInt(newPatient.age, 10);\r\n            if (isNaN(age) || age <= 0) {\r\n                alert('请输入有效的年龄');\r\n                return;\r\n            }\r\n\r\n            const patientData = {\r\n                ...newPatient,\r\n                age: age\r\n            };\r\n\r\n            console.log('正在发送创建患者请求:', patientData);\r\n\r\n            const response = await axiosInstance.post('/api/patients', patientData);\r\n\r\n            console.log('服务器响应:', response);\r\n\r\n            if (response.data && response.data.patient) {\r\n                alert('患者创建成功');\r\n                setShowPatientModal(false);\r\n                setNewPatient({\r\n                    name: '',\r\n                    patient_id: '',\r\n                    age: '',\r\n                    gender: 'M'\r\n                });\r\n\r\n                // 将新创建的患者添加到列表中\r\n                setPatients(prevPatients => [...prevPatients, response.data.patient]);\r\n            } else {\r\n                throw new Error('服务器响应格式不正确');\r\n            }\r\n        } catch (error) {\r\n            console.error('创建患者失败:', error);\r\n            console.error('错误详情:', {\r\n                message: error.message,\r\n                response: error.response,\r\n                request: error.request\r\n            });\r\n            \r\n            let errorMessage = '创建患者失败，请重试';\r\n            if (error.response) {\r\n                errorMessage = error.response.data?.error || error.response.data?.message || errorMessage;\r\n            } else if (error.request) {\r\n                errorMessage = '无法连接到服务器，请检查网络连接';\r\n            }\r\n            \r\n            alert(errorMessage);\r\n        }\r\n    };\r\n\r\n    // 清理函数\r\n    const cleanup = () => {\r\n        if (pollInterval.current) {\r\n            clearTimeout(pollInterval.current);\r\n        }\r\n        if (cancelTokenSource.current) {\r\n            cancelTokenSource.current.cancel('操作已取消');\r\n        }\r\n    };\r\n\r\n    // 组件卸载时清理\r\n    useEffect(() => {\r\n        return cleanup;\r\n    }, []);\r\n\r\n    // 定义一个处理文件选择事件的函数\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            setSelectedFile(file);\r\n            // 清除之前的状态\r\n            setUploadedImage(null);\r\n            setProcessingStatus(null);\r\n            setProcessedImages({});\r\n            setAnalysisResults(null);\r\n            setPreviewImage(null);\r\n            dispatch({ type: 'RESET' });\r\n        }\r\n    };\r\n\r\n    // 处理图像上传\r\n    const handleImageUpload = async (file, patientId) => {\r\n        try {\r\n            setLoading(true);\r\n            setProcessingStatus('uploading');\r\n            \r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            formData.append('patient_id', patientId);\r\n            \r\n            const response = await axios.post(`${API_BASE}/api/upload`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            \r\n            if (response.data.status === 'success') {\r\n                setProcessingStatus('uploaded');\r\n                await startProcessing(response.data.file_info.id);\r\n            }\r\n        } catch (error) {\r\n            console.error('上传失败:', error);\r\n            setProcessingStatus('error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // 开始处理图像\r\n    const startProcessing = async (imageId) => {\r\n        try {\r\n            setProcessingStatus('processing');\r\n            const response = await axios.post(`${API_BASE}/api/process/${imageId}`, {}, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            \r\n            if (response.data.task_id) {\r\n                await pollTaskStatus(response.data.task_id);\r\n            }\r\n        } catch (error) {\r\n            console.error('处理失败:', error);\r\n            setProcessingStatus('error');\r\n        }\r\n    };\r\n\r\n    // 轮询任务状态\r\n    const pollTaskStatus = async (taskId) => {\r\n        try {\r\n            const interval = setInterval(async () => {\r\n                const response = await axios.get(`${API_BASE}/api/tasks/${taskId}`);\r\n                const { status, progress, results, matlab_log } = response.data;\r\n                \r\n                if (status === 'completed') {\r\n                    clearInterval(interval);\r\n                    setProcessingStatus('completed');\r\n                    setAnalysisResults(results);\r\n                    await loadProcessedImages(taskId);\r\n                } else if (status === 'failed') {\r\n                    clearInterval(interval);\r\n                    setProcessingStatus('failed');\r\n                }\r\n            }, 2000);\r\n        } catch (error) {\r\n            console.error('获取任务状态失败:', error);\r\n            setProcessingStatus('error');\r\n        }\r\n    };\r\n\r\n    // 加载处理后的图像\r\n    const loadProcessedImages = async (taskId) => {\r\n        try {\r\n            const images = ['p1input.nii', 'p2input.nii', 'p3input.nii'];\r\n            const loadedImages = {};\r\n            \r\n            for (const img of images) {\r\n                const response = await axios.get(`${API_BASE}/api/processed/${taskId}/${img}`);\r\n                if (response.data.status === 'success') {\r\n                    loadedImages[img] = response.data.image;\r\n                }\r\n            }\r\n            \r\n            setProcessedImages(loadedImages);\r\n        } catch (error) {\r\n            console.error('加载处理后的图像失败:', error);\r\n        }\r\n    };\r\n\r\n    // 渲染处理按钮\r\n    const renderProcessButton = () => {\r\n        if (!uploadedImage) return null;\r\n\r\n        switch (processingStatus) {\r\n            case 'processing':\r\n                return (\r\n                    <button type=\"button\" disabled>\r\n                        正在处理...\r\n                    </button>\r\n                );\r\n            case 'completed':\r\n                return (\r\n                    <button type=\"button\" disabled>\r\n                        处理完成\r\n                    </button>\r\n                );\r\n            case 'failed':\r\n                return (\r\n                    <button \r\n                        type=\"button\" \r\n                        className=\"error-button\"\r\n                        onClick={() => startProcessing(uploadedImage.id)}\r\n                    >\r\n                        重试处理\r\n                    </button>\r\n                );\r\n            default:\r\n                return (\r\n                    <button \r\n                        type=\"button\"\r\n                        onClick={() => startProcessing(uploadedImage.id)}\r\n                    >\r\n                        开始处理\r\n                    </button>\r\n                );\r\n        }\r\n    };\r\n\r\n    // 渲染分析结果\r\n    const renderAnalysisResults = () => {\r\n        if (!analysisResults) return null;\r\n        return (\r\n            <div style={{ marginTop: 16 }}>\r\n                <h4>分析结果</h4>\r\n                <Table\r\n                    dataSource={[\r\n                        { key: 'gm', name: '灰质体积', value: `${(analysisResults.gm_volume / 1000).toFixed(2)} ml` },\r\n                        { key: 'wm', name: '白质体积', value: `${(analysisResults.wm_volume / 1000).toFixed(2)} ml` },\r\n                        { key: 'csf', name: '脑脊液体积', value: `${(analysisResults.csf_volume / 1000).toFixed(2)} ml` },\r\n                        { key: 'tiv', name: '颅内总体积', value: `${(analysisResults.tiv / 1000).toFixed(2)} ml` }\r\n                    ]}\r\n                    columns={[\r\n                        { title: '指标', dataIndex: 'name', key: 'name' },\r\n                        { title: '数值', dataIndex: 'value', key: 'value' }\r\n                    ]}\r\n                    pagination={false}\r\n                />\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // 受保护的路由组件\r\n    const ProtectedRoute = ({ children }) => {\r\n        if (!authState.isAuthenticated) {\r\n            return <Navigate to=\"/login\" />;\r\n        }\r\n        return children;\r\n    };\r\n\r\n    // 返回 JSX 元素，用于渲染组件的 UI\r\n    return (\r\n        <div className=\"app-container\">\r\n            <nav className=\"main-nav\">\r\n                <Link to=\"/\">首页</Link>\r\n                <Link to=\"/patients\">患者管理</Link>\r\n                <Link to=\"/upload\">图像上传</Link>\r\n                <Link to=\"/data\">数据分析</Link>\r\n                <Link to=\"/login\" onClick={() => {\r\n                    localStorage.removeItem('token');\r\n                    authDispatch({ type: 'LOGOUT' });\r\n                    navigate('/login');\r\n                }}>退出登录</Link>\r\n            </nav>\r\n            <main className=\"main-content\">\r\n                <div className=\"home-page\">\r\n                    <h1>MRI图像处理系统</h1>\r\n                    <div className=\"feature-grid\">\r\n                        <Link to=\"/patients\" className=\"feature-card\">\r\n                            <h3>患者管理</h3>\r\n                            <p>管理患者信息，查看患者历史记录</p>\r\n                        </Link>\r\n                        <Link to=\"/upload\" className=\"feature-card\">\r\n                            <h3>图像上传</h3>\r\n                            <p>上传MRI图像，进行预处理</p>\r\n                        </Link>\r\n                        <Link to=\"/data\" className=\"feature-card\">\r\n                            <h3>数据分析</h3>\r\n                            <p>查看分析结果，对比处理前后的图像</p>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\n// 添加加载中组件\r\nconst LoadingSpinner = () => (\r\n  <div className=\"loading-spinner\">\r\n    <div className=\"spinner\"></div>\r\n    <p>加载中...</p>\r\n  </div>\r\n);\r\n\r\n// 新的 App 组件，包装 Router\r\nfunction App() {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        setIsAuthenticated(!!token);\r\n    }, []);\r\n\r\n    return (\r\n        <Router>\r\n            <Suspense fallback={<LoadingSpinner />}>\r\n                <Routes>\r\n                    <Route path=\"/login\" element={\r\n                        !isAuthenticated ? (\r\n                            <Login onLoginSuccess={() => setIsAuthenticated(true)} />\r\n                        ) : (\r\n                            <Navigate to=\"/\" replace />\r\n                        )\r\n                    } />\r\n                    <Route path=\"/register\" element={\r\n                        !isAuthenticated ? (\r\n                            <Register />\r\n                        ) : (\r\n                            <Navigate to=\"/\" replace />\r\n                        )\r\n                    } />\r\n                    <Route path=\"/\" element={\r\n                        isAuthenticated ? (\r\n                            <MainApp />\r\n                        ) : (\r\n                            <Navigate to=\"/login\" replace />\r\n                        )\r\n                    } />\r\n                    <Route path=\"/patients\" element={\r\n                        <ProtectedRoute>\r\n                            <PatientList />\r\n                        </ProtectedRoute>\r\n                    } />\r\n                    <Route path=\"/patients/:id\" element={\r\n                        <ProtectedRoute>\r\n                            <PatientDetail />\r\n                        </ProtectedRoute>\r\n                    } />\r\n                    <Route path=\"/upload\" element={\r\n                        <ProtectedRoute>\r\n                            <ImageUpload />\r\n                        </ProtectedRoute>\r\n                    } />\r\n                    <Route path=\"/data\" element={\r\n                        <ProtectedRoute>\r\n                            <DataManager />\r\n                        </ProtectedRoute>\r\n                    } />\r\n                    <Route path=\"/viewer/:imageId\" element={\r\n                        <ProtectedRoute>\r\n                            <ImageViewer />\r\n                        </ProtectedRoute>\r\n                    } />\r\n                    <Route path=\"/compare/:imageId\" element={\r\n                        <ProtectedRoute>\r\n                            <ComparisonView />\r\n                        </ProtectedRoute>\r\n                    } />\r\n                </Routes>\r\n            </Suspense>\r\n        </Router>\r\n    );\r\n}\r\n\r\n// 导出 App 组件\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}