{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\mri-web-app\\\\frontend\\\\src\\\\components\\\\ImageUpload\\\\ImageUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { message, Upload, Button, Space, Card, Progress, List, Select } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport './ImageUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\nconst ImageUpload = () => {\n  _s();\n  const [fileList, setFileList] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [previewImage, setPreviewImage] = useState(null);\n  const [uploadedImageId, setUploadedImageId] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [processingLogs, setProcessingLogs] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [patients, setPatients] = useState([]);\n\n  // 获取患者列表\n  useEffect(() => {\n    const fetchPatients = async () => {\n      try {\n        const response = await axios.get(`${API_BASE}/api/patients`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setPatients(response.data.patients);\n      } catch (error) {\n        message.error('获取患者列表失败');\n      }\n    };\n    fetchPatients();\n  }, []);\n  const handleUpload = async () => {\n    if (!selectedPatient) {\n      message.error('请先选择患者');\n      return;\n    }\n    const formData = new FormData();\n    fileList.forEach(file => {\n      formData.append('file', file);\n    });\n    formData.append('patient_id', selectedPatient);\n    setUploading(true);\n    setProgress(0);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`${API_BASE}/api/upload`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        }\n      });\n      if (response.data.status === 'success') {\n        setUploadedImageId(response.data.file_info.id);\n        message.success('上传成功');\n\n        // 获取预览图\n        const previewResponse = await axios.get(`${API_BASE}/api/preview/${response.data.file_info.filename}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (previewResponse.data.status === 'success') {\n          setPreviewImage(`data:image/png;base64,${previewResponse.data.image}`);\n        }\n      }\n    } catch (error) {\n      console.error('上传错误:', error);\n      message.error('上传失败');\n    } finally {\n      setUploading(false);\n      setProgress(0);\n      setFileList([]);\n    }\n  };\n  const handleProcess = async () => {\n    if (!uploadedImageId) {\n      message.error('请先上传图像');\n      return;\n    }\n    setProcessing(true);\n    setProcessingLogs([]);\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`${API_BASE}/api/process/${uploadedImageId}`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (response.data.status === 'processing') {\n        message.success('开始处理图像');\n        // 开始轮询处理状态\n        pollProcessingStatus(response.data.task_id);\n      }\n    } catch (error) {\n      console.error('处理错误:', error);\n      message.error('处理失败');\n      setProcessing(false);\n    }\n  };\n  const pollProcessingStatus = async taskId => {\n    const interval = setInterval(async () => {\n      try {\n        const response = await axios.get(`${API_BASE}/api/tasks/${taskId}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const {\n          status,\n          progress,\n          logs\n        } = response.data;\n        setProgress(progress);\n        setProcessingLogs(logs);\n        if (status === 'completed') {\n          clearInterval(interval);\n          setProcessing(false);\n          message.success('处理完成');\n        } else if (status === 'failed') {\n          clearInterval(interval);\n          setProcessing(false);\n          message.error('处理失败');\n        }\n      } catch (error) {\n        console.error('获取处理状态失败:', error);\n        clearInterval(interval);\n        setProcessing(false);\n        message.error('获取处理状态失败');\n      }\n    }, 2000);\n    return () => clearInterval(interval);\n  };\n  const uploadProps = {\n    onRemove: file => {\n      const index = fileList.indexOf(file);\n      const newFileList = fileList.slice();\n      newFileList.splice(index, 1);\n      setFileList(newFileList);\n    },\n    beforeUpload: file => {\n      setFileList([file]);\n      return false;\n    },\n    fileList\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-upload-container\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      title: \"\\u56FE\\u50CF\\u4E0A\\u4F20\\u4E0E\\u5904\\u7406\",\n      children: /*#__PURE__*/_jsxDEV(Space, {\n        direction: \"vertical\",\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-selector\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            style: {\n              width: '100%'\n            },\n            placeholder: \"\\u8BF7\\u9009\\u62E9\\u60A3\\u8005\",\n            onChange: setSelectedPatient,\n            options: patients.map(p => ({\n              label: p.name,\n              value: p.id\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Upload, {\n          ...uploadProps,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 27\n            }, this),\n            children: \"\\u9009\\u62E9\\u6587\\u4EF6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: handleUpload,\n          disabled: fileList.length === 0 || !selectedPatient,\n          loading: uploading,\n          style: {\n            marginTop: 16\n          },\n          children: uploading ? '上传中' : '开始上传'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), progress > 0 && /*#__PURE__*/_jsxDEV(Progress, {\n          percent: progress,\n          status: progress === 100 ? \"success\" : \"active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), previewImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u56FE\\u50CF\\u9884\\u89C8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: previewImage,\n            alt: \"\\u9884\\u89C8\",\n            className: \"preview-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), uploadedImageId && /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: handleProcess,\n          loading: processing,\n          style: {\n            marginTop: 16\n          },\n          children: processing ? '处理中' : '开始处理'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), processingLogs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"processing-logs\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u5904\\u7406\\u65E5\\u5FD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            size: \"small\",\n            bordered: true,\n            dataSource: processingLogs,\n            renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageUpload, \"M6ZMPwMIcEQdGw9BXl2BX0PQSfI=\");\n_c = ImageUpload;\nexport default ImageUpload;\nvar _c;\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"names":["React","useState","useEffect","axios","message","Upload","Button","Space","Card","Progress","List","Select","UploadOutlined","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","ImageUpload","_s","fileList","setFileList","uploading","setUploading","processing","setProcessing","previewImage","setPreviewImage","uploadedImageId","setUploadedImageId","progress","setProgress","processingLogs","setProcessingLogs","selectedPatient","setSelectedPatient","patients","setPatients","fetchPatients","response","get","headers","localStorage","getItem","data","error","handleUpload","formData","FormData","forEach","file","append","token","post","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","status","file_info","id","success","previewResponse","filename","image","console","handleProcess","pollProcessingStatus","task_id","taskId","interval","setInterval","logs","clearInterval","uploadProps","onRemove","index","indexOf","newFileList","slice","splice","beforeUpload","className","children","title","direction","style","width","placeholder","onChange","options","map","p","label","name","value","fileName","_jsxFileName","lineNumber","columnNumber","icon","type","onClick","disabled","length","loading","marginTop","percent","src","alt","size","bordered","dataSource","renderItem","item","Item","_c","$RefreshReg$"],"sources":["D:/GitHub/mri-web-app/frontend/src/components/ImageUpload/ImageUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { message, Upload, Button, Space, Card, Progress, List, Select } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport './ImageUpload.css';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\r\n\r\nconst ImageUpload = () => {\r\n  const [fileList, setFileList] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(null);\r\n  const [uploadedImageId, setUploadedImageId] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n  const [processingLogs, setProcessingLogs] = useState([]);\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  // 获取患者列表\r\n  useEffect(() => {\r\n    const fetchPatients = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE}/api/patients`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        setPatients(response.data.patients);\r\n      } catch (error) {\r\n        message.error('获取患者列表失败');\r\n      }\r\n    };\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedPatient) {\r\n      message.error('请先选择患者');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    fileList.forEach(file => {\r\n      formData.append('file', file);\r\n    });\r\n    formData.append('patient_id', selectedPatient);\r\n\r\n    setUploading(true);\r\n    setProgress(0);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(`${API_BASE}/api/upload`, formData, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setProgress(percentCompleted);\r\n        }\r\n      });\r\n\r\n      if (response.data.status === 'success') {\r\n        setUploadedImageId(response.data.file_info.id);\r\n        message.success('上传成功');\r\n        \r\n        // 获取预览图\r\n        const previewResponse = await axios.get(`${API_BASE}/api/preview/${response.data.file_info.filename}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n          }\r\n        });\r\n        \r\n        if (previewResponse.data.status === 'success') {\r\n          setPreviewImage(`data:image/png;base64,${previewResponse.data.image}`);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('上传错误:', error);\r\n      message.error('上传失败');\r\n    } finally {\r\n      setUploading(false);\r\n      setProgress(0);\r\n      setFileList([]);\r\n    }\r\n  };\r\n\r\n  const handleProcess = async () => {\r\n    if (!uploadedImageId) {\r\n      message.error('请先上传图像');\r\n      return;\r\n    }\r\n\r\n    setProcessing(true);\r\n    setProcessingLogs([]);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(`${API_BASE}/api/process/${uploadedImageId}`, {}, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        }\r\n      });\r\n\r\n      if (response.data.status === 'processing') {\r\n        message.success('开始处理图像');\r\n        // 开始轮询处理状态\r\n        pollProcessingStatus(response.data.task_id);\r\n      }\r\n    } catch (error) {\r\n      console.error('处理错误:', error);\r\n      message.error('处理失败');\r\n      setProcessing(false);\r\n    }\r\n  };\r\n\r\n  const pollProcessingStatus = async (taskId) => {\r\n    const interval = setInterval(async () => {\r\n      try {\r\n        const response = await axios.get(`${API_BASE}/api/tasks/${taskId}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n          }\r\n        });\r\n\r\n        const { status, progress, logs } = response.data;\r\n        setProgress(progress);\r\n        setProcessingLogs(logs);\r\n\r\n        if (status === 'completed') {\r\n          clearInterval(interval);\r\n          setProcessing(false);\r\n          message.success('处理完成');\r\n        } else if (status === 'failed') {\r\n          clearInterval(interval);\r\n          setProcessing(false);\r\n          message.error('处理失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('获取处理状态失败:', error);\r\n        clearInterval(interval);\r\n        setProcessing(false);\r\n        message.error('获取处理状态失败');\r\n      }\r\n    }, 2000);\r\n\r\n    return () => clearInterval(interval);\r\n  };\r\n\r\n  const uploadProps = {\r\n    onRemove: file => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n    },\r\n    beforeUpload: file => {\r\n      setFileList([file]);\r\n      return false;\r\n    },\r\n    fileList,\r\n  };\r\n\r\n  return (\r\n    <div className=\"image-upload-container\">\r\n      <Card title=\"图像上传与处理\">\r\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n          <div className=\"patient-selector\">\r\n            <Select\r\n              style={{ width: '100%' }}\r\n              placeholder=\"请选择患者\"\r\n              onChange={setSelectedPatient}\r\n              options={patients.map(p => ({ label: p.name, value: p.id }))}\r\n            />\r\n          </div>\r\n\r\n          <Upload {...uploadProps}>\r\n            <Button icon={<UploadOutlined />}>选择文件</Button>\r\n          </Upload>\r\n          \r\n          <Button\r\n            type=\"primary\"\r\n            onClick={handleUpload}\r\n            disabled={fileList.length === 0 || !selectedPatient}\r\n            loading={uploading}\r\n            style={{ marginTop: 16 }}\r\n          >\r\n            {uploading ? '上传中' : '开始上传'}\r\n          </Button>\r\n\r\n          {progress > 0 && (\r\n            <Progress percent={progress} status={progress === 100 ? \"success\" : \"active\"} />\r\n          )}\r\n\r\n          {previewImage && (\r\n            <div className=\"preview-section\">\r\n              <h3>图像预览</h3>\r\n              <img \r\n                src={previewImage} \r\n                alt=\"预览\" \r\n                className=\"preview-image\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {uploadedImageId && (\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={handleProcess}\r\n              loading={processing}\r\n              style={{ marginTop: 16 }}\r\n            >\r\n              {processing ? '处理中' : '开始处理'}\r\n            </Button>\r\n          )}\r\n\r\n          {processingLogs.length > 0 && (\r\n            <div className=\"processing-logs\">\r\n              <h3>处理日志</h3>\r\n              <List\r\n                size=\"small\"\r\n                bordered\r\n                dataSource={processingLogs}\r\n                renderItem={item => <List.Item>{item}</List.Item>}\r\n              />\r\n            </div>\r\n          )}\r\n        </Space>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}