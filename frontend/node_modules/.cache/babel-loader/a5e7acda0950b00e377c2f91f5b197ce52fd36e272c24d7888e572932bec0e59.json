{"ast":null,"code":"import canUseDom from \"./canUseDom\";\nimport contains from \"./contains\";\nconst APPEND_ORDER = 'data-rc-order';\nconst APPEND_PRIORITY = 'data-rc-priority';\nconst MARK_KEY = `rc-util-key`;\nconst containerCache = new Map();\nfunction getMark({\n  mark\n} = {}) {\n  if (mark) {\n    return mark.startsWith('data-') ? mark : `data-${mark}`;\n  }\n  return MARK_KEY;\n}\nfunction getContainer(option) {\n  if (option.attachTo) {\n    return option.attachTo;\n  }\n  const head = document.querySelector('head');\n  return head || document.body;\n}\nfunction getOrder(prepend) {\n  if (prepend === 'queue') {\n    return 'prependQueue';\n  }\n  return prepend ? 'prepend' : 'append';\n}\n\n/**\n * Find style which inject by rc-util\n */\nfunction findStyles(container) {\n  return Array.from((containerCache.get(container) || container).children).filter(node => node.tagName === 'STYLE');\n}\nexport function injectCSS(css, option = {}) {\n  if (!canUseDom()) {\n    return null;\n  }\n  const {\n    csp,\n    prepend,\n    priority = 0\n  } = option;\n  const mergedOrder = getOrder(prepend);\n  const isPrependQueue = mergedOrder === 'prependQueue';\n  const styleNode = document.createElement('style');\n  styleNode.setAttribute(APPEND_ORDER, mergedOrder);\n  if (isPrependQueue && priority) {\n    styleNode.setAttribute(APPEND_PRIORITY, `${priority}`);\n  }\n  if (csp?.nonce) {\n    styleNode.nonce = csp?.nonce;\n  }\n  styleNode.innerHTML = css;\n  const container = getContainer(option);\n  const {\n    firstChild\n  } = container;\n  if (prepend) {\n    // If is queue `prepend`, it will prepend first style and then append rest style\n    if (isPrependQueue) {\n      const existStyle = (option.styles || findStyles(container)).filter(node => {\n        // Ignore style which not injected by rc-util with prepend\n        if (!['prepend', 'prependQueue'].includes(node.getAttribute(APPEND_ORDER))) {\n          return false;\n        }\n\n        // Ignore style which priority less then new style\n        const nodePriority = Number(node.getAttribute(APPEND_PRIORITY) || 0);\n        return priority >= nodePriority;\n      });\n      if (existStyle.length) {\n        container.insertBefore(styleNode, existStyle[existStyle.length - 1].nextSibling);\n        return styleNode;\n      }\n    }\n\n    // Use `insertBefore` as `prepend`\n    container.insertBefore(styleNode, firstChild);\n  } else {\n    container.appendChild(styleNode);\n  }\n  return styleNode;\n}\nfunction findExistNode(key, option = {}) {\n  let {\n    styles\n  } = option;\n  styles ||= findStyles(getContainer(option));\n  return styles.find(node => node.getAttribute(getMark(option)) === key);\n}\nexport function removeCSS(key, option = {}) {\n  const existNode = findExistNode(key, option);\n  if (existNode) {\n    const container = getContainer(option);\n    container.removeChild(existNode);\n  }\n}\n\n/**\n * qiankun will inject `appendChild` to insert into other\n */\nfunction syncRealContainer(container, option) {\n  const cachedRealContainer = containerCache.get(container);\n\n  // Find real container when not cached or cached container removed\n  if (!cachedRealContainer || !contains(document, cachedRealContainer)) {\n    const placeholderStyle = injectCSS('', option);\n    const {\n      parentNode\n    } = placeholderStyle;\n    containerCache.set(container, parentNode);\n    container.removeChild(placeholderStyle);\n  }\n}\n\n/**\n * manually clear container cache to avoid global cache in unit testes\n */\nexport function clearContainerCache() {\n  containerCache.clear();\n}\nexport function updateCSS(css, key, originOption = {}) {\n  const container = getContainer(originOption);\n  const styles = findStyles(container);\n  const option = {\n    ...originOption,\n    styles\n  };\n\n  // Sync real parent\n  syncRealContainer(container, option);\n  const existNode = findExistNode(key, option);\n  if (existNode) {\n    if (option.csp?.nonce && existNode.nonce !== option.csp?.nonce) {\n      existNode.nonce = option.csp?.nonce;\n    }\n    if (existNode.innerHTML !== css) {\n      existNode.innerHTML = css;\n    }\n    return existNode;\n  }\n  const newNode = injectCSS(css, option);\n  newNode.setAttribute(getMark(option), key);\n  return newNode;\n}","map":{"version":3,"names":["canUseDom","contains","APPEND_ORDER","APPEND_PRIORITY","MARK_KEY","containerCache","Map","getMark","mark","startsWith","getContainer","option","attachTo","head","document","querySelector","body","getOrder","prepend","findStyles","container","Array","from","get","children","filter","node","tagName","injectCSS","css","csp","priority","mergedOrder","isPrependQueue","styleNode","createElement","setAttribute","nonce","innerHTML","firstChild","existStyle","styles","includes","getAttribute","nodePriority","Number","length","insertBefore","nextSibling","appendChild","findExistNode","key","find","removeCSS","existNode","removeChild","syncRealContainer","cachedRealContainer","placeholderStyle","parentNode","set","clearContainerCache","clear","updateCSS","originOption","newNode"],"sources":["D:/GitHub/mri-web-app/frontend/node_modules/@rc-component/util/es/Dom/dynamicCSS.js"],"sourcesContent":["import canUseDom from \"./canUseDom\";\nimport contains from \"./contains\";\nconst APPEND_ORDER = 'data-rc-order';\nconst APPEND_PRIORITY = 'data-rc-priority';\nconst MARK_KEY = `rc-util-key`;\nconst containerCache = new Map();\nfunction getMark({\n  mark\n} = {}) {\n  if (mark) {\n    return mark.startsWith('data-') ? mark : `data-${mark}`;\n  }\n  return MARK_KEY;\n}\nfunction getContainer(option) {\n  if (option.attachTo) {\n    return option.attachTo;\n  }\n  const head = document.querySelector('head');\n  return head || document.body;\n}\nfunction getOrder(prepend) {\n  if (prepend === 'queue') {\n    return 'prependQueue';\n  }\n  return prepend ? 'prepend' : 'append';\n}\n\n/**\n * Find style which inject by rc-util\n */\nfunction findStyles(container) {\n  return Array.from((containerCache.get(container) || container).children).filter(node => node.tagName === 'STYLE');\n}\nexport function injectCSS(css, option = {}) {\n  if (!canUseDom()) {\n    return null;\n  }\n  const {\n    csp,\n    prepend,\n    priority = 0\n  } = option;\n  const mergedOrder = getOrder(prepend);\n  const isPrependQueue = mergedOrder === 'prependQueue';\n  const styleNode = document.createElement('style');\n  styleNode.setAttribute(APPEND_ORDER, mergedOrder);\n  if (isPrependQueue && priority) {\n    styleNode.setAttribute(APPEND_PRIORITY, `${priority}`);\n  }\n  if (csp?.nonce) {\n    styleNode.nonce = csp?.nonce;\n  }\n  styleNode.innerHTML = css;\n  const container = getContainer(option);\n  const {\n    firstChild\n  } = container;\n  if (prepend) {\n    // If is queue `prepend`, it will prepend first style and then append rest style\n    if (isPrependQueue) {\n      const existStyle = (option.styles || findStyles(container)).filter(node => {\n        // Ignore style which not injected by rc-util with prepend\n        if (!['prepend', 'prependQueue'].includes(node.getAttribute(APPEND_ORDER))) {\n          return false;\n        }\n\n        // Ignore style which priority less then new style\n        const nodePriority = Number(node.getAttribute(APPEND_PRIORITY) || 0);\n        return priority >= nodePriority;\n      });\n      if (existStyle.length) {\n        container.insertBefore(styleNode, existStyle[existStyle.length - 1].nextSibling);\n        return styleNode;\n      }\n    }\n\n    // Use `insertBefore` as `prepend`\n    container.insertBefore(styleNode, firstChild);\n  } else {\n    container.appendChild(styleNode);\n  }\n  return styleNode;\n}\nfunction findExistNode(key, option = {}) {\n  let {\n    styles\n  } = option;\n  styles ||= findStyles(getContainer(option));\n  return styles.find(node => node.getAttribute(getMark(option)) === key);\n}\nexport function removeCSS(key, option = {}) {\n  const existNode = findExistNode(key, option);\n  if (existNode) {\n    const container = getContainer(option);\n    container.removeChild(existNode);\n  }\n}\n\n/**\n * qiankun will inject `appendChild` to insert into other\n */\nfunction syncRealContainer(container, option) {\n  const cachedRealContainer = containerCache.get(container);\n\n  // Find real container when not cached or cached container removed\n  if (!cachedRealContainer || !contains(document, cachedRealContainer)) {\n    const placeholderStyle = injectCSS('', option);\n    const {\n      parentNode\n    } = placeholderStyle;\n    containerCache.set(container, parentNode);\n    container.removeChild(placeholderStyle);\n  }\n}\n\n/**\n * manually clear container cache to avoid global cache in unit testes\n */\nexport function clearContainerCache() {\n  containerCache.clear();\n}\nexport function updateCSS(css, key, originOption = {}) {\n  const container = getContainer(originOption);\n  const styles = findStyles(container);\n  const option = {\n    ...originOption,\n    styles\n  };\n\n  // Sync real parent\n  syncRealContainer(container, option);\n  const existNode = findExistNode(key, option);\n  if (existNode) {\n    if (option.csp?.nonce && existNode.nonce !== option.csp?.nonce) {\n      existNode.nonce = option.csp?.nonce;\n    }\n    if (existNode.innerHTML !== css) {\n      existNode.innerHTML = css;\n    }\n    return existNode;\n  }\n  const newNode = injectCSS(css, option);\n  newNode.setAttribute(getMark(option), key);\n  return newNode;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}