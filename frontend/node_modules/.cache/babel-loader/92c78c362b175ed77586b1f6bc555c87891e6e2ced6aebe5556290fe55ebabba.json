{"ast":null,"code":"import axios from 'axios';\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\nexport const axiosInstance = axios.create({\n  baseURL: API_BASE,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json, multipart/form-data'\n  },\n  withCredentials: true\n});\n\n// 添加请求拦截器\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  // 如果是文件上传请求，修改 Content-Type\n  if (config.data instanceof FormData) {\n    config.headers['Content-Type'] = 'multipart/form-data';\n  }\n  console.log('发送请求:', {\n    url: config.url,\n    method: config.method,\n    headers: config.headers,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error('请求错误:', error);\n  return Promise.reject(error);\n});\n\n// 添加响应拦截器\naxiosInstance.interceptors.response.use(response => {\n  console.log('收到响应:', {\n    url: response.config.url,\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$config, _error$config2, _error$config3, _error$response3;\n  console.error('响应错误:', {\n    message: error.message,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    config: {\n      url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n      method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n      headers: (_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : _error$config3.headers\n    }\n  });\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    console.error('认证错误:', error.response.data);\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","API_BASE","process","env","REACT_APP_API_BASE","axiosInstance","create","baseURL","timeout","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","data","FormData","console","log","url","method","error","Promise","reject","response","status","_error$response","_error$response2","_error$config","_error$config2","_error$config3","_error$response3","message","removeItem","window","location","href"],"sources":["D:/GitHub/mri-web-app/frontend/src/utils/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\r\n\r\nexport const axiosInstance = axios.create({\r\n    baseURL: API_BASE,\r\n    timeout: 10000,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json, multipart/form-data'\r\n    },\r\n    withCredentials: true\r\n});\r\n\r\n// 添加请求拦截器\r\naxiosInstance.interceptors.request.use(\r\n    (config) => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            config.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        \r\n        // 如果是文件上传请求，修改 Content-Type\r\n        if (config.data instanceof FormData) {\r\n            config.headers['Content-Type'] = 'multipart/form-data';\r\n        }\r\n        \r\n        console.log('发送请求:', {\r\n            url: config.url,\r\n            method: config.method,\r\n            headers: config.headers,\r\n            data: config.data\r\n        });\r\n        return config;\r\n    },\r\n    (error) => {\r\n        console.error('请求错误:', error);\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// 添加响应拦截器\r\naxiosInstance.interceptors.response.use(\r\n    (response) => {\r\n        console.log('收到响应:', {\r\n            url: response.config.url,\r\n            status: response.status,\r\n            data: response.data\r\n        });\r\n        return response;\r\n    },\r\n    (error) => {\r\n        console.error('响应错误:', {\r\n            message: error.message,\r\n            status: error.response?.status,\r\n            data: error.response?.data,\r\n            config: {\r\n                url: error.config?.url,\r\n                method: error.config?.method,\r\n                headers: error.config?.headers\r\n            }\r\n        });\r\n\r\n        if (error.response?.status === 401) {\r\n            console.error('认证错误:', error.response.data);\r\n            localStorage.removeItem('token');\r\n            window.location.href = '/login';\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    }\r\n); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}