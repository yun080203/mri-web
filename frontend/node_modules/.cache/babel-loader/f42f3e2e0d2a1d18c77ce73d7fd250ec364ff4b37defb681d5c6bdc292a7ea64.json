{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Icon from \"./Icon\";\nconst customCache = new Set();\nfunction isValidCustomScriptUrl(scriptUrl) {\n  return Boolean(typeof scriptUrl === 'string' && scriptUrl.length && !customCache.has(scriptUrl));\n}\nfunction createScriptUrlElements(scriptUrls, index = 0) {\n  const currentScriptUrl = scriptUrls[index];\n  if (isValidCustomScriptUrl(currentScriptUrl)) {\n    const script = document.createElement('script');\n    script.setAttribute('src', currentScriptUrl);\n    script.setAttribute('data-namespace', currentScriptUrl);\n    if (scriptUrls.length > index + 1) {\n      script.onload = () => {\n        createScriptUrlElements(scriptUrls, index + 1);\n      };\n      script.onerror = () => {\n        createScriptUrlElements(scriptUrls, index + 1);\n      };\n    }\n    customCache.add(currentScriptUrl);\n    document.body.appendChild(script);\n  }\n}\nexport default function create(options = {}) {\n  const {\n    scriptUrl,\n    extraCommonProps = {}\n  } = options;\n\n  /**\n   * DOM API required.\n   * Make sure in browser environment.\n   * The Custom Icon will create a <script/>\n   * that loads SVG symbols and insert the SVG Element into the document body.\n   */\n  if (scriptUrl && typeof document !== 'undefined' && typeof window !== 'undefined' && typeof document.createElement === 'function') {\n    if (Array.isArray(scriptUrl)) {\n      // 因为iconfont资源会把svg插入before，所以前加载相同type会覆盖后加载，为了数组覆盖顺序，倒叙插入\n      createScriptUrlElements(scriptUrl.reverse());\n    } else {\n      createScriptUrlElements([scriptUrl]);\n    }\n  }\n  const Iconfont = /*#__PURE__*/React.forwardRef((props, ref) => {\n    const {\n      type,\n      children,\n      ...restProps\n    } = props;\n\n    // children > type\n    let content = null;\n    if (props.type) {\n      content = /*#__PURE__*/React.createElement(\"use\", {\n        xlinkHref: `#${type}`\n      });\n    }\n    if (children) {\n      content = children;\n    }\n    return /*#__PURE__*/React.createElement(Icon, _extends({}, extraCommonProps, restProps, {\n      ref: ref\n    }), content);\n  });\n  Iconfont.displayName = 'Iconfont';\n  return Iconfont;\n}","map":{"version":3,"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","Icon","customCache","Set","isValidCustomScriptUrl","scriptUrl","Boolean","has","createScriptUrlElements","scriptUrls","index","currentScriptUrl","script","document","createElement","setAttribute","onload","onerror","add","body","appendChild","create","options","extraCommonProps","window","Array","isArray","reverse","Iconfont","forwardRef","props","ref","type","children","restProps","content","xlinkHref","displayName"],"sources":["D:/GitHub/mri-web-app/frontend/node_modules/@ant-design/icons/es/components/IconFont.js"],"sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport Icon from \"./Icon\";\nconst customCache = new Set();\nfunction isValidCustomScriptUrl(scriptUrl) {\n  return Boolean(typeof scriptUrl === 'string' && scriptUrl.length && !customCache.has(scriptUrl));\n}\nfunction createScriptUrlElements(scriptUrls, index = 0) {\n  const currentScriptUrl = scriptUrls[index];\n  if (isValidCustomScriptUrl(currentScriptUrl)) {\n    const script = document.createElement('script');\n    script.setAttribute('src', currentScriptUrl);\n    script.setAttribute('data-namespace', currentScriptUrl);\n    if (scriptUrls.length > index + 1) {\n      script.onload = () => {\n        createScriptUrlElements(scriptUrls, index + 1);\n      };\n      script.onerror = () => {\n        createScriptUrlElements(scriptUrls, index + 1);\n      };\n    }\n    customCache.add(currentScriptUrl);\n    document.body.appendChild(script);\n  }\n}\nexport default function create(options = {}) {\n  const {\n    scriptUrl,\n    extraCommonProps = {}\n  } = options;\n\n  /**\n   * DOM API required.\n   * Make sure in browser environment.\n   * The Custom Icon will create a <script/>\n   * that loads SVG symbols and insert the SVG Element into the document body.\n   */\n  if (scriptUrl && typeof document !== 'undefined' && typeof window !== 'undefined' && typeof document.createElement === 'function') {\n    if (Array.isArray(scriptUrl)) {\n      // 因为iconfont资源会把svg插入before，所以前加载相同type会覆盖后加载，为了数组覆盖顺序，倒叙插入\n      createScriptUrlElements(scriptUrl.reverse());\n    } else {\n      createScriptUrlElements([scriptUrl]);\n    }\n  }\n  const Iconfont = /*#__PURE__*/React.forwardRef((props, ref) => {\n    const {\n      type,\n      children,\n      ...restProps\n    } = props;\n\n    // children > type\n    let content = null;\n    if (props.type) {\n      content = /*#__PURE__*/React.createElement(\"use\", {\n        xlinkHref: `#${type}`\n      });\n    }\n    if (children) {\n      content = children;\n    }\n    return /*#__PURE__*/React.createElement(Icon, _extends({}, extraCommonProps, restProps, {\n      ref: ref\n    }), content);\n  });\n  Iconfont.displayName = 'Iconfont';\n  return Iconfont;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}