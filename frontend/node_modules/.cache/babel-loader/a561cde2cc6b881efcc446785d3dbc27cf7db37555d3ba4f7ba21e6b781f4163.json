{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\mri-web-app\\\\frontend\\\\src\\\\components\\\\Viewer\\\\DICOMViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as cornerstone from 'cornerstone-core';\nimport * as cornerstoneTools from 'cornerstone-tools';\nimport * as cornerstoneMath from 'cornerstone-math';\nimport Hammer from 'hammerjs';\nimport dicomParser from 'dicom-parser';\nimport axios from 'axios';\n\n// 配置 cornerstone\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ncornerstoneTools.external.cornerstone = cornerstone;\ncornerstoneTools.external.Hammer = Hammer;\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath;\nconst DICOMViewer = ({\n  imageId,\n  onLoadError\n}) => {\n  _s();\n  const elementRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const cancelTokenSource = useRef(null);\n  useEffect(() => {\n    if (!elementRef.current) return;\n\n    // 初始化 cornerstone\n    cornerstone.enable(elementRef.current);\n\n    // 创建取消令牌\n    cancelTokenSource.current = axios.CancelToken.source();\n    const loadImage = async () => {\n      try {\n        setIsLoading(true);\n        const response = await axios.get(imageId, {\n          responseType: 'arraybuffer',\n          cancelToken: cancelTokenSource.current.token\n        });\n        const byteArray = new Uint8Array(response.data);\n        const dataSet = dicomParser.parseDicom(byteArray);\n\n        // 获取像素数据\n        const pixelDataElement = dataSet.elements.x7fe00010;\n        const pixelData = new Uint16Array(response.data, pixelDataElement.dataOffset, pixelDataElement.length / 2);\n\n        // 创建图像对象\n        const image = {\n          imageId: imageId,\n          minPixelValue: 0,\n          maxPixelValue: 65535,\n          slope: dataSet.floatString('x00281053', 1),\n          intercept: dataSet.floatString('x00281052', 0),\n          rows: dataSet.uint16('x00280010'),\n          columns: dataSet.uint16('x00280011'),\n          height: dataSet.uint16('x00280010'),\n          width: dataSet.uint16('x00280011'),\n          color: false,\n          columnPixelSpacing: dataSet.floatString('x00280030', 1),\n          rowPixelSpacing: dataSet.floatString('x00280030', 1),\n          sizeInBytes: pixelData.length * 2,\n          getPixelData: () => pixelData,\n          getRows: () => dataSet.uint16('x00280010'),\n          getColumns: () => dataSet.uint16('x00280011'),\n          getHeight: () => dataSet.uint16('x00280010'),\n          getWidth: () => dataSet.uint16('x00280011'),\n          getColor: () => false,\n          getColumnPixelSpacing: () => dataSet.floatString('x00280030', 1),\n          getRowPixelSpacing: () => dataSet.floatString('x00280030', 1),\n          getSlope: () => dataSet.floatString('x00281053', 1),\n          getIntercept: () => dataSet.floatString('x00281052', 0),\n          getWindowCenter: () => dataSet.floatString('x00281050', 0),\n          getWindowWidth: () => dataSet.floatString('x00281051', 0),\n          getStatus: () => 0,\n          getImageId: () => imageId,\n          getImageIdIndex: () => 0\n        };\n\n        // 显示图像\n        cornerstone.displayImage(elementRef.current, image);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('加载DICOM图像失败:', error);\n        setIsLoading(false);\n        if (onLoadError) {\n          onLoadError(error);\n        }\n      }\n    };\n    loadImage();\n\n    // 清理函数\n    return () => {\n      if (cancelTokenSource.current) {\n        cancelTokenSource.current.cancel('组件卸载，取消请求');\n      }\n      cornerstone.disable(elementRef.current);\n    };\n  }, [imageId, onLoadError]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dicom-viewer\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\u52A0\\u8F7D\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: elementRef,\n      className: \"cornerstone-element\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(DICOMViewer, \"tGb7pS7swFeYxART+ouw8g5suTg=\");\n_c = DICOMViewer;\nexport default DICOMViewer;\nvar _c;\n$RefreshReg$(_c, \"DICOMViewer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","cornerstone","cornerstoneTools","cornerstoneMath","Hammer","dicomParser","axios","jsxDEV","_jsxDEV","external","DICOMViewer","imageId","onLoadError","_s","elementRef","isLoading","setIsLoading","cancelTokenSource","current","enable","CancelToken","source","loadImage","response","get","responseType","cancelToken","token","byteArray","Uint8Array","data","dataSet","parseDicom","pixelDataElement","elements","x7fe00010","pixelData","Uint16Array","dataOffset","length","image","minPixelValue","maxPixelValue","slope","floatString","intercept","rows","uint16","columns","height","width","color","columnPixelSpacing","rowPixelSpacing","sizeInBytes","getPixelData","getRows","getColumns","getHeight","getWidth","getColor","getColumnPixelSpacing","getRowPixelSpacing","getSlope","getIntercept","getWindowCenter","getWindowWidth","getStatus","getImageId","getImageIdIndex","displayImage","error","console","cancel","disable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["D:/GitHub/mri-web-app/frontend/src/components/Viewer/DICOMViewer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as cornerstone from 'cornerstone-core';\r\nimport * as cornerstoneTools from 'cornerstone-tools';\r\nimport * as cornerstoneMath from 'cornerstone-math';\r\nimport Hammer from 'hammerjs';\r\nimport dicomParser from 'dicom-parser';\r\nimport axios from 'axios';\r\n\r\n// 配置 cornerstone\r\ncornerstoneTools.external.cornerstone = cornerstone;\r\ncornerstoneTools.external.Hammer = Hammer;\r\ncornerstoneTools.external.cornerstoneMath = cornerstoneMath;\r\n\r\nconst DICOMViewer = ({ imageId, onLoadError }) => {\r\n    const elementRef = useRef(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const cancelTokenSource = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (!elementRef.current) return;\r\n\r\n        // 初始化 cornerstone\r\n        cornerstone.enable(elementRef.current);\r\n\r\n        // 创建取消令牌\r\n        cancelTokenSource.current = axios.CancelToken.source();\r\n\r\n        const loadImage = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const response = await axios.get(imageId, {\r\n                    responseType: 'arraybuffer',\r\n                    cancelToken: cancelTokenSource.current.token\r\n                });\r\n                \r\n                const byteArray = new Uint8Array(response.data);\r\n                const dataSet = dicomParser.parseDicom(byteArray);\r\n                \r\n                // 获取像素数据\r\n                const pixelDataElement = dataSet.elements.x7fe00010;\r\n                const pixelData = new Uint16Array(response.data, pixelDataElement.dataOffset, pixelDataElement.length / 2);\r\n                \r\n                // 创建图像对象\r\n                const image = {\r\n                    imageId: imageId,\r\n                    minPixelValue: 0,\r\n                    maxPixelValue: 65535,\r\n                    slope: dataSet.floatString('x00281053', 1),\r\n                    intercept: dataSet.floatString('x00281052', 0),\r\n                    rows: dataSet.uint16('x00280010'),\r\n                    columns: dataSet.uint16('x00280011'),\r\n                    height: dataSet.uint16('x00280010'),\r\n                    width: dataSet.uint16('x00280011'),\r\n                    color: false,\r\n                    columnPixelSpacing: dataSet.floatString('x00280030', 1),\r\n                    rowPixelSpacing: dataSet.floatString('x00280030', 1),\r\n                    sizeInBytes: pixelData.length * 2,\r\n                    getPixelData: () => pixelData,\r\n                    getRows: () => dataSet.uint16('x00280010'),\r\n                    getColumns: () => dataSet.uint16('x00280011'),\r\n                    getHeight: () => dataSet.uint16('x00280010'),\r\n                    getWidth: () => dataSet.uint16('x00280011'),\r\n                    getColor: () => false,\r\n                    getColumnPixelSpacing: () => dataSet.floatString('x00280030', 1),\r\n                    getRowPixelSpacing: () => dataSet.floatString('x00280030', 1),\r\n                    getSlope: () => dataSet.floatString('x00281053', 1),\r\n                    getIntercept: () => dataSet.floatString('x00281052', 0),\r\n                    getWindowCenter: () => dataSet.floatString('x00281050', 0),\r\n                    getWindowWidth: () => dataSet.floatString('x00281051', 0),\r\n                    getStatus: () => 0,\r\n                    getImageId: () => imageId,\r\n                    getImageIdIndex: () => 0\r\n                };\r\n\r\n                // 显示图像\r\n                cornerstone.displayImage(elementRef.current, image);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                console.error('加载DICOM图像失败:', error);\r\n                setIsLoading(false);\r\n                if (onLoadError) {\r\n                    onLoadError(error);\r\n                }\r\n            }\r\n        };\r\n\r\n        loadImage();\r\n\r\n        // 清理函数\r\n        return () => {\r\n            if (cancelTokenSource.current) {\r\n                cancelTokenSource.current.cancel('组件卸载，取消请求');\r\n            }\r\n            cornerstone.disable(elementRef.current);\r\n        };\r\n    }, [imageId, onLoadError]);\r\n\r\n    return (\r\n        <div className=\"dicom-viewer\">\r\n            {isLoading && <div className=\"loading\">加载中...</div>}\r\n            <div ref={elementRef} className=\"cornerstone-element\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DICOMViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}